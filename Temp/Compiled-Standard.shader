// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Standard" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo", 2D) = "white" { }
 _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _GlossMapScale ("Smoothness Scale", Range(0.000000,1.000000)) = 1.000000
[Enum(Metallic Alpha,0,Albedo Alpha,1)]  _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0.000000
[Gamma]  _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
 _MetallicGlossMap ("Metallic", 2D) = "white" { }
[ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
[ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
 _BumpScale ("Scale", Float) = 1.000000
 _BumpMap ("Normal Map", 2D) = "bump" { }
 _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
 _ParallaxMap ("Height Map", 2D) = "black" { }
 _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
 _OcclusionMap ("Occlusion", 2D) = "white" { }
 _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
 _EmissionMap ("Emission", 2D) = "white" { }
 _DetailMask ("Detail Mask", 2D) = "white" { }
 _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
 _DetailNormalMapScale ("Scale", Float) = 1.000000
 _DetailNormalMap ("Normal Map", 2D) = "bump" { }
[Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
[HideInInspector]  _Mode ("__mode", Float) = 0.000000
[HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
[HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
[HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
}
SubShader { 
 LOD 300
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //        d3d11: 33 avg math (22..55)
 // Stats for Fragment shader:
 //        d3d11: 156 avg math (137..178), 5 avg texture (3..7), 6 avg branch (6..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 137 math, 13 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r2.w, cb3[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
  23:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  25:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r2.w, r3.w
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  33: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r3.w, -cb0[9].y, l(1.000000)
  35: mad r3.w, r4.y, cb0[9].y, r3.w
  36: add r4.x, -cb0[8].w, l(1.000000)
  37: dp3 r4.y, r3.xyzx, r2.xyzx
  38: add r4.y, r4.y, r4.y
  39: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  40: mul r5.xyz, r2.wwww, cb0[2].xyzx
  41: lt r2.w, l(0.000000), cb2[2].w
  42: if_nz r2.w
  43:   dp3 r2.w, r4.yzwy, r4.yzwy
  44:   rsq r2.w, r2.w
  45:   mul r6.xyz, r2.wwww, r4.yzwy
  46:   mov r7.x, v3.w
  47:   mov r7.y, v4.w
  48:   mov r7.z, v5.w
  49:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  50:   div r8.xyz, r8.xyzx, r6.xyzx
  51:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  52:   div r9.xyz, r9.xyzx, r6.xyzx
  53:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  54:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  55:   min r2.w, r8.y, r8.x
  56:   min r2.w, r8.z, r2.w
  57:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  58:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  59: else 
  60:   mov r6.xyz, r4.yzwy
  61: endif 
  62: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  63: mul r2.w, r2.w, r4.x
  64: mul r2.w, r2.w, l(6.000000)
  65: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r2.w
  66: add r5.w, r6.w, l(-1.000000)
  67: mad r5.w, cb2[3].w, r5.w, l(1.000000)
  68: mul r5.w, r5.w, cb2[3].x
  69: mul r7.xyz, r6.xyzx, r5.wwww
  70: lt r6.w, cb2[1].w, l(0.999990)
  71: if_nz r6.w
  72:   lt r6.w, l(0.000000), cb2[6].w
  73:   if_nz r6.w
  74:     dp3 r6.w, r4.yzwy, r4.yzwy
  75:     rsq r6.w, r6.w
  76:     mul r8.xyz, r4.yzwy, r6.wwww
  77:     mov r9.x, v3.w
  78:     mov r9.y, v4.w
  79:     mov r9.z, v5.w
  80:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  81:     div r10.xyz, r10.xyzx, r8.xyzx
  82:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  83:     div r11.xyz, r11.xyzx, r8.xyzx
  84:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  85:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  86:     min r6.w, r10.y, r10.x
  87:     min r6.w, r10.z, r6.w
  88:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  89:     mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
  90:   endif 
  91:   sample_l r8.xyzw, r4.yzwy, t3.xyzw, s0, r2.w
  92:   add r2.w, r8.w, l(-1.000000)
  93:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
  94:   mul r2.w, r2.w, cb2[7].x
  95:   mul r4.yzw, r8.xxyz, r2.wwww
  96:   mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
  97:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  98: endif 
  99: mul r4.yzw, r3.wwww, r7.xxyz
 100: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 101: dp3 r1.w, r6.xyzx, r6.xyzx
 102: max r1.w, r1.w, l(0.001000)
 103: rsq r1.w, r1.w
 104: mul r6.xyz, r1.wwww, r6.xyzx
 105: dp3 r1.w, r2.xyzx, -r3.xyzx
 106: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 107: dp3_sat r2.x, r2.xyzx, r6.xyzx
 108: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 109: mul r2.z, r2.y, r2.y
 110: dp2 r2.z, r2.zzzz, r4.xxxx
 111: add r2.z, r2.z, l(-0.500000)
 112: add r3.x, -r2.w, l(1.000000)
 113: mul r3.y, r3.x, r3.x
 114: mul r3.y, r3.y, r3.y
 115: mul r3.x, r3.x, r3.y
 116: mad r3.x, r2.z, r3.x, l(1.000000)
 117: add r3.y, -|r1.w|, l(1.000000)
 118: mul r3.z, r3.y, r3.y
 119: mul r3.z, r3.z, r3.z
 120: mul r3.y, r3.y, r3.z
 121: mad r2.z, r2.z, r3.y, l(1.000000)
 122: mul r2.z, r2.z, r3.x
 123: mul r2.z, r2.w, r2.z
 124: mul r3.x, r4.x, r4.x
 125: max r3.x, r3.x, l(0.002000)
 126: add r3.z, -r3.x, l(1.000000)
 127: mad r3.w, |r1.w|, r3.z, r3.x
 128: mad r3.z, r2.w, r3.z, r3.x
 129: mul r1.w, |r1.w|, r3.z
 130: mad r1.w, r2.w, r3.w, r1.w
 131: add r1.w, r1.w, l(0.000010)
 132: div r1.w, l(0.500000), r1.w
 133: mul r3.z, r3.x, r3.x
 134: mad r3.w, r2.x, r3.z, -r2.x
 135: mad r2.x, r3.w, r2.x, l(1.000000)
 136: mul r3.z, r3.z, l(0.318310)
 137: mad r2.x, r2.x, r2.x, l(0.000000)
 138: div r2.x, r3.z, r2.x
 139: mul r1.w, r1.w, r2.x
 140: mul r1.w, r1.w, l(3.141593)
 141: max r1.w, r1.w, l(0.000100)
 142: sqrt r1.w, r1.w
 143: mul r1.w, r2.w, r1.w
 144: mul r2.x, r3.x, l(0.280000)
 145: mad r2.x, -r2.x, r4.x, l(1.000000)
 146: dp3 r2.w, r0.xyzx, r0.xyzx
 147: ne r2.w, r2.w, l(0.000000)
 148: and r2.w, r2.w, l(0x3f800000)
 149: mul r1.w, r1.w, r2.w
 150: add r0.w, -r0.w, l(1.000000)
 151: add_sat r0.w, r0.w, cb0[8].w
 152: mul r3.xzw, r2.zzzz, r5.xxyz
 153: mul r5.xyz, r5.xyzx, r1.wwww
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.y, r1.w, r1.w
 156: mul r2.y, r2.y, r2.y
 157: mul r1.w, r1.w, r2.y
 158: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 159: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 160: mul r2.yzw, r2.yyzw, r5.xxyz
 161: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 162: mul r2.xyz, r4.yzwy, r2.xxxx
 163: add r3.xzw, -r0.xxyz, r0.wwww
 164: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 165: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 166: mov o0.w, l(1.000000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTPROBE_SH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 167 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r4.x, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r4.x
  15: eq r0.w, cb3[0].x, l(1.000000)
  16: if_nz r0.w
  17:   eq r1.w, cb3[0].y, l(1.000000)
  18:   mul r4.yzw, v4.wwww, cb3[2].xxyz
  19:   mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
  20:   mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
  21:   add r4.yzw, r4.yyzw, cb3[4].xxyz
  22:   mov r5.y, v3.w
  23:   mov r5.z, v4.w
  24:   mov r5.w, v5.w
  25:   movc r4.yzw, r1.wwww, r4.yyzw, r5.yyzw
  26:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  27:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  28:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  29:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  30:   max r5.x, r1.w, r4.y
  31:   sample r5.xyzw, r5.xzwx, t4.xyzw, s1
  32: else 
  33:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  36: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  37: add r4.y, -cb0[9].y, l(1.000000)
  38: mad r4.y, r5.y, cb0[9].y, r4.y
  39: add r4.z, -cb0[8].w, l(1.000000)
  40: dp3 r4.w, r3.yzwy, r2.xyzx
  41: add r4.w, r4.w, r4.w
  42: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  43: mul r6.xyz, r1.wwww, cb0[2].xyzx
  44: if_nz r0.w
  45:   eq r0.w, cb3[0].y, l(1.000000)
  46:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  47:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  48:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  49:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  50:   mov r8.y, v3.w
  51:   mov r8.z, v4.w
  52:   mov r8.w, v5.w
  53:   movc r7.xyz, r0.wwww, r7.xyzx, r8.yzwy
  54:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  55:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  56:   mul r0.w, r7.y, l(0.250000)
  57:   mul r1.w, cb3[0].z, l(0.500000)
  58:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  59:   max r0.w, r0.w, r1.w
  60:   min r7.x, r4.w, r0.w
  61:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  62:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  63:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  64:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  65:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  66:   mov r2.w, l(1.000000)
  67:   dp4 r8.x, r8.xyzw, r2.xyzw
  68:   dp4 r8.y, r9.xyzw, r2.xyzw
  69:   dp4 r8.z, r7.xyzw, r2.xyzw
  70: else 
  71:   mov r2.w, l(1.000000)
  72:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  73:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  74:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  75: endif 
  76: add r7.xyz, r8.xyzx, v6.xyzx
  77: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  78: log r7.xyz, r7.xyzx
  79: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  80: exp r7.xyz, r7.xyzx
  81: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  82: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  83: lt r0.w, l(0.000000), cb2[2].w
  84: if_nz r0.w
  85:   dp3 r0.w, r5.xyzx, r5.xyzx
  86:   rsq r0.w, r0.w
  87:   mul r8.xyz, r0.wwww, r5.xyzx
  88:   mov r9.x, v3.w
  89:   mov r9.y, v4.w
  90:   mov r9.z, v5.w
  91:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  92:   div r10.xyz, r10.xyzx, r8.xyzx
  93:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  94:   div r11.xyz, r11.xyzx, r8.xyzx
  95:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  96:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  97:   min r0.w, r10.y, r10.x
  98:   min r0.w, r10.z, r0.w
  99:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
 100:   mad r8.xyz, r8.xyzx, r0.wwww, r9.xyzx
 101: else 
 102:   mov r8.xyz, r5.xyzx
 103: endif 
 104: mad r0.w, -r4.z, l(0.700000), l(1.700000)
 105: mul r0.w, r0.w, r4.z
 106: mul r0.w, r0.w, l(6.000000)
 107: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r0.w
 108: add r1.w, r8.w, l(-1.000000)
 109: mad r1.w, cb2[3].w, r1.w, l(1.000000)
 110: mul r1.w, r1.w, cb2[3].x
 111: mul r9.xyz, r8.xyzx, r1.wwww
 112: lt r2.w, cb2[1].w, l(0.999990)
 113: if_nz r2.w
 114:   lt r2.w, l(0.000000), cb2[6].w
 115:   if_nz r2.w
 116:     dp3 r2.w, r5.xyzx, r5.xyzx
 117:     rsq r2.w, r2.w
 118:     mul r10.xyz, r2.wwww, r5.xyzx
 119:     mov r11.x, v3.w
 120:     mov r11.y, v4.w
 121:     mov r11.z, v5.w
 122:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 123:     div r12.xyz, r12.xyzx, r10.xyzx
 124:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 125:     div r13.xyz, r13.xyzx, r10.xyzx
 126:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 127:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 128:     min r2.w, r12.y, r12.x
 129:     min r2.w, r12.z, r2.w
 130:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 131:     mad r5.xyz, r10.xyzx, r2.wwww, r11.xyzx
 132:   endif 
 133:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r0.w
 134:   add r0.w, r5.w, l(-1.000000)
 135:   mad r0.w, cb2[7].w, r0.w, l(1.000000)
 136:   mul r0.w, r0.w, cb2[7].x
 137:   mul r5.xyz, r5.xyzx, r0.wwww
 138:   mad r8.xyz, r1.wwww, r8.xyzx, -r5.xyzx
 139:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 140: endif 
 141: mul r5.xyz, r4.yyyy, r9.xyzx
 142: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 143: dp3 r0.w, r8.xyzx, r8.xyzx
 144: max r0.w, r0.w, l(0.001000)
 145: rsq r0.w, r0.w
 146: mul r8.xyz, r0.wwww, r8.xyzx
 147: dp3 r0.w, r2.xyzx, -r3.yzwy
 148: dp3_sat r1.w, r2.xyzx, cb1[0].xyzx
 149: dp3_sat r2.x, r2.xyzx, r8.xyzx
 150: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 151: mul r2.z, r2.y, r2.y
 152: dp2 r2.z, r2.zzzz, r4.zzzz
 153: add r2.z, r2.z, l(-0.500000)
 154: add r2.w, -r1.w, l(1.000000)
 155: mul r3.x, r2.w, r2.w
 156: mul r3.x, r3.x, r3.x
 157: mul r2.w, r2.w, r3.x
 158: mad r2.w, r2.z, r2.w, l(1.000000)
 159: add r3.x, -|r0.w|, l(1.000000)
 160: mul r3.y, r3.x, r3.x
 161: mul r3.y, r3.y, r3.y
 162: mul r3.x, r3.x, r3.y
 163: mad r2.z, r2.z, r3.x, l(1.000000)
 164: mul r2.z, r2.z, r2.w
 165: mul r2.z, r1.w, r2.z
 166: mul r2.w, r4.z, r4.z
 167: max r2.w, r2.w, l(0.002000)
 168: add r3.y, -r2.w, l(1.000000)
 169: mad r3.z, |r0.w|, r3.y, r2.w
 170: mad r3.y, r1.w, r3.y, r2.w
 171: mul r0.w, |r0.w|, r3.y
 172: mad r0.w, r1.w, r3.z, r0.w
 173: add r0.w, r0.w, l(0.000010)
 174: div r0.w, l(0.500000), r0.w
 175: mul r3.y, r2.w, r2.w
 176: mad r3.z, r2.x, r3.y, -r2.x
 177: mad r2.x, r3.z, r2.x, l(1.000000)
 178: mul r3.y, r3.y, l(0.318310)
 179: mad r2.x, r2.x, r2.x, l(0.000000)
 180: div r2.x, r3.y, r2.x
 181: mul r0.w, r0.w, r2.x
 182: mul r0.w, r0.w, l(3.141593)
 183: max r0.w, r0.w, l(0.000100)
 184: sqrt r0.w, r0.w
 185: mul r0.w, r1.w, r0.w
 186: mul r1.w, r2.w, l(0.280000)
 187: mad r1.w, -r1.w, r4.z, l(1.000000)
 188: dp3 r2.x, r0.xyzx, r0.xyzx
 189: ne r2.x, r2.x, l(0.000000)
 190: and r2.x, r2.x, l(0x3f800000)
 191: mul r0.w, r0.w, r2.x
 192: add_sat r2.x, r4.x, cb0[8].w
 193: mul r3.yzw, r2.zzzz, r6.xxyz
 194: mad r3.yzw, r7.xxyz, r4.yyyy, r3.yyzw
 195: mul r4.xyz, r6.xyzx, r0.wwww
 196: add r0.w, -r2.y, l(1.000000)
 197: mul r2.y, r0.w, r0.w
 198: mul r2.y, r2.y, r2.y
 199: mul r0.w, r0.w, r2.y
 200: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 201: mad r2.yzw, r2.yyzw, r0.wwww, r0.xxyz
 202: mul r2.yzw, r2.yyzw, r4.xxyz
 203: mad r1.xyz, r1.xyzx, r3.yzwy, r2.yzwy
 204: mul r2.yzw, r5.xxyz, r1.wwww
 205: add r3.yzw, -r0.xxyz, r2.xxxx
 206: mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 207: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 208: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 165 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r3.w, cb3[0].x, l(1.000000)
  13: if_nz r3.w
  14:   eq r4.x, cb3[0].y, l(1.000000)
  15:   mul r4.yzw, v4.wwww, cb3[2].xxyz
  16:   mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
  17:   mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
  18:   add r4.yzw, r4.yyzw, cb3[4].xxyz
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
  23:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  25:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  26:   mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r4.y, r5.x
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r4.x, r4.xyzw, cb1[46].xyzw
  33: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r4.y, -cb0[9].y, l(1.000000)
  35: mad r4.y, r5.y, cb0[9].y, r4.y
  36: add r4.z, -cb0[8].w, l(1.000000)
  37: dp3 r4.w, r3.xyzx, r2.xyzx
  38: add r4.w, r4.w, r4.w
  39: mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
  40: mul r6.xyz, r4.xxxx, cb0[2].xyzx
  41: if_nz r3.w
  42:   eq r3.w, cb3[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  44:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  47:   mov r8.y, v3.w
  48:   mov r8.z, v4.w
  49:   mov r8.w, v5.w
  50:   movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
  51:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  52:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  53:   mul r3.w, r7.y, l(0.250000)
  54:   mul r4.x, cb3[0].z, l(0.500000)
  55:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  56:   max r3.w, r3.w, r4.x
  57:   min r7.x, r4.w, r3.w
  58:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  59:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  61:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  63:   mov r2.w, l(1.000000)
  64:   dp4 r8.x, r8.xyzw, r2.xyzw
  65:   dp4 r8.y, r9.xyzw, r2.xyzw
  66:   dp4 r8.z, r7.xyzw, r2.xyzw
  67: else 
  68:   mov r2.w, l(1.000000)
  69:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  70:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  71:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  72: endif 
  73: add r7.xyz, r8.xyzx, v6.xyzx
  74: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: log r7.xyz, r7.xyzx
  76: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  77: exp r7.xyz, r7.xyzx
  78: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  79: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: lt r2.w, l(0.000000), cb2[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r8.xyz, r2.wwww, r5.xyzx
  85:   mov r9.x, v3.w
  86:   mov r9.y, v4.w
  87:   mov r9.z, v5.w
  88:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  91:   div r11.xyz, r11.xyzx, r8.xyzx
  92:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  93:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  94:   min r2.w, r10.y, r10.x
  95:   min r2.w, r10.z, r2.w
  96:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  97:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  98: else 
  99:   mov r8.xyz, r5.xyzx
 100: endif 
 101: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 102: mul r2.w, r2.w, r4.z
 103: mul r2.w, r2.w, l(6.000000)
 104: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 105: add r3.w, r8.w, l(-1.000000)
 106: mad r3.w, cb2[3].w, r3.w, l(1.000000)
 107: mul r3.w, r3.w, cb2[3].x
 108: mul r9.xyz, r8.xyzx, r3.wwww
 109: lt r4.x, cb2[1].w, l(0.999990)
 110: if_nz r4.x
 111:   lt r4.x, l(0.000000), cb2[6].w
 112:   if_nz r4.x
 113:     dp3 r4.x, r5.xyzx, r5.xyzx
 114:     rsq r4.x, r4.x
 115:     mul r10.xyz, r4.xxxx, r5.xyzx
 116:     mov r11.x, v3.w
 117:     mov r11.y, v4.w
 118:     mov r11.z, v5.w
 119:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 122:     div r13.xyz, r13.xyzx, r10.xyzx
 123:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 124:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 125:     min r4.x, r12.y, r12.x
 126:     min r4.x, r12.z, r4.x
 127:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 128:     mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
 129:   endif 
 130:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 131:   add r2.w, r5.w, l(-1.000000)
 132:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 133:   mul r2.w, r2.w, cb2[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
 136:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.yyyy, r9.xyzx
 139: mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 140: dp3 r1.w, r8.xyzx, r8.xyzx
 141: max r1.w, r1.w, l(0.001000)
 142: rsq r1.w, r1.w
 143: mul r8.xyz, r1.wwww, r8.xyzx
 144: dp3 r1.w, r2.xyzx, -r3.xyzx
 145: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r8.xyzx
 147: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.zzzz
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.x, -r2.w, l(1.000000)
 152: mul r3.y, r3.x, r3.x
 153: mul r3.y, r3.y, r3.y
 154: mul r3.x, r3.x, r3.y
 155: mad r3.x, r2.z, r3.x, l(1.000000)
 156: add r3.y, -|r1.w|, l(1.000000)
 157: mul r3.z, r3.y, r3.y
 158: mul r3.z, r3.z, r3.z
 159: mul r3.y, r3.y, r3.z
 160: mad r2.z, r2.z, r3.y, l(1.000000)
 161: mul r2.z, r2.z, r3.x
 162: mul r2.z, r2.w, r2.z
 163: mul r3.x, r4.z, r4.z
 164: max r3.x, r3.x, l(0.002000)
 165: add r3.z, -r3.x, l(1.000000)
 166: mad r3.w, |r1.w|, r3.z, r3.x
 167: mad r3.z, r2.w, r3.z, r3.x
 168: mul r1.w, |r1.w|, r3.z
 169: mad r1.w, r2.w, r3.w, r1.w
 170: add r1.w, r1.w, l(0.000010)
 171: div r1.w, l(0.500000), r1.w
 172: mul r3.z, r3.x, r3.x
 173: mad r3.w, r2.x, r3.z, -r2.x
 174: mad r2.x, r3.w, r2.x, l(1.000000)
 175: mul r3.z, r3.z, l(0.318310)
 176: mad r2.x, r2.x, r2.x, l(0.000000)
 177: div r2.x, r3.z, r2.x
 178: mul r1.w, r1.w, r2.x
 179: mul r1.w, r1.w, l(3.141593)
 180: max r1.w, r1.w, l(0.000100)
 181: sqrt r1.w, r1.w
 182: mul r1.w, r2.w, r1.w
 183: mul r2.x, r3.x, l(0.280000)
 184: mad r2.x, -r2.x, r4.z, l(1.000000)
 185: dp3 r2.w, r0.xyzx, r0.xyzx
 186: ne r2.w, r2.w, l(0.000000)
 187: and r2.w, r2.w, l(0x3f800000)
 188: mul r1.w, r1.w, r2.w
 189: add r0.w, -r0.w, l(1.000000)
 190: add_sat r0.w, r0.w, cb0[8].w
 191: mul r3.xzw, r2.zzzz, r6.xxyz
 192: mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
 193: mul r4.xyz, r6.xyzx, r1.wwww
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.y, r1.w, r1.w
 196: mul r2.y, r2.y, r2.y
 197: mul r1.w, r1.w, r2.y
 198: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 199: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 200: mul r2.yzw, r2.yyzw, r4.xxyz
 201: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 202: mul r2.xyz, r5.xyzx, r2.xxxx
 203: add r3.xzw, -r0.xxyz, r0.wwww
 204: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 205: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 151 math, 14 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_DynamicLightmap" to slot 2 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 3 sampler slot -1
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.zw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: eq r0.w, cb3[0].x, l(1.000000)
  16: if_nz r0.w
  17:   eq r0.w, cb3[0].y, l(1.000000)
  18:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  19:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  20:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  22:   mov r5.y, v3.w
  23:   mov r5.z, v4.w
  24:   mov r5.w, v5.w
  25:   movc r4.xyz, r0.wwww, r4.xyzx, r5.yzwy
  26:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  28:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r0.w, r1.w
  31:   sample r4.xyzw, r4.xzwx, t6.xyzw, s2
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  36: sample r4.xyzw, v1.xyxx, t1.xyzw, s4
  37: add r1.w, -cb0[9].y, l(1.000000)
  38: mad r1.w, r4.y, cb0[9].y, r1.w
  39: add r4.x, -cb0[8].w, l(1.000000)
  40: dp3 r4.y, r3.xyzx, r2.xyzx
  41: add r4.y, r4.y, r4.y
  42: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  43: mul r5.xyz, r0.wwww, cb0[2].xyzx
  44: sample r6.xyzw, v6.zwzz, t2.xyzw, s0
  45: mul r0.w, r6.w, cb0[1].x
  46: mul r6.xyz, r6.xyzx, r0.wwww
  47: log r6.xyz, r6.xyzx
  48: mul r6.xyz, r6.xyzx, cb0[1].yyyy
  49: exp r6.xyz, r6.xyzx
  50: sample r7.xyzw, v6.zwzz, t3.xyzw, s0
  51: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  52: dp3 r0.w, r2.xyzx, r7.xyzx
  53: add r0.w, r0.w, l(0.500000)
  54: mul r6.xyz, r0.wwww, r6.xyzx
  55: max r0.w, r7.w, l(0.000100)
  56: div r6.xyz, r6.xyzx, r0.wwww
  57: lt r0.w, l(0.000000), cb2[2].w
  58: if_nz r0.w
  59:   dp3 r0.w, r4.yzwy, r4.yzwy
  60:   rsq r0.w, r0.w
  61:   mul r7.xyz, r0.wwww, r4.yzwy
  62:   mov r8.x, v3.w
  63:   mov r8.y, v4.w
  64:   mov r8.z, v5.w
  65:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  66:   div r9.xyz, r9.xyzx, r7.xyzx
  67:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  68:   div r10.xyz, r10.xyzx, r7.xyzx
  69:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  70:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  71:   min r0.w, r9.y, r9.x
  72:   min r0.w, r9.z, r0.w
  73:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  74:   mad r7.xyz, r7.xyzx, r0.wwww, r8.xyzx
  75: else 
  76:   mov r7.xyz, r4.yzwy
  77: endif 
  78: mad r0.w, -r4.x, l(0.700000), l(1.700000)
  79: mul r0.w, r0.w, r4.x
  80: mul r0.w, r0.w, l(6.000000)
  81: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r0.w
  82: add r5.w, r7.w, l(-1.000000)
  83: mad r5.w, cb2[3].w, r5.w, l(1.000000)
  84: mul r5.w, r5.w, cb2[3].x
  85: mul r8.xyz, r7.xyzx, r5.wwww
  86: lt r6.w, cb2[1].w, l(0.999990)
  87: if_nz r6.w
  88:   lt r6.w, l(0.000000), cb2[6].w
  89:   if_nz r6.w
  90:     dp3 r6.w, r4.yzwy, r4.yzwy
  91:     rsq r6.w, r6.w
  92:     mul r9.xyz, r4.yzwy, r6.wwww
  93:     mov r10.x, v3.w
  94:     mov r10.y, v4.w
  95:     mov r10.z, v5.w
  96:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  97:     div r11.xyz, r11.xyzx, r9.xyzx
  98:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  99:     div r12.xyz, r12.xyzx, r9.xyzx
 100:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 101:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 102:     min r6.w, r11.y, r11.x
 103:     min r6.w, r11.z, r6.w
 104:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 105:     mad r4.yzw, r9.xxyz, r6.wwww, r10.xxyz
 106:   endif 
 107:   sample_l r9.xyzw, r4.yzwy, t5.xyzw, s1, r0.w
 108:   add r0.w, r9.w, l(-1.000000)
 109:   mad r0.w, cb2[7].w, r0.w, l(1.000000)
 110:   mul r0.w, r0.w, cb2[7].x
 111:   mul r4.yzw, r9.xxyz, r0.wwww
 112:   mad r7.xyz, r5.wwww, r7.xyzx, -r4.yzwy
 113:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r4.yzwy
 114: endif 
 115: mul r4.yzw, r1.wwww, r8.xxyz
 116: mad r7.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 117: dp3 r0.w, r7.xyzx, r7.xyzx
 118: max r0.w, r0.w, l(0.001000)
 119: rsq r0.w, r0.w
 120: mul r7.xyz, r0.wwww, r7.xyzx
 121: dp3 r0.w, r2.xyzx, -r3.xyzx
 122: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 123: dp3_sat r2.x, r2.xyzx, r7.xyzx
 124: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 125: mul r2.z, r2.y, r2.y
 126: dp2 r2.z, r2.zzzz, r4.xxxx
 127: add r2.z, r2.z, l(-0.500000)
 128: add r3.x, -r2.w, l(1.000000)
 129: mul r3.y, r3.x, r3.x
 130: mul r3.y, r3.y, r3.y
 131: mul r3.x, r3.x, r3.y
 132: mad r3.x, r2.z, r3.x, l(1.000000)
 133: add r3.y, -|r0.w|, l(1.000000)
 134: mul r3.z, r3.y, r3.y
 135: mul r3.z, r3.z, r3.z
 136: mul r3.y, r3.y, r3.z
 137: mad r2.z, r2.z, r3.y, l(1.000000)
 138: mul r2.z, r2.z, r3.x
 139: mul r2.z, r2.w, r2.z
 140: mul r3.x, r4.x, r4.x
 141: max r3.x, r3.x, l(0.002000)
 142: add r3.z, -r3.x, l(1.000000)
 143: mad r5.w, |r0.w|, r3.z, r3.x
 144: mad r3.z, r2.w, r3.z, r3.x
 145: mul r0.w, |r0.w|, r3.z
 146: mad r0.w, r2.w, r5.w, r0.w
 147: add r0.w, r0.w, l(0.000010)
 148: div r0.w, l(0.500000), r0.w
 149: mul r3.z, r3.x, r3.x
 150: mad r5.w, r2.x, r3.z, -r2.x
 151: mad r2.x, r5.w, r2.x, l(1.000000)
 152: mul r3.z, r3.z, l(0.318310)
 153: mad r2.x, r2.x, r2.x, l(0.000000)
 154: div r2.x, r3.z, r2.x
 155: mul r0.w, r0.w, r2.x
 156: mul r0.w, r0.w, l(3.141593)
 157: max r0.w, r0.w, l(0.000100)
 158: sqrt r0.w, r0.w
 159: mul r0.w, r2.w, r0.w
 160: mul r2.x, r3.x, l(0.280000)
 161: mad r2.x, -r2.x, r4.x, l(1.000000)
 162: dp3 r2.w, r0.xyzx, r0.xyzx
 163: ne r2.w, r2.w, l(0.000000)
 164: and r2.w, r2.w, l(0x3f800000)
 165: mul r0.w, r0.w, r2.w
 166: add_sat r2.w, r3.w, cb0[8].w
 167: mul r3.xzw, r2.zzzz, r5.xxyz
 168: mad r3.xzw, r6.xxyz, r1.wwww, r3.xxzw
 169: mul r5.xyz, r5.xyzx, r0.wwww
 170: add r0.w, -r2.y, l(1.000000)
 171: mul r1.w, r0.w, r0.w
 172: mul r1.w, r1.w, r1.w
 173: mul r0.w, r0.w, r1.w
 174: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 176: mul r5.xyz, r5.xyzx, r6.xyzx
 177: mad r1.xyz, r1.xyzx, r3.xzwx, r5.xyzx
 178: mul r2.xyz, r4.yzwy, r2.xxxx
 179: add r3.xzw, -r0.xxyz, r2.wwww
 180: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 181: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 182: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 149 math, 14 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_DynamicLightmap" to slot 2 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 3 sampler slot -1
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.zw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r2.w, cb3[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
  23:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  25:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r2.w, r3.w
  28:   sample r4.xyzw, r4.xzwx, t6.xyzw, s2
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  33: sample r4.xyzw, v1.xyxx, t1.xyzw, s4
  34: add r3.w, -cb0[9].y, l(1.000000)
  35: mad r3.w, r4.y, cb0[9].y, r3.w
  36: add r4.x, -cb0[8].w, l(1.000000)
  37: dp3 r4.y, r3.xyzx, r2.xyzx
  38: add r4.y, r4.y, r4.y
  39: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  40: mul r5.xyz, r2.wwww, cb0[2].xyzx
  41: sample r6.xyzw, v6.zwzz, t2.xyzw, s0
  42: mul r2.w, r6.w, cb0[1].x
  43: mul r6.xyz, r6.xyzx, r2.wwww
  44: log r6.xyz, r6.xyzx
  45: mul r6.xyz, r6.xyzx, cb0[1].yyyy
  46: exp r6.xyz, r6.xyzx
  47: sample r7.xyzw, v6.zwzz, t3.xyzw, s0
  48: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  49: dp3 r2.w, r2.xyzx, r7.xyzx
  50: add r2.w, r2.w, l(0.500000)
  51: mul r6.xyz, r2.wwww, r6.xyzx
  52: max r2.w, r7.w, l(0.000100)
  53: div r6.xyz, r6.xyzx, r2.wwww
  54: lt r2.w, l(0.000000), cb2[2].w
  55: if_nz r2.w
  56:   dp3 r2.w, r4.yzwy, r4.yzwy
  57:   rsq r2.w, r2.w
  58:   mul r7.xyz, r2.wwww, r4.yzwy
  59:   mov r8.x, v3.w
  60:   mov r8.y, v4.w
  61:   mov r8.z, v5.w
  62:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  63:   div r9.xyz, r9.xyzx, r7.xyzx
  64:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  65:   div r10.xyz, r10.xyzx, r7.xyzx
  66:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  68:   min r2.w, r9.y, r9.x
  69:   min r2.w, r9.z, r2.w
  70:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r4.yzwy
  74: endif 
  75: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  76: mul r2.w, r2.w, r4.x
  77: mul r2.w, r2.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r2.w
  79: add r5.w, r7.w, l(-1.000000)
  80: mad r5.w, cb2[3].w, r5.w, l(1.000000)
  81: mul r5.w, r5.w, cb2[3].x
  82: mul r8.xyz, r7.xyzx, r5.wwww
  83: lt r6.w, cb2[1].w, l(0.999990)
  84: if_nz r6.w
  85:   lt r6.w, l(0.000000), cb2[6].w
  86:   if_nz r6.w
  87:     dp3 r6.w, r4.yzwy, r4.yzwy
  88:     rsq r6.w, r6.w
  89:     mul r9.xyz, r4.yzwy, r6.wwww
  90:     mov r10.x, v3.w
  91:     mov r10.y, v4.w
  92:     mov r10.z, v5.w
  93:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  94:     div r11.xyz, r11.xyzx, r9.xyzx
  95:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  96:     div r12.xyz, r12.xyzx, r9.xyzx
  97:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  99:     min r6.w, r11.y, r11.x
 100:     min r6.w, r11.z, r6.w
 101:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 102:     mad r4.yzw, r9.xxyz, r6.wwww, r10.xxyz
 103:   endif 
 104:   sample_l r9.xyzw, r4.yzwy, t5.xyzw, s1, r2.w
 105:   add r2.w, r9.w, l(-1.000000)
 106:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 107:   mul r2.w, r2.w, cb2[7].x
 108:   mul r4.yzw, r9.xxyz, r2.wwww
 109:   mad r7.xyz, r5.wwww, r7.xyzx, -r4.yzwy
 110:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r4.yzwy
 111: endif 
 112: mul r4.yzw, r3.wwww, r8.xxyz
 113: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 114: dp3 r1.w, r7.xyzx, r7.xyzx
 115: max r1.w, r1.w, l(0.001000)
 116: rsq r1.w, r1.w
 117: mul r7.xyz, r1.wwww, r7.xyzx
 118: dp3 r1.w, r2.xyzx, -r3.xyzx
 119: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 120: dp3_sat r2.x, r2.xyzx, r7.xyzx
 121: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 122: mul r2.z, r2.y, r2.y
 123: dp2 r2.z, r2.zzzz, r4.xxxx
 124: add r2.z, r2.z, l(-0.500000)
 125: add r3.x, -r2.w, l(1.000000)
 126: mul r3.y, r3.x, r3.x
 127: mul r3.y, r3.y, r3.y
 128: mul r3.x, r3.x, r3.y
 129: mad r3.x, r2.z, r3.x, l(1.000000)
 130: add r3.y, -|r1.w|, l(1.000000)
 131: mul r3.z, r3.y, r3.y
 132: mul r3.z, r3.z, r3.z
 133: mul r3.y, r3.y, r3.z
 134: mad r2.z, r2.z, r3.y, l(1.000000)
 135: mul r2.z, r2.z, r3.x
 136: mul r2.z, r2.w, r2.z
 137: mul r3.x, r4.x, r4.x
 138: max r3.x, r3.x, l(0.002000)
 139: add r3.z, -r3.x, l(1.000000)
 140: mad r5.w, |r1.w|, r3.z, r3.x
 141: mad r3.z, r2.w, r3.z, r3.x
 142: mul r1.w, |r1.w|, r3.z
 143: mad r1.w, r2.w, r5.w, r1.w
 144: add r1.w, r1.w, l(0.000010)
 145: div r1.w, l(0.500000), r1.w
 146: mul r3.z, r3.x, r3.x
 147: mad r5.w, r2.x, r3.z, -r2.x
 148: mad r2.x, r5.w, r2.x, l(1.000000)
 149: mul r3.z, r3.z, l(0.318310)
 150: mad r2.x, r2.x, r2.x, l(0.000000)
 151: div r2.x, r3.z, r2.x
 152: mul r1.w, r1.w, r2.x
 153: mul r1.w, r1.w, l(3.141593)
 154: max r1.w, r1.w, l(0.000100)
 155: sqrt r1.w, r1.w
 156: mul r1.w, r2.w, r1.w
 157: mul r2.x, r3.x, l(0.280000)
 158: mad r2.x, -r2.x, r4.x, l(1.000000)
 159: dp3 r2.w, r0.xyzx, r0.xyzx
 160: ne r2.w, r2.w, l(0.000000)
 161: and r2.w, r2.w, l(0x3f800000)
 162: mul r1.w, r1.w, r2.w
 163: add r0.w, -r0.w, l(1.000000)
 164: add_sat r0.w, r0.w, cb0[8].w
 165: mul r7.xyz, r2.zzzz, r5.xyzx
 166: mad r3.xzw, r6.xxyz, r3.wwww, r7.xxyz
 167: mul r5.xyz, r5.xyzx, r1.wwww
 168: add r1.w, -r2.y, l(1.000000)
 169: mul r2.y, r1.w, r1.w
 170: mul r2.y, r2.y, r2.y
 171: mul r1.w, r1.w, r2.y
 172: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 173: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 174: mul r2.yzw, r2.yyzw, r5.xxyz
 175: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 176: mul r2.xyz, r4.yzwy, r2.xxxx
 177: add r3.xzw, -r0.xxyz, r0.wwww
 178: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 179: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 150 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: mov r4.x, v3.w
  16: mov r4.y, v4.w
  17: mov r4.z, v5.w
  18: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  19: mov r6.x, cb4[9].z
  20: mov r6.y, cb4[10].z
  21: mov r6.z, cb4[11].z
  22: dp3 r0.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  24: dp3 r1.w, r5.xyzx, r5.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb3[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  29: eq r1.w, cb6[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r4.w, cb6[0].y, l(1.000000)
  32:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  34:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  35:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  36:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  37:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  38:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  39:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  40:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r5.x, r4.w, r5.y
  42:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  43: else 
  44:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  47: div r5.xy, v7.xyxx, v7.wwww
  48: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  49: add_sat r0.w, r0.w, r5.x
  50: min r4.w, r0.w, r4.w
  51: movc r0.w, r1.w, r4.w, r0.w
  52: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r1.w, -cb0[9].y, l(1.000000)
  54: mad r1.w, r5.y, cb0[9].y, r1.w
  55: add r4.w, -cb0[8].w, l(1.000000)
  56: dp3 r5.x, r3.xyzx, r2.xyzx
  57: add r5.x, r5.x, r5.x
  58: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
  59: mul r6.xyz, r0.wwww, cb0[2].xyzx
  60: lt r0.w, l(0.000000), cb5[2].w
  61: if_nz r0.w
  62:   dp3 r0.w, r5.xyzx, r5.xyzx
  63:   rsq r0.w, r0.w
  64:   mul r7.xyz, r0.wwww, r5.xyzx
  65:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  66:   div r8.xyz, r8.xyzx, r7.xyzx
  67:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  68:   div r9.xyz, r9.xyzx, r7.xyzx
  69:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  70:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  71:   min r0.w, r8.y, r8.x
  72:   min r0.w, r8.z, r0.w
  73:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  74:   mad r7.xyz, r7.xyzx, r0.wwww, r8.xyzx
  75: else 
  76:   mov r7.xyz, r5.xyzx
  77: endif 
  78: mad r0.w, -r4.w, l(0.700000), l(1.700000)
  79: mul r0.w, r0.w, r4.w
  80: mul r0.w, r0.w, l(6.000000)
  81: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r0.w
  82: add r5.w, r7.w, l(-1.000000)
  83: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  84: mul r5.w, r5.w, cb5[3].x
  85: mul r8.xyz, r7.xyzx, r5.wwww
  86: lt r6.w, cb5[1].w, l(0.999990)
  87: if_nz r6.w
  88:   lt r6.w, l(0.000000), cb5[6].w
  89:   if_nz r6.w
  90:     dp3 r6.w, r5.xyzx, r5.xyzx
  91:     rsq r6.w, r6.w
  92:     mul r9.xyz, r5.xyzx, r6.wwww
  93:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  94:     div r10.xyz, r10.xyzx, r9.xyzx
  95:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:     min r6.w, r10.y, r10.x
 100:     min r6.w, r10.z, r6.w
 101:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 102:     mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
 103:   endif 
 104:   sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r0.w
 105:   add r0.w, r9.w, l(-1.000000)
 106:   mad r0.w, cb5[7].w, r0.w, l(1.000000)
 107:   mul r0.w, r0.w, cb5[7].x
 108:   mul r4.xyz, r9.xyzx, r0.wwww
 109:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
 110:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 111: endif 
 112: mul r4.xyz, r1.wwww, r8.xyzx
 113: mad r5.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 114: dp3 r0.w, r5.xyzx, r5.xyzx
 115: max r0.w, r0.w, l(0.001000)
 116: rsq r0.w, r0.w
 117: mul r5.xyz, r0.wwww, r5.xyzx
 118: dp3 r0.w, r2.xyzx, -r3.xyzx
 119: dp3_sat r1.w, r2.xyzx, cb2[0].xyzx
 120: dp3_sat r2.x, r2.xyzx, r5.xyzx
 121: dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
 122: mul r2.z, r2.y, r2.y
 123: dp2 r2.z, r2.zzzz, r4.wwww
 124: add r2.z, r2.z, l(-0.500000)
 125: add r2.w, -r1.w, l(1.000000)
 126: mul r3.x, r2.w, r2.w
 127: mul r3.x, r3.x, r3.x
 128: mul r2.w, r2.w, r3.x
 129: mad r2.w, r2.z, r2.w, l(1.000000)
 130: add r3.x, -|r0.w|, l(1.000000)
 131: mul r3.y, r3.x, r3.x
 132: mul r3.y, r3.y, r3.y
 133: mul r3.x, r3.x, r3.y
 134: mad r2.z, r2.z, r3.x, l(1.000000)
 135: mul r2.z, r2.z, r2.w
 136: mul r2.z, r1.w, r2.z
 137: mul r2.w, r4.w, r4.w
 138: max r2.w, r2.w, l(0.002000)
 139: add r3.y, -r2.w, l(1.000000)
 140: mad r3.z, |r0.w|, r3.y, r2.w
 141: mad r3.y, r1.w, r3.y, r2.w
 142: mul r0.w, |r0.w|, r3.y
 143: mad r0.w, r1.w, r3.z, r0.w
 144: add r0.w, r0.w, l(0.000010)
 145: div r0.w, l(0.500000), r0.w
 146: mul r3.y, r2.w, r2.w
 147: mad r3.z, r2.x, r3.y, -r2.x
 148: mad r2.x, r3.z, r2.x, l(1.000000)
 149: mul r3.y, r3.y, l(0.318310)
 150: mad r2.x, r2.x, r2.x, l(0.000000)
 151: div r2.x, r3.y, r2.x
 152: mul r0.w, r0.w, r2.x
 153: mul r0.w, r0.w, l(3.141593)
 154: max r0.w, r0.w, l(0.000100)
 155: sqrt r0.w, r0.w
 156: mul r0.w, r1.w, r0.w
 157: mul r1.w, r2.w, l(0.280000)
 158: mad r1.w, -r1.w, r4.w, l(1.000000)
 159: dp3 r2.x, r0.xyzx, r0.xyzx
 160: ne r2.x, r2.x, l(0.000000)
 161: and r2.x, r2.x, l(0x3f800000)
 162: mul r0.w, r0.w, r2.x
 163: add_sat r2.x, r3.w, cb0[8].w
 164: mul r3.yzw, r2.zzzz, r6.xxyz
 165: mul r5.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r2.y, r0.w, r0.w
 168: mul r2.y, r2.y, r2.y
 169: mul r0.w, r0.w, r2.y
 170: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 171: mad r2.yzw, r2.yyzw, r0.wwww, r0.xxyz
 172: mul r2.yzw, r2.yyzw, r5.xxyz
 173: mad r1.xyz, r1.xyzx, r3.yzwy, r2.yzwy
 174: mul r2.yzw, r4.xxyz, r1.wwww
 175: add r3.yzw, -r0.xxyz, r2.xxxx
 176: mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 177: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 178: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 148 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r2.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r3.w, r5.xyzx, r5.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb3[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  26: eq r3.w, cb6[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r4.w, cb6[0].y, l(1.000000)
  29:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  31:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  32:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  33:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  37:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r4.w, r5.y
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  44: div r5.xy, v7.xyxx, v7.wwww
  45: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  46: add_sat r2.w, r2.w, r5.x
  47: min r4.w, r2.w, r4.w
  48: movc r2.w, r3.w, r4.w, r2.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r3.w, -cb0[9].y, l(1.000000)
  51: mad r3.w, r5.y, cb0[9].y, r3.w
  52: add r4.w, -cb0[8].w, l(1.000000)
  53: dp3 r5.x, r3.xyzx, r2.xyzx
  54: add r5.x, r5.x, r5.x
  55: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
  56: mul r6.xyz, r2.wwww, cb0[2].xyzx
  57: lt r2.w, l(0.000000), cb5[2].w
  58: if_nz r2.w
  59:   dp3 r2.w, r5.xyzx, r5.xyzx
  60:   rsq r2.w, r2.w
  61:   mul r7.xyz, r2.wwww, r5.xyzx
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r2.w, r8.y, r8.x
  69:   min r2.w, r8.z, r2.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.xyzx
  74: endif 
  75: mad r2.w, -r4.w, l(0.700000), l(1.700000)
  76: mul r2.w, r2.w, r4.w
  77: mul r2.w, r2.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
  79: add r5.w, r7.w, l(-1.000000)
  80: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  81: mul r5.w, r5.w, cb5[3].x
  82: mul r8.xyz, r7.xyzx, r5.wwww
  83: lt r6.w, cb5[1].w, l(0.999990)
  84: if_nz r6.w
  85:   lt r6.w, l(0.000000), cb5[6].w
  86:   if_nz r6.w
  87:     dp3 r6.w, r5.xyzx, r5.xyzx
  88:     rsq r6.w, r6.w
  89:     mul r9.xyz, r5.xyzx, r6.wwww
  90:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  91:     div r10.xyz, r10.xyzx, r9.xyzx
  92:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  93:     div r11.xyz, r11.xyzx, r9.xyzx
  94:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  95:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  96:     min r6.w, r10.y, r10.x
  97:     min r6.w, r10.z, r6.w
  98:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
  99:     mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
 100:   endif 
 101:   sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 102:   add r2.w, r9.w, l(-1.000000)
 103:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 104:   mul r2.w, r2.w, cb5[7].x
 105:   mul r4.xyz, r9.xyzx, r2.wwww
 106:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
 107:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 108: endif 
 109: mul r4.xyz, r3.wwww, r8.xyzx
 110: mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 111: dp3 r1.w, r5.xyzx, r5.xyzx
 112: max r1.w, r1.w, l(0.001000)
 113: rsq r1.w, r1.w
 114: mul r5.xyz, r1.wwww, r5.xyzx
 115: dp3 r1.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r5.xyzx
 118: dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r4.wwww
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.x, -r2.w, l(1.000000)
 123: mul r3.y, r3.x, r3.x
 124: mul r3.y, r3.y, r3.y
 125: mul r3.x, r3.x, r3.y
 126: mad r3.x, r2.z, r3.x, l(1.000000)
 127: add r3.y, -|r1.w|, l(1.000000)
 128: mul r3.z, r3.y, r3.y
 129: mul r3.z, r3.z, r3.z
 130: mul r3.y, r3.y, r3.z
 131: mad r2.z, r2.z, r3.y, l(1.000000)
 132: mul r2.z, r2.z, r3.x
 133: mul r2.z, r2.w, r2.z
 134: mul r3.x, r4.w, r4.w
 135: max r3.x, r3.x, l(0.002000)
 136: add r3.z, -r3.x, l(1.000000)
 137: mad r3.w, |r1.w|, r3.z, r3.x
 138: mad r3.z, r2.w, r3.z, r3.x
 139: mul r1.w, |r1.w|, r3.z
 140: mad r1.w, r2.w, r3.w, r1.w
 141: add r1.w, r1.w, l(0.000010)
 142: div r1.w, l(0.500000), r1.w
 143: mul r3.z, r3.x, r3.x
 144: mad r3.w, r2.x, r3.z, -r2.x
 145: mad r2.x, r3.w, r2.x, l(1.000000)
 146: mul r3.z, r3.z, l(0.318310)
 147: mad r2.x, r2.x, r2.x, l(0.000000)
 148: div r2.x, r3.z, r2.x
 149: mul r1.w, r1.w, r2.x
 150: mul r1.w, r1.w, l(3.141593)
 151: max r1.w, r1.w, l(0.000100)
 152: sqrt r1.w, r1.w
 153: mul r1.w, r2.w, r1.w
 154: mul r2.x, r3.x, l(0.280000)
 155: mad r2.x, -r2.x, r4.w, l(1.000000)
 156: dp3 r2.w, r0.xyzx, r0.xyzx
 157: ne r2.w, r2.w, l(0.000000)
 158: and r2.w, r2.w, l(0x3f800000)
 159: mul r1.w, r1.w, r2.w
 160: add r0.w, -r0.w, l(1.000000)
 161: add_sat r0.w, r0.w, cb0[8].w
 162: mul r3.xzw, r2.zzzz, r6.xxyz
 163: mul r5.xyz, r6.xyzx, r1.wwww
 164: add r1.w, -r2.y, l(1.000000)
 165: mul r2.y, r1.w, r1.w
 166: mul r2.y, r2.y, r2.y
 167: mul r1.w, r1.w, r2.y
 168: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 169: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 170: mul r2.yzw, r2.yyzw, r5.xxyz
 171: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 172: mul r2.xyz, r4.xyzx, r2.xxxx
 173: add r3.xzw, -r0.xxyz, r0.wwww
 174: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 175: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 176: mov o0.w, l(1.000000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTPROBE_SH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 178 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r4.x, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r4.x
  15: mov r5.x, v3.w
  16: mov r5.y, v4.w
  17: mov r5.z, v5.w
  18: add r4.yzw, -r5.xxyz, cb1[4].xxyz
  19: mov r6.x, cb4[9].z
  20: mov r6.y, cb4[10].z
  21: mov r6.z, cb4[11].z
  22: dp3 r0.w, r4.yzwy, r6.xyzx
  23: add r4.yzw, r5.xxyz, -cb3[25].xxyz
  24: dp3 r1.w, r4.yzwy, r4.yzwy
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb3[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  29: eq r1.w, cb6[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r4.y, cb6[0].y, l(1.000000)
  32:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  34:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  35:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  36:   movc r4.yzw, r4.yyyy, r6.xxyz, r5.xxyz
  37:   add r4.yzw, r4.yyzw, -cb6[6].xxyz
  38:   mul r6.yzw, r4.yyzw, cb6[5].xxyz
  39:   mad r4.y, r6.y, l(0.250000), l(0.750000)
  40:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r6.x, r4.z, r4.y
  42:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  43: else 
  44:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.y, r6.xyzw, cb2[46].xyzw
  47: div r4.zw, v7.xxxy, v7.wwww
  48: sample r6.xyzw, r4.zwzz, t1.xyzw, s4
  49: add_sat r0.w, r0.w, r6.x
  50: min r4.y, r0.w, r4.y
  51: movc r0.w, r1.w, r4.y, r0.w
  52: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r4.y, -cb0[9].y, l(1.000000)
  54: mad r4.y, r6.y, cb0[9].y, r4.y
  55: add r4.z, -cb0[8].w, l(1.000000)
  56: dp3 r4.w, r3.yzwy, r2.xyzx
  57: add r4.w, r4.w, r4.w
  58: mad r6.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  59: mul r7.xyz, r0.wwww, cb0[2].xyzx
  60: if_nz r1.w
  61:   eq r0.w, cb6[0].y, l(1.000000)
  62:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  63:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  64:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  65:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  66:   movc r8.xyz, r0.wwww, r8.xyzx, r5.xyzx
  67:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  68:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  69:   mul r0.w, r8.y, l(0.250000)
  70:   mul r1.w, cb6[0].z, l(0.500000)
  71:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  72:   max r0.w, r0.w, r1.w
  73:   min r8.x, r4.w, r0.w
  74:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  75:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  76:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  77:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  78:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  79:   mov r2.w, l(1.000000)
  80:   dp4 r9.x, r9.xyzw, r2.xyzw
  81:   dp4 r9.y, r10.xyzw, r2.xyzw
  82:   dp4 r9.z, r8.xyzw, r2.xyzw
  83: else 
  84:   mov r2.w, l(1.000000)
  85:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  86:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  87:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  88: endif 
  89: add r8.xyz, r9.xyzx, v6.xyzx
  90: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  91: log r8.xyz, r8.xyzx
  92: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  93: exp r8.xyz, r8.xyzx
  94: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  95: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  96: lt r0.w, l(0.000000), cb5[2].w
  97: if_nz r0.w
  98:   dp3 r0.w, r6.xyzx, r6.xyzx
  99:   rsq r0.w, r0.w
 100:   mul r9.xyz, r0.wwww, r6.xyzx
 101:   add r10.xyz, -r5.xyzx, cb5[0].xyzx
 102:   div r10.xyz, r10.xyzx, r9.xyzx
 103:   add r11.xyz, -r5.xyzx, cb5[1].xyzx
 104:   div r11.xyz, r11.xyzx, r9.xyzx
 105:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 106:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 107:   min r0.w, r10.y, r10.x
 108:   min r0.w, r10.z, r0.w
 109:   add r10.xyz, r5.xyzx, -cb5[2].xyzx
 110:   mad r9.xyz, r9.xyzx, r0.wwww, r10.xyzx
 111: else 
 112:   mov r9.xyz, r6.xyzx
 113: endif 
 114: mad r0.w, -r4.z, l(0.700000), l(1.700000)
 115: mul r0.w, r0.w, r4.z
 116: mul r0.w, r0.w, l(6.000000)
 117: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r0.w
 118: add r1.w, r9.w, l(-1.000000)
 119: mad r1.w, cb5[3].w, r1.w, l(1.000000)
 120: mul r1.w, r1.w, cb5[3].x
 121: mul r10.xyz, r9.xyzx, r1.wwww
 122: lt r2.w, cb5[1].w, l(0.999990)
 123: if_nz r2.w
 124:   lt r2.w, l(0.000000), cb5[6].w
 125:   if_nz r2.w
 126:     dp3 r2.w, r6.xyzx, r6.xyzx
 127:     rsq r2.w, r2.w
 128:     mul r11.xyz, r2.wwww, r6.xyzx
 129:     add r12.xyz, -r5.xyzx, cb5[4].xyzx
 130:     div r12.xyz, r12.xyzx, r11.xyzx
 131:     add r13.xyz, -r5.xyzx, cb5[5].xyzx
 132:     div r13.xyz, r13.xyzx, r11.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r2.w, r12.y, r12.x
 136:     min r2.w, r12.z, r2.w
 137:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
 138:     mad r6.xyz, r11.xyzx, r2.wwww, r5.xyzx
 139:   endif 
 140:   sample_l r5.xyzw, r6.xyzx, t4.xyzw, s0, r0.w
 141:   add r0.w, r5.w, l(-1.000000)
 142:   mad r0.w, cb5[7].w, r0.w, l(1.000000)
 143:   mul r0.w, r0.w, cb5[7].x
 144:   mul r5.xyz, r5.xyzx, r0.wwww
 145:   mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
 146:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 147: endif 
 148: mul r5.xyz, r4.yyyy, r10.xyzx
 149: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 150: dp3 r0.w, r6.xyzx, r6.xyzx
 151: max r0.w, r0.w, l(0.001000)
 152: rsq r0.w, r0.w
 153: mul r6.xyz, r0.wwww, r6.xyzx
 154: dp3 r0.w, r2.xyzx, -r3.yzwy
 155: dp3_sat r1.w, r2.xyzx, cb2[0].xyzx
 156: dp3_sat r2.x, r2.xyzx, r6.xyzx
 157: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 158: mul r2.z, r2.y, r2.y
 159: dp2 r2.z, r2.zzzz, r4.zzzz
 160: add r2.z, r2.z, l(-0.500000)
 161: add r2.w, -r1.w, l(1.000000)
 162: mul r3.x, r2.w, r2.w
 163: mul r3.x, r3.x, r3.x
 164: mul r2.w, r2.w, r3.x
 165: mad r2.w, r2.z, r2.w, l(1.000000)
 166: add r3.x, -|r0.w|, l(1.000000)
 167: mul r3.y, r3.x, r3.x
 168: mul r3.y, r3.y, r3.y
 169: mul r3.x, r3.x, r3.y
 170: mad r2.z, r2.z, r3.x, l(1.000000)
 171: mul r2.z, r2.z, r2.w
 172: mul r2.z, r1.w, r2.z
 173: mul r2.w, r4.z, r4.z
 174: max r2.w, r2.w, l(0.002000)
 175: add r3.y, -r2.w, l(1.000000)
 176: mad r3.z, |r0.w|, r3.y, r2.w
 177: mad r3.y, r1.w, r3.y, r2.w
 178: mul r0.w, |r0.w|, r3.y
 179: mad r0.w, r1.w, r3.z, r0.w
 180: add r0.w, r0.w, l(0.000010)
 181: div r0.w, l(0.500000), r0.w
 182: mul r3.y, r2.w, r2.w
 183: mad r3.z, r2.x, r3.y, -r2.x
 184: mad r2.x, r3.z, r2.x, l(1.000000)
 185: mul r3.y, r3.y, l(0.318310)
 186: mad r2.x, r2.x, r2.x, l(0.000000)
 187: div r2.x, r3.y, r2.x
 188: mul r0.w, r0.w, r2.x
 189: mul r0.w, r0.w, l(3.141593)
 190: max r0.w, r0.w, l(0.000100)
 191: sqrt r0.w, r0.w
 192: mul r0.w, r1.w, r0.w
 193: mul r1.w, r2.w, l(0.280000)
 194: mad r1.w, -r1.w, r4.z, l(1.000000)
 195: dp3 r2.x, r0.xyzx, r0.xyzx
 196: ne r2.x, r2.x, l(0.000000)
 197: and r2.x, r2.x, l(0x3f800000)
 198: mul r0.w, r0.w, r2.x
 199: add_sat r2.x, r4.x, cb0[8].w
 200: mul r3.yzw, r2.zzzz, r7.xxyz
 201: mad r3.yzw, r8.xxyz, r4.yyyy, r3.yyzw
 202: mul r4.xyz, r7.xyzx, r0.wwww
 203: add r0.w, -r2.y, l(1.000000)
 204: mul r2.y, r0.w, r0.w
 205: mul r2.y, r2.y, r2.y
 206: mul r0.w, r0.w, r2.y
 207: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 208: mad r2.yzw, r2.yyzw, r0.wwww, r0.xxyz
 209: mul r2.yzw, r2.yyzw, r4.xxyz
 210: mad r1.xyz, r1.xyzx, r3.yzwy, r2.yzwy
 211: mul r2.yzw, r5.xxyz, r1.wwww
 212: add r3.yzw, -r0.xxyz, r2.xxxx
 213: mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 214: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 215: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 176 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r3.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r4.w, r5.xyzx, r5.xyzx
  22: sqrt r4.w, r4.w
  23: add r4.w, -r3.w, r4.w
  24: mad r3.w, cb3[25].w, r4.w, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.w, cb6[0].x, l(1.000000)
  27: if_nz r4.w
  28:   eq r5.x, cb6[0].y, l(1.000000)
  29:   mul r5.yzw, v4.wwww, cb6[2].xxyz
  30:   mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
  31:   mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
  32:   add r5.yzw, r5.yyzw, cb6[4].xxyz
  33:   movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r5.y, r6.x
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
  44: div r5.yz, v7.xxyx, v7.wwww
  45: sample r6.xyzw, r5.yzyy, t1.xyzw, s4
  46: add_sat r3.w, r3.w, r6.x
  47: min r5.x, r3.w, r5.x
  48: movc r3.w, r4.w, r5.x, r3.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.x, -cb0[9].y, l(1.000000)
  51: mad r5.x, r5.y, cb0[9].y, r5.x
  52: add r5.y, -cb0[8].w, l(1.000000)
  53: dp3 r5.z, r3.xyzx, r2.xyzx
  54: add r5.z, r5.z, r5.z
  55: mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
  56: mul r7.xyz, r3.wwww, cb0[2].xyzx
  57: if_nz r4.w
  58:   eq r3.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r3.w, r8.y, l(0.250000)
  67:   mul r4.w, cb6[0].z, l(0.500000)
  68:   mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r3.w, r3.w, r4.w
  70:   min r8.x, r5.z, r3.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.y, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.y
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r3.w, r9.w, l(-1.000000)
 116: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 117: mul r3.w, r3.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r3.wwww
 119: lt r4.w, cb5[1].w, l(0.999990)
 120: if_nz r4.w
 121:   lt r4.w, l(0.000000), cb5[6].w
 122:   if_nz r4.w
 123:     dp3 r4.w, r6.xyzx, r6.xyzx
 124:     rsq r4.w, r4.w
 125:     mul r11.xyz, r4.wwww, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r4.w, r12.y, r12.x
 133:     min r4.w, r12.z, r4.w
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
 136:   endif 
 137:   sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r4.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r4.xyzx, r2.wwww
 142:   mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.xxxx, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 147: dp3 r1.w, r6.xyzx, r6.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r6.xyz, r1.wwww, r6.xyzx
 151: dp3 r1.w, r2.xyzx, -r3.xyzx
 152: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.yyyy
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.x, -r2.w, l(1.000000)
 159: mul r3.y, r3.x, r3.x
 160: mul r3.y, r3.y, r3.y
 161: mul r3.x, r3.x, r3.y
 162: mad r3.x, r2.z, r3.x, l(1.000000)
 163: add r3.y, -|r1.w|, l(1.000000)
 164: mul r3.z, r3.y, r3.y
 165: mul r3.z, r3.z, r3.z
 166: mul r3.y, r3.y, r3.z
 167: mad r2.z, r2.z, r3.y, l(1.000000)
 168: mul r2.z, r2.z, r3.x
 169: mul r2.z, r2.w, r2.z
 170: mul r3.x, r5.y, r5.y
 171: max r3.x, r3.x, l(0.002000)
 172: add r3.z, -r3.x, l(1.000000)
 173: mad r3.w, |r1.w|, r3.z, r3.x
 174: mad r3.z, r2.w, r3.z, r3.x
 175: mul r1.w, |r1.w|, r3.z
 176: mad r1.w, r2.w, r3.w, r1.w
 177: add r1.w, r1.w, l(0.000010)
 178: div r1.w, l(0.500000), r1.w
 179: mul r3.z, r3.x, r3.x
 180: mad r3.w, r2.x, r3.z, -r2.x
 181: mad r2.x, r3.w, r2.x, l(1.000000)
 182: mul r3.z, r3.z, l(0.318310)
 183: mad r2.x, r2.x, r2.x, l(0.000000)
 184: div r2.x, r3.z, r2.x
 185: mul r1.w, r1.w, r2.x
 186: mul r1.w, r1.w, l(3.141593)
 187: max r1.w, r1.w, l(0.000100)
 188: sqrt r1.w, r1.w
 189: mul r1.w, r2.w, r1.w
 190: mul r2.x, r3.x, l(0.280000)
 191: mad r2.x, -r2.x, r5.y, l(1.000000)
 192: dp3 r2.w, r0.xyzx, r0.xyzx
 193: ne r2.w, r2.w, l(0.000000)
 194: and r2.w, r2.w, l(0x3f800000)
 195: mul r1.w, r1.w, r2.w
 196: add r0.w, -r0.w, l(1.000000)
 197: add_sat r0.w, r0.w, cb0[8].w
 198: mul r3.xzw, r2.zzzz, r7.xxyz
 199: mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
 200: mul r5.xyz, r7.xyzx, r1.wwww
 201: add r1.w, -r2.y, l(1.000000)
 202: mul r2.y, r1.w, r1.w
 203: mul r2.y, r2.y, r2.y
 204: mul r1.w, r1.w, r2.y
 205: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 206: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 207: mul r2.yzw, r2.yyzw, r5.xxyz
 208: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 209: mul r2.xyz, r4.xyzx, r2.xxxx
 210: add r3.xzw, -r0.xxyz, r0.wwww
 211: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 212: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 213: mov o0.w, l(1.000000)
 214: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v5.yyyy, cb2[1].xyzx
  20: mad r2.xyz, cb2[0].xyzx, v5.xxxx, r2.xyzx
  21: mad r2.xyz, cb2[2].xyzx, v5.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r1.x, r3.xyzx, r3.xyzx
  30: rsq r1.x, r1.x
  31: mul r3.xyz, r1.xxxx, r3.xyzx
  32: mul r4.xyz, r2.yzxy, r3.zxyz
  33: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  34: mov o5.xyz, r3.xyzx
  35: mul r1.x, v5.w, cb2[9].w
  36: mul o4.xyz, r1.xxxx, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  40: mov o6.xy, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 162 math, 14 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_DynamicLightmap" to slot 3 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 4 sampler slot -1
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float     zw
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.zw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: mov r4.x, v3.w
  16: mov r4.y, v4.w
  17: mov r4.z, v5.w
  18: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  19: mov r6.x, cb4[9].z
  20: mov r6.y, cb4[10].z
  21: mov r6.z, cb4[11].z
  22: dp3 r0.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  24: dp3 r1.w, r5.xyzx, r5.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb3[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  29: eq r1.w, cb6[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r4.w, cb6[0].y, l(1.000000)
  32:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  34:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  35:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  36:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  37:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  38:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  39:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  40:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r5.x, r4.w, r5.y
  42:   sample r5.xyzw, r5.xzwx, t7.xyzw, s2
  43: else 
  44:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  47: div r5.xy, v7.xyxx, v7.wwww
  48: sample r5.xyzw, r5.xyxx, t1.xyzw, s5
  49: add_sat r0.w, r0.w, r5.x
  50: min r4.w, r0.w, r4.w
  51: movc r0.w, r1.w, r4.w, r0.w
  52: sample r5.xyzw, v1.xyxx, t2.xyzw, s4
  53: add r1.w, -cb0[9].y, l(1.000000)
  54: mad r1.w, r5.y, cb0[9].y, r1.w
  55: add r4.w, -cb0[8].w, l(1.000000)
  56: dp3 r5.x, r3.xyzx, r2.xyzx
  57: add r5.x, r5.x, r5.x
  58: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
  59: mul r6.xyz, r0.wwww, cb0[2].xyzx
  60: sample r7.xyzw, v6.zwzz, t3.xyzw, s0
  61: mul r0.w, r7.w, cb0[1].x
  62: mul r7.xyz, r7.xyzx, r0.wwww
  63: log r7.xyz, r7.xyzx
  64: mul r7.xyz, r7.xyzx, cb0[1].yyyy
  65: exp r7.xyz, r7.xyzx
  66: sample r8.xyzw, v6.zwzz, t4.xyzw, s0
  67: add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  68: dp3 r0.w, r2.xyzx, r8.xyzx
  69: add r0.w, r0.w, l(0.500000)
  70: mul r7.xyz, r0.wwww, r7.xyzx
  71: max r0.w, r8.w, l(0.000100)
  72: div r7.xyz, r7.xyzx, r0.wwww
  73: lt r0.w, l(0.000000), cb5[2].w
  74: if_nz r0.w
  75:   dp3 r0.w, r5.xyzx, r5.xyzx
  76:   rsq r0.w, r0.w
  77:   mul r8.xyz, r0.wwww, r5.xyzx
  78:   add r9.xyz, -r4.xyzx, cb5[0].xyzx
  79:   div r9.xyz, r9.xyzx, r8.xyzx
  80:   add r10.xyz, -r4.xyzx, cb5[1].xyzx
  81:   div r10.xyz, r10.xyzx, r8.xyzx
  82:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  83:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  84:   min r0.w, r9.y, r9.x
  85:   min r0.w, r9.z, r0.w
  86:   add r9.xyz, r4.xyzx, -cb5[2].xyzx
  87:   mad r8.xyz, r8.xyzx, r0.wwww, r9.xyzx
  88: else 
  89:   mov r8.xyz, r5.xyzx
  90: endif 
  91: mad r0.w, -r4.w, l(0.700000), l(1.700000)
  92: mul r0.w, r0.w, r4.w
  93: mul r0.w, r0.w, l(6.000000)
  94: sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r0.w
  95: add r5.w, r8.w, l(-1.000000)
  96: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  97: mul r5.w, r5.w, cb5[3].x
  98: mul r9.xyz, r8.xyzx, r5.wwww
  99: lt r6.w, cb5[1].w, l(0.999990)
 100: if_nz r6.w
 101:   lt r6.w, l(0.000000), cb5[6].w
 102:   if_nz r6.w
 103:     dp3 r6.w, r5.xyzx, r5.xyzx
 104:     rsq r6.w, r6.w
 105:     mul r10.xyz, r5.xyzx, r6.wwww
 106:     add r11.xyz, -r4.xyzx, cb5[4].xyzx
 107:     div r11.xyz, r11.xyzx, r10.xyzx
 108:     add r12.xyz, -r4.xyzx, cb5[5].xyzx
 109:     div r12.xyz, r12.xyzx, r10.xyzx
 110:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 111:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 112:     min r6.w, r11.y, r11.x
 113:     min r6.w, r11.z, r6.w
 114:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 115:     mad r5.xyz, r10.xyzx, r6.wwww, r4.xyzx
 116:   endif 
 117:   sample_l r10.xyzw, r5.xyzx, t6.xyzw, s1, r0.w
 118:   add r0.w, r10.w, l(-1.000000)
 119:   mad r0.w, cb5[7].w, r0.w, l(1.000000)
 120:   mul r0.w, r0.w, cb5[7].x
 121:   mul r4.xyz, r10.xyzx, r0.wwww
 122:   mad r5.xyz, r5.wwww, r8.xyzx, -r4.xyzx
 123:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 124: endif 
 125: mul r4.xyz, r1.wwww, r9.xyzx
 126: mad r5.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 127: dp3 r0.w, r5.xyzx, r5.xyzx
 128: max r0.w, r0.w, l(0.001000)
 129: rsq r0.w, r0.w
 130: mul r5.xyz, r0.wwww, r5.xyzx
 131: dp3 r0.w, r2.xyzx, -r3.xyzx
 132: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 133: dp3_sat r2.x, r2.xyzx, r5.xyzx
 134: dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
 135: mul r2.z, r2.y, r2.y
 136: dp2 r2.z, r2.zzzz, r4.wwww
 137: add r2.z, r2.z, l(-0.500000)
 138: add r3.x, -r2.w, l(1.000000)
 139: mul r3.y, r3.x, r3.x
 140: mul r3.y, r3.y, r3.y
 141: mul r3.x, r3.x, r3.y
 142: mad r3.x, r2.z, r3.x, l(1.000000)
 143: add r3.y, -|r0.w|, l(1.000000)
 144: mul r3.z, r3.y, r3.y
 145: mul r3.z, r3.z, r3.z
 146: mul r3.y, r3.y, r3.z
 147: mad r2.z, r2.z, r3.y, l(1.000000)
 148: mul r2.z, r2.z, r3.x
 149: mul r2.z, r2.w, r2.z
 150: mul r3.x, r4.w, r4.w
 151: max r3.x, r3.x, l(0.002000)
 152: add r3.z, -r3.x, l(1.000000)
 153: mad r5.x, |r0.w|, r3.z, r3.x
 154: mad r3.z, r2.w, r3.z, r3.x
 155: mul r0.w, |r0.w|, r3.z
 156: mad r0.w, r2.w, r5.x, r0.w
 157: add r0.w, r0.w, l(0.000010)
 158: div r0.w, l(0.500000), r0.w
 159: mul r3.z, r3.x, r3.x
 160: mad r5.x, r2.x, r3.z, -r2.x
 161: mad r2.x, r5.x, r2.x, l(1.000000)
 162: mul r3.z, r3.z, l(0.318310)
 163: mad r2.x, r2.x, r2.x, l(0.000000)
 164: div r2.x, r3.z, r2.x
 165: mul r0.w, r0.w, r2.x
 166: mul r0.w, r0.w, l(3.141593)
 167: max r0.w, r0.w, l(0.000100)
 168: sqrt r0.w, r0.w
 169: mul r0.w, r2.w, r0.w
 170: mul r2.x, r3.x, l(0.280000)
 171: mad r2.x, -r2.x, r4.w, l(1.000000)
 172: dp3 r2.w, r0.xyzx, r0.xyzx
 173: ne r2.w, r2.w, l(0.000000)
 174: and r2.w, r2.w, l(0x3f800000)
 175: mul r0.w, r0.w, r2.w
 176: add_sat r2.w, r3.w, cb0[8].w
 177: mul r3.xzw, r2.zzzz, r6.xxyz
 178: mad r3.xzw, r7.xxyz, r1.wwww, r3.xxzw
 179: mul r5.xyz, r6.xyzx, r0.wwww
 180: add r0.w, -r2.y, l(1.000000)
 181: mul r1.w, r0.w, r0.w
 182: mul r1.w, r1.w, r1.w
 183: mul r0.w, r0.w, r1.w
 184: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 185: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 186: mul r5.xyz, r5.xyzx, r6.xyzx
 187: mad r1.xyz, r1.xyzx, r3.xzwx, r5.xyzx
 188: mul r2.xyz, r4.xyzx, r2.xxxx
 189: add r3.xzw, -r0.xxyz, r2.wwww
 190: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 191: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 192: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v5.yyyy, cb2[1].xyzx
  20: mad r2.xyz, cb2[0].xyzx, v5.xxxx, r2.xyzx
  21: mad r2.xyz, cb2[2].xyzx, v5.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r1.x, r3.xyzx, r3.xyzx
  30: rsq r1.x, r1.x
  31: mul r3.xyz, r1.xxxx, r3.xyzx
  32: mul r4.xyz, r2.yzxy, r3.zxyz
  33: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  34: mov o5.xyz, r3.xyzx
  35: mul r1.x, v5.w, cb2[9].w
  36: mul o4.xyz, r1.xxxx, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  40: mov o6.xy, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 160 math, 14 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_DynamicLightmap" to slot 3 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 4 sampler slot -1
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float     zw
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.zw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r2.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r3.w, r5.xyzx, r5.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb3[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  26: eq r3.w, cb6[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r4.w, cb6[0].y, l(1.000000)
  29:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  31:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  32:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  33:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  37:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r4.w, r5.y
  39:   sample r5.xyzw, r5.xzwx, t7.xyzw, s2
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  44: div r5.xy, v7.xyxx, v7.wwww
  45: sample r5.xyzw, r5.xyxx, t1.xyzw, s5
  46: add_sat r2.w, r2.w, r5.x
  47: min r4.w, r2.w, r4.w
  48: movc r2.w, r3.w, r4.w, r2.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s4
  50: add r3.w, -cb0[9].y, l(1.000000)
  51: mad r3.w, r5.y, cb0[9].y, r3.w
  52: add r4.w, -cb0[8].w, l(1.000000)
  53: dp3 r5.x, r3.xyzx, r2.xyzx
  54: add r5.x, r5.x, r5.x
  55: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
  56: mul r6.xyz, r2.wwww, cb0[2].xyzx
  57: sample r7.xyzw, v6.zwzz, t3.xyzw, s0
  58: mul r2.w, r7.w, cb0[1].x
  59: mul r7.xyz, r7.xyzx, r2.wwww
  60: log r7.xyz, r7.xyzx
  61: mul r7.xyz, r7.xyzx, cb0[1].yyyy
  62: exp r7.xyz, r7.xyzx
  63: sample r8.xyzw, v6.zwzz, t4.xyzw, s0
  64: add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  65: dp3 r2.w, r2.xyzx, r8.xyzx
  66: add r2.w, r2.w, l(0.500000)
  67: mul r7.xyz, r2.wwww, r7.xyzx
  68: max r2.w, r8.w, l(0.000100)
  69: div r7.xyz, r7.xyzx, r2.wwww
  70: lt r2.w, l(0.000000), cb5[2].w
  71: if_nz r2.w
  72:   dp3 r2.w, r5.xyzx, r5.xyzx
  73:   rsq r2.w, r2.w
  74:   mul r8.xyz, r2.wwww, r5.xyzx
  75:   add r9.xyz, -r4.xyzx, cb5[0].xyzx
  76:   div r9.xyz, r9.xyzx, r8.xyzx
  77:   add r10.xyz, -r4.xyzx, cb5[1].xyzx
  78:   div r10.xyz, r10.xyzx, r8.xyzx
  79:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  80:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  81:   min r2.w, r9.y, r9.x
  82:   min r2.w, r9.z, r2.w
  83:   add r9.xyz, r4.xyzx, -cb5[2].xyzx
  84:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  85: else 
  86:   mov r8.xyz, r5.xyzx
  87: endif 
  88: mad r2.w, -r4.w, l(0.700000), l(1.700000)
  89: mul r2.w, r2.w, r4.w
  90: mul r2.w, r2.w, l(6.000000)
  91: sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r2.w
  92: add r5.w, r8.w, l(-1.000000)
  93: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  94: mul r5.w, r5.w, cb5[3].x
  95: mul r9.xyz, r8.xyzx, r5.wwww
  96: lt r6.w, cb5[1].w, l(0.999990)
  97: if_nz r6.w
  98:   lt r6.w, l(0.000000), cb5[6].w
  99:   if_nz r6.w
 100:     dp3 r6.w, r5.xyzx, r5.xyzx
 101:     rsq r6.w, r6.w
 102:     mul r10.xyz, r5.xyzx, r6.wwww
 103:     add r11.xyz, -r4.xyzx, cb5[4].xyzx
 104:     div r11.xyz, r11.xyzx, r10.xyzx
 105:     add r12.xyz, -r4.xyzx, cb5[5].xyzx
 106:     div r12.xyz, r12.xyzx, r10.xyzx
 107:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 108:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 109:     min r6.w, r11.y, r11.x
 110:     min r6.w, r11.z, r6.w
 111:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 112:     mad r5.xyz, r10.xyzx, r6.wwww, r4.xyzx
 113:   endif 
 114:   sample_l r10.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 115:   add r2.w, r10.w, l(-1.000000)
 116:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 117:   mul r2.w, r2.w, cb5[7].x
 118:   mul r4.xyz, r10.xyzx, r2.wwww
 119:   mad r5.xyz, r5.wwww, r8.xyzx, -r4.xyzx
 120:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 121: endif 
 122: mul r4.xyz, r3.wwww, r9.xyzx
 123: mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 124: dp3 r1.w, r5.xyzx, r5.xyzx
 125: max r1.w, r1.w, l(0.001000)
 126: rsq r1.w, r1.w
 127: mul r5.xyz, r1.wwww, r5.xyzx
 128: dp3 r1.w, r2.xyzx, -r3.xyzx
 129: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 130: dp3_sat r2.x, r2.xyzx, r5.xyzx
 131: dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
 132: mul r2.z, r2.y, r2.y
 133: dp2 r2.z, r2.zzzz, r4.wwww
 134: add r2.z, r2.z, l(-0.500000)
 135: add r3.x, -r2.w, l(1.000000)
 136: mul r3.y, r3.x, r3.x
 137: mul r3.y, r3.y, r3.y
 138: mul r3.x, r3.x, r3.y
 139: mad r3.x, r2.z, r3.x, l(1.000000)
 140: add r3.y, -|r1.w|, l(1.000000)
 141: mul r3.z, r3.y, r3.y
 142: mul r3.z, r3.z, r3.z
 143: mul r3.y, r3.y, r3.z
 144: mad r2.z, r2.z, r3.y, l(1.000000)
 145: mul r2.z, r2.z, r3.x
 146: mul r2.z, r2.w, r2.z
 147: mul r3.x, r4.w, r4.w
 148: max r3.x, r3.x, l(0.002000)
 149: add r3.z, -r3.x, l(1.000000)
 150: mad r5.x, |r1.w|, r3.z, r3.x
 151: mad r3.z, r2.w, r3.z, r3.x
 152: mul r1.w, |r1.w|, r3.z
 153: mad r1.w, r2.w, r5.x, r1.w
 154: add r1.w, r1.w, l(0.000010)
 155: div r1.w, l(0.500000), r1.w
 156: mul r3.z, r3.x, r3.x
 157: mad r5.x, r2.x, r3.z, -r2.x
 158: mad r2.x, r5.x, r2.x, l(1.000000)
 159: mul r3.z, r3.z, l(0.318310)
 160: mad r2.x, r2.x, r2.x, l(0.000000)
 161: div r2.x, r3.z, r2.x
 162: mul r1.w, r1.w, r2.x
 163: mul r1.w, r1.w, l(3.141593)
 164: max r1.w, r1.w, l(0.000100)
 165: sqrt r1.w, r1.w
 166: mul r1.w, r2.w, r1.w
 167: mul r2.x, r3.x, l(0.280000)
 168: mad r2.x, -r2.x, r4.w, l(1.000000)
 169: dp3 r2.w, r0.xyzx, r0.xyzx
 170: ne r2.w, r2.w, l(0.000000)
 171: and r2.w, r2.w, l(0x3f800000)
 172: mul r1.w, r1.w, r2.w
 173: add r0.w, -r0.w, l(1.000000)
 174: add_sat r0.w, r0.w, cb0[8].w
 175: mul r5.xyz, r2.zzzz, r6.xyzx
 176: mad r3.xzw, r7.xxyz, r3.wwww, r5.xxyz
 177: mul r5.xyz, r6.xyzx, r1.wwww
 178: add r1.w, -r2.y, l(1.000000)
 179: mul r2.y, r1.w, r1.w
 180: mul r2.y, r2.y, r2.y
 181: mul r1.w, r1.w, r2.y
 182: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 183: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 184: mul r2.yzw, r2.yyzw, r5.xxyz
 185: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 186: mul r2.xyz, r4.xyzx, r2.xxxx
 187: add r3.xzw, -r0.xxyz, r0.wwww
 188: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 189: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 190: mov o0.w, l(1.000000)
 191: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 139 math, 13 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: eq r0.w, cb3[0].x, l(1.000000)
  16: if_nz r0.w
  17:   eq r0.w, cb3[0].y, l(1.000000)
  18:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  19:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  20:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  22:   mov r5.y, v3.w
  23:   mov r5.z, v4.w
  24:   mov r5.w, v5.w
  25:   movc r4.xyz, r0.wwww, r4.xyzx, r5.yzwy
  26:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  28:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r0.w, r1.w
  31:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  36: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  37: add r1.w, -cb0[9].y, l(1.000000)
  38: mad r1.w, r4.y, cb0[9].y, r1.w
  39: add r4.x, -cb0[8].w, l(1.000000)
  40: dp3 r4.y, r3.xyzx, r2.xyzx
  41: add r4.y, r4.y, r4.y
  42: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  43: mul r5.xyz, r0.wwww, cb0[2].xyzx
  44: lt r0.w, l(0.000000), cb2[2].w
  45: if_nz r0.w
  46:   dp3 r0.w, r4.yzwy, r4.yzwy
  47:   rsq r0.w, r0.w
  48:   mul r6.xyz, r0.wwww, r4.yzwy
  49:   mov r7.x, v3.w
  50:   mov r7.y, v4.w
  51:   mov r7.z, v5.w
  52:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  53:   div r8.xyz, r8.xyzx, r6.xyzx
  54:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  55:   div r9.xyz, r9.xyzx, r6.xyzx
  56:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  57:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  58:   min r0.w, r8.y, r8.x
  59:   min r0.w, r8.z, r0.w
  60:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  61:   mad r6.xyz, r6.xyzx, r0.wwww, r7.xyzx
  62: else 
  63:   mov r6.xyz, r4.yzwy
  64: endif 
  65: mad r0.w, -r4.x, l(0.700000), l(1.700000)
  66: mul r0.w, r0.w, r4.x
  67: mul r0.w, r0.w, l(6.000000)
  68: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r0.w
  69: add r5.w, r6.w, l(-1.000000)
  70: mad r5.w, cb2[3].w, r5.w, l(1.000000)
  71: mul r5.w, r5.w, cb2[3].x
  72: mul r7.xyz, r6.xyzx, r5.wwww
  73: lt r6.w, cb2[1].w, l(0.999990)
  74: if_nz r6.w
  75:   lt r6.w, l(0.000000), cb2[6].w
  76:   if_nz r6.w
  77:     dp3 r6.w, r4.yzwy, r4.yzwy
  78:     rsq r6.w, r6.w
  79:     mul r8.xyz, r4.yzwy, r6.wwww
  80:     mov r9.x, v3.w
  81:     mov r9.y, v4.w
  82:     mov r9.z, v5.w
  83:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  84:     div r10.xyz, r10.xyzx, r8.xyzx
  85:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  86:     div r11.xyz, r11.xyzx, r8.xyzx
  87:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  88:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  89:     min r6.w, r10.y, r10.x
  90:     min r6.w, r10.z, r6.w
  91:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  92:     mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
  93:   endif 
  94:   sample_l r8.xyzw, r4.yzwy, t3.xyzw, s0, r0.w
  95:   add r0.w, r8.w, l(-1.000000)
  96:   mad r0.w, cb2[7].w, r0.w, l(1.000000)
  97:   mul r0.w, r0.w, cb2[7].x
  98:   mul r4.yzw, r8.xxyz, r0.wwww
  99:   mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
 100:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
 101: endif 
 102: mul r4.yzw, r1.wwww, r7.xxyz
 103: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 104: dp3 r0.w, r6.xyzx, r6.xyzx
 105: max r0.w, r0.w, l(0.001000)
 106: rsq r0.w, r0.w
 107: mul r6.xyz, r0.wwww, r6.xyzx
 108: dp3 r0.w, r2.xyzx, -r3.xyzx
 109: dp3_sat r1.w, r2.xyzx, cb1[0].xyzx
 110: dp3_sat r2.x, r2.xyzx, r6.xyzx
 111: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 112: mul r2.z, r2.y, r2.y
 113: dp2 r2.z, r2.zzzz, r4.xxxx
 114: add r2.z, r2.z, l(-0.500000)
 115: add r2.w, -r1.w, l(1.000000)
 116: mul r3.x, r2.w, r2.w
 117: mul r3.x, r3.x, r3.x
 118: mul r2.w, r2.w, r3.x
 119: mad r2.w, r2.z, r2.w, l(1.000000)
 120: add r3.x, -|r0.w|, l(1.000000)
 121: mul r3.y, r3.x, r3.x
 122: mul r3.y, r3.y, r3.y
 123: mul r3.x, r3.x, r3.y
 124: mad r2.z, r2.z, r3.x, l(1.000000)
 125: mul r2.z, r2.z, r2.w
 126: mul r2.z, r1.w, r2.z
 127: mul r2.w, r4.x, r4.x
 128: max r2.w, r2.w, l(0.002000)
 129: add r3.y, -r2.w, l(1.000000)
 130: mad r3.z, |r0.w|, r3.y, r2.w
 131: mad r3.y, r1.w, r3.y, r2.w
 132: mul r0.w, |r0.w|, r3.y
 133: mad r0.w, r1.w, r3.z, r0.w
 134: add r0.w, r0.w, l(0.000010)
 135: div r0.w, l(0.500000), r0.w
 136: mul r3.y, r2.w, r2.w
 137: mad r3.z, r2.x, r3.y, -r2.x
 138: mad r2.x, r3.z, r2.x, l(1.000000)
 139: mul r3.y, r3.y, l(0.318310)
 140: mad r2.x, r2.x, r2.x, l(0.000000)
 141: div r2.x, r3.y, r2.x
 142: mul r0.w, r0.w, r2.x
 143: mul r0.w, r0.w, l(3.141593)
 144: max r0.w, r0.w, l(0.000100)
 145: sqrt r0.w, r0.w
 146: mul r0.w, r1.w, r0.w
 147: mul r1.w, r2.w, l(0.280000)
 148: mad r1.w, -r1.w, r4.x, l(1.000000)
 149: dp3 r2.x, r0.xyzx, r0.xyzx
 150: ne r2.x, r2.x, l(0.000000)
 151: and r2.x, r2.x, l(0x3f800000)
 152: mul r0.w, r0.w, r2.x
 153: add_sat r2.x, r3.w, cb0[8].w
 154: mul r3.yzw, r2.zzzz, r5.xxyz
 155: mul r5.xyz, r5.xyzx, r0.wwww
 156: add r0.w, -r2.y, l(1.000000)
 157: mul r2.y, r0.w, r0.w
 158: mul r2.y, r2.y, r2.y
 159: mul r0.w, r0.w, r2.y
 160: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 161: mad r2.yzw, r2.yyzw, r0.wwww, r0.xxyz
 162: mul r2.yzw, r2.yyzw, r5.xxyz
 163: mad r1.xyz, r1.xyzx, r3.yzwy, r2.yzwy
 164: mul r2.yzw, r4.yyzw, r1.wwww
 165: add r3.yzw, -r0.xxyz, r2.xxxx
 166: mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 167: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 168: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o5.xyz, r1.xyzx
  28: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  29: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  30: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  31: mul r4.xyzw, r1.yyyy, r3.xyzw
  32: mul r3.xyzw, r3.xyzw, r3.xyzw
  33: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  34: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  35: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  36: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  37: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  38: rsq r3.xyzw, r0.xyzw
  39: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  40: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  41: mul r2.xyzw, r2.xyzw, r3.xyzw
  42: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mul r0.xyzw, r0.xyzw, r2.xyzw
  44: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  45: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  46: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  47: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  48: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  49: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  50: mul r0.w, r1.y, r1.y
  51: mad r0.w, r1.x, r1.x, -r0.w
  52: mul r1.xyzw, r1.yzzx, r1.xyzz
  53: dp4 r3.x, cb2[42].xyzw, r1.xyzw
  54: dp4 r3.y, cb2[43].xyzw, r1.xyzw
  55: dp4 r3.z, cb2[44].xyzw, r1.xyzw
  56: mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  57: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  58: mov o6.w, l(0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o5.xyz, r1.xyzx
  28: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  29: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  30: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  31: mul r4.xyzw, r1.yyyy, r3.xyzw
  32: mul r3.xyzw, r3.xyzw, r3.xyzw
  33: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  34: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  35: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  36: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  37: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  38: rsq r3.xyzw, r0.xyzw
  39: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  40: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  41: mul r2.xyzw, r2.xyzw, r3.xyzw
  42: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mul r0.xyzw, r0.xyzw, r2.xyzw
  44: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  45: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  46: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  47: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  48: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  49: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  50: mul r0.w, r1.y, r1.y
  51: mad r0.w, r1.x, r1.x, -r0.w
  52: mul r1.xyzw, r1.yzzx, r1.xyzz
  53: dp4 r3.x, cb2[42].xyzw, r1.xyzw
  54: dp4 r3.y, cb2[43].xyzw, r1.xyzw
  55: dp4 r3.z, cb2[44].xyzw, r1.xyzw
  56: mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  57: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  58: mov o6.w, l(0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_ON VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTPROBE_SH VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  46: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  46: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_ON VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v5.yyyy, cb2[1].xyzx
  20: mad r2.xyz, cb2[0].xyzx, v5.xxxx, r2.xyzx
  21: mad r2.xyz, cb2[2].xyzx, v5.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r1.x, r3.xyzx, r3.xyzx
  30: rsq r1.x, r1.x
  31: mul r3.xyz, r1.xxxx, r3.xyzx
  32: mul r4.xyz, r2.yzxy, r3.zxyz
  33: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  34: mov o5.xyz, r3.xyzx
  35: mul r1.x, v5.w, cb2[9].w
  36: mul o4.xyz, r1.xxxx, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  40: mov o6.xy, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v5.yyyy, cb2[1].xyzx
  20: mad r2.xyz, cb2[0].xyzx, v5.xxxx, r2.xyzx
  21: mad r2.xyz, cb2[2].xyzx, v5.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r1.x, r3.xyzx, r3.xyzx
  30: rsq r1.x, r1.x
  31: mul r3.xyz, r1.xxxx, r3.xyzx
  32: mul r4.xyz, r2.yzxy, r3.zxyz
  33: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  34: mov o5.xyz, r3.xyzx
  35: mul r1.x, v5.w, cb2[9].w
  36: mul o4.xyz, r1.xxxx, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  40: mov o6.xy, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 23 avg math (23..26)
 // Stats for Fragment shader:
 //        d3d11: 107 avg math (83..147), 3 avg texture (2..4), 2 avg branch (2..4)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  34: dp3 r1.w, r4.xyzx, r4.xyzx
  35: sample r4.xyzw, r1.wwww, t1.xyzw, s2
  36: mul r0.w, r0.w, r4.x
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3 r1.w, r4.xyzx, r4.xyzx
  41: rsq r1.w, r1.w
  42: mul r5.xyz, r1.wwww, r4.xyzx
  43: mul r6.xyz, r0.wwww, cb0[2].xyzx
  44: add r0.w, -cb0[8].w, l(1.000000)
  45: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  46: dp3 r1.w, r4.xyzx, r4.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: dp3 r1.w, r2.xyzx, -r3.xyzx
  51: dp3_sat r2.w, r2.xyzx, r5.xyzx
  52: dp3_sat r2.x, r2.xyzx, r4.xyzx
  53: dp3_sat r2.y, r5.xyzx, r4.xyzx
  54: mul r2.z, r2.y, r2.y
  55: dp2 r2.z, r2.zzzz, r0.wwww
  56: add r2.z, r2.z, l(-0.500000)
  57: add r3.x, -r2.w, l(1.000000)
  58: mul r3.y, r3.x, r3.x
  59: mul r3.y, r3.y, r3.y
  60: mul r3.x, r3.x, r3.y
  61: mad r3.x, r2.z, r3.x, l(1.000000)
  62: add r3.y, -|r1.w|, l(1.000000)
  63: mul r3.z, r3.y, r3.y
  64: mul r3.z, r3.z, r3.z
  65: mul r3.y, r3.y, r3.z
  66: mad r2.z, r2.z, r3.y, l(1.000000)
  67: mul r2.z, r2.z, r3.x
  68: mul r2.z, r2.w, r2.z
  69: mul r0.w, r0.w, r0.w
  70: max r0.w, r0.w, l(0.002000)
  71: add r3.x, -r0.w, l(1.000000)
  72: mad r3.y, |r1.w|, r3.x, r0.w
  73: mad r3.x, r2.w, r3.x, r0.w
  74: mul r1.w, |r1.w|, r3.x
  75: mad r1.w, r2.w, r3.y, r1.w
  76: add r1.w, r1.w, l(0.000010)
  77: div r1.w, l(0.500000), r1.w
  78: mul r0.w, r0.w, r0.w
  79: mad r3.x, r2.x, r0.w, -r2.x
  80: mad r2.x, r3.x, r2.x, l(1.000000)
  81: mul r0.w, r0.w, l(0.318310)
  82: mad r2.x, r2.x, r2.x, l(0.000000)
  83: div r0.w, r0.w, r2.x
  84: mul r0.w, r0.w, r1.w
  85: mul r0.w, r0.w, l(3.141593)
  86: max r0.w, r0.w, l(0.000100)
  87: sqrt r0.w, r0.w
  88: mul r0.w, r2.w, r0.w
  89: dp3 r1.w, r0.xyzx, r0.xyzx
  90: ne r1.w, r1.w, l(0.000000)
  91: and r1.w, r1.w, l(0x3f800000)
  92: mul r0.w, r0.w, r1.w
  93: mul r2.xzw, r2.zzzz, r6.xxyz
  94: mul r3.xyz, r6.xyzx, r0.wwww
  95: add r0.w, -r2.y, l(1.000000)
  96: mul r1.w, r0.w, r0.w
  97: mul r1.w, r1.w, r1.w
  98: mul r0.w, r0.w, r1.w
  99: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 100: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 101: mul r0.xyz, r0.xyzx, r3.xyzx
 102: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 103: mov o0.w, l(1.000000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 86 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: eq r0.w, cb2[0].x, l(1.000000)
  16: if_nz r0.w
  17:   eq r0.w, cb2[0].y, l(1.000000)
  18:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  19:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  20:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  21:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  22:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  23:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  25:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  26:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r0.w, r1.w
  28:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  33: mul r4.xyz, r0.wwww, cb0[2].xyzx
  34: add r0.w, -cb0[8].w, l(1.000000)
  35: mov r5.x, v3.w
  36: mov r5.y, v4.w
  37: mov r5.z, v5.w
  38: mad r6.xyz, -v2.xyzx, r2.wwww, r5.xyzx
  39: dp3 r1.w, r6.xyzx, r6.xyzx
  40: max r1.w, r1.w, l(0.001000)
  41: rsq r1.w, r1.w
  42: mul r6.xyz, r1.wwww, r6.xyzx
  43: dp3 r1.w, r2.xyzx, -r3.xyzx
  44: dp3_sat r2.w, r2.xyzx, r5.xyzx
  45: dp3_sat r2.x, r2.xyzx, r6.xyzx
  46: dp3_sat r2.y, r5.xyzx, r6.xyzx
  47: mul r2.z, r2.y, r2.y
  48: dp2 r2.z, r2.zzzz, r0.wwww
  49: add r2.z, r2.z, l(-0.500000)
  50: add r3.x, -r2.w, l(1.000000)
  51: mul r3.y, r3.x, r3.x
  52: mul r3.y, r3.y, r3.y
  53: mul r3.x, r3.x, r3.y
  54: mad r3.x, r2.z, r3.x, l(1.000000)
  55: add r3.y, -|r1.w|, l(1.000000)
  56: mul r3.z, r3.y, r3.y
  57: mul r3.z, r3.z, r3.z
  58: mul r3.y, r3.y, r3.z
  59: mad r2.z, r2.z, r3.y, l(1.000000)
  60: mul r2.z, r2.z, r3.x
  61: mul r2.z, r2.w, r2.z
  62: mul r0.w, r0.w, r0.w
  63: max r0.w, r0.w, l(0.002000)
  64: add r3.x, -r0.w, l(1.000000)
  65: mad r3.y, |r1.w|, r3.x, r0.w
  66: mad r3.x, r2.w, r3.x, r0.w
  67: mul r1.w, |r1.w|, r3.x
  68: mad r1.w, r2.w, r3.y, r1.w
  69: add r1.w, r1.w, l(0.000010)
  70: div r1.w, l(0.500000), r1.w
  71: mul r0.w, r0.w, r0.w
  72: mad r3.x, r2.x, r0.w, -r2.x
  73: mad r2.x, r3.x, r2.x, l(1.000000)
  74: mul r0.w, r0.w, l(0.318310)
  75: mad r2.x, r2.x, r2.x, l(0.000000)
  76: div r0.w, r0.w, r2.x
  77: mul r0.w, r0.w, r1.w
  78: mul r0.w, r0.w, l(3.141593)
  79: max r0.w, r0.w, l(0.000100)
  80: sqrt r0.w, r0.w
  81: mul r0.w, r2.w, r0.w
  82: dp3 r1.w, r0.xyzx, r0.xyzx
  83: ne r1.w, r1.w, l(0.000000)
  84: and r1.w, r1.w, l(0x3f800000)
  85: mul r0.w, r0.w, r1.w
  86: mul r2.xzw, r2.zzzz, r4.xxyz
  87: mul r3.xyz, r4.xyzx, r0.wwww
  88: add r0.w, -r2.y, l(1.000000)
  89: mul r1.w, r0.w, r0.w
  90: mul r1.w, r1.w, r1.w
  91: mul r0.w, r0.w, r1.w
  92: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  93: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  94: mul r0.xyz, r0.xyzx, r3.xyzx
  95: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  96: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 83 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: mul r4.xyz, r1.wwww, cb0[2].xyzx
  31: add r1.w, -cb0[8].w, l(1.000000)
  32: mov r5.x, v3.w
  33: mov r5.y, v4.w
  34: mov r5.z, v5.w
  35: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  36: dp3 r0.w, r6.xyzx, r6.xyzx
  37: max r0.w, r0.w, l(0.001000)
  38: rsq r0.w, r0.w
  39: mul r6.xyz, r0.wwww, r6.xyzx
  40: dp3 r0.w, r2.xyzx, -r3.xyzx
  41: dp3_sat r2.w, r2.xyzx, r5.xyzx
  42: dp3_sat r2.x, r2.xyzx, r6.xyzx
  43: dp3_sat r2.y, r5.xyzx, r6.xyzx
  44: mul r2.z, r2.y, r2.y
  45: dp2 r2.z, r2.zzzz, r1.wwww
  46: add r2.z, r2.z, l(-0.500000)
  47: add r3.x, -r2.w, l(1.000000)
  48: mul r3.y, r3.x, r3.x
  49: mul r3.y, r3.y, r3.y
  50: mul r3.x, r3.x, r3.y
  51: mad r3.x, r2.z, r3.x, l(1.000000)
  52: add r3.y, -|r0.w|, l(1.000000)
  53: mul r3.z, r3.y, r3.y
  54: mul r3.z, r3.z, r3.z
  55: mul r3.y, r3.y, r3.z
  56: mad r2.z, r2.z, r3.y, l(1.000000)
  57: mul r2.z, r2.z, r3.x
  58: mul r2.z, r2.w, r2.z
  59: mul r1.w, r1.w, r1.w
  60: max r1.w, r1.w, l(0.002000)
  61: add r3.x, -r1.w, l(1.000000)
  62: mad r3.y, |r0.w|, r3.x, r1.w
  63: mad r3.x, r2.w, r3.x, r1.w
  64: mul r0.w, |r0.w|, r3.x
  65: mad r0.w, r2.w, r3.y, r0.w
  66: add r0.w, r0.w, l(0.000010)
  67: div r0.w, l(0.500000), r0.w
  68: mul r1.w, r1.w, r1.w
  69: mad r3.x, r2.x, r1.w, -r2.x
  70: mad r2.x, r3.x, r2.x, l(1.000000)
  71: mul r1.w, r1.w, l(0.318310)
  72: mad r2.x, r2.x, r2.x, l(0.000000)
  73: div r1.w, r1.w, r2.x
  74: mul r0.w, r0.w, r1.w
  75: mul r0.w, r0.w, l(3.141593)
  76: max r0.w, r0.w, l(0.000100)
  77: sqrt r0.w, r0.w
  78: mul r0.w, r2.w, r0.w
  79: dp3 r1.w, r0.xyzx, r0.xyzx
  80: ne r1.w, r1.w, l(0.000000)
  81: and r1.w, r1.w, l(0x3f800000)
  82: mul r0.w, r0.w, r1.w
  83: mul r2.xzw, r2.zzzz, r4.xxyz
  84: mul r3.xyz, r4.xyzx, r0.wwww
  85: add r0.w, -r2.y, l(1.000000)
  86: mul r1.w, r0.w, r0.w
  87: mul r1.w, r1.w, r1.w
  88: mul r0.w, r0.w, r1.w
  89: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  90: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  91: mul r0.xyz, r0.xyzx, r3.xyzx
  92: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  93: mov o0.w, l(1.000000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 101 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  16: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  17: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  18: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  19: eq r0.w, cb2[0].x, l(1.000000)
  20: if_nz r0.w
  21:   eq r0.w, cb2[0].y, l(1.000000)
  22:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  23:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  24:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  25:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  26:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  27:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  28:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  29:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  30:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  31:   max r5.x, r0.w, r1.w
  32:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  33: else 
  34:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  35: endif 
  36: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  37: lt r1.w, l(0.000000), r4.z
  38: and r1.w, r1.w, l(0x3f800000)
  39: div r5.xy, r4.xyxx, r4.wwww
  40: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  41: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  42: mul r1.w, r1.w, r5.w
  43: dp3 r2.w, r4.xyzx, r4.xyzx
  44: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  45: mul r1.w, r1.w, r4.x
  46: mul r0.w, r0.w, r1.w
  47: mov r4.x, v3.w
  48: mov r4.y, v4.w
  49: mov r4.z, v5.w
  50: dp3 r1.w, r4.xyzx, r4.xyzx
  51: rsq r1.w, r1.w
  52: mul r5.xyz, r1.wwww, r4.xyzx
  53: mul r6.xyz, r0.wwww, cb0[2].xyzx
  54: add r0.w, -cb0[8].w, l(1.000000)
  55: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  56: dp3 r1.w, r4.xyzx, r4.xyzx
  57: max r1.w, r1.w, l(0.001000)
  58: rsq r1.w, r1.w
  59: mul r4.xyz, r1.wwww, r4.xyzx
  60: dp3 r1.w, r2.xyzx, -r3.xyzx
  61: dp3_sat r2.w, r2.xyzx, r5.xyzx
  62: dp3_sat r2.x, r2.xyzx, r4.xyzx
  63: dp3_sat r2.y, r5.xyzx, r4.xyzx
  64: mul r2.z, r2.y, r2.y
  65: dp2 r2.z, r2.zzzz, r0.wwww
  66: add r2.z, r2.z, l(-0.500000)
  67: add r3.x, -r2.w, l(1.000000)
  68: mul r3.y, r3.x, r3.x
  69: mul r3.y, r3.y, r3.y
  70: mul r3.x, r3.x, r3.y
  71: mad r3.x, r2.z, r3.x, l(1.000000)
  72: add r3.y, -|r1.w|, l(1.000000)
  73: mul r3.z, r3.y, r3.y
  74: mul r3.z, r3.z, r3.z
  75: mul r3.y, r3.y, r3.z
  76: mad r2.z, r2.z, r3.y, l(1.000000)
  77: mul r2.z, r2.z, r3.x
  78: mul r2.z, r2.w, r2.z
  79: mul r0.w, r0.w, r0.w
  80: max r0.w, r0.w, l(0.002000)
  81: add r3.x, -r0.w, l(1.000000)
  82: mad r3.y, |r1.w|, r3.x, r0.w
  83: mad r3.x, r2.w, r3.x, r0.w
  84: mul r1.w, |r1.w|, r3.x
  85: mad r1.w, r2.w, r3.y, r1.w
  86: add r1.w, r1.w, l(0.000010)
  87: div r1.w, l(0.500000), r1.w
  88: mul r0.w, r0.w, r0.w
  89: mad r3.x, r2.x, r0.w, -r2.x
  90: mad r2.x, r3.x, r2.x, l(1.000000)
  91: mul r0.w, r0.w, l(0.318310)
  92: mad r2.x, r2.x, r2.x, l(0.000000)
  93: div r0.w, r0.w, r2.x
  94: mul r0.w, r0.w, r1.w
  95: mul r0.w, r0.w, l(3.141593)
  96: max r0.w, r0.w, l(0.000100)
  97: sqrt r0.w, r0.w
  98: mul r0.w, r2.w, r0.w
  99: dp3 r1.w, r0.xyzx, r0.xyzx
 100: ne r1.w, r1.w, l(0.000000)
 101: and r1.w, r1.w, l(0x3f800000)
 102: mul r0.w, r0.w, r1.w
 103: mul r2.xzw, r2.zzzz, r6.xxyz
 104: mul r3.xyz, r6.xyzx, r0.wwww
 105: add r0.w, -r2.y, l(1.000000)
 106: mul r1.w, r0.w, r0.w
 107: mul r1.w, r1.w, r1.w
 108: mul r0.w, r0.w, r1.w
 109: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 110: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 111: mul r0.xyz, r0.xyzx, r3.xyzx
 112: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 113: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  34: lt r1.w, l(0.000000), r4.z
  35: and r1.w, r1.w, l(0x3f800000)
  36: div r5.xy, r4.xyxx, r4.wwww
  37: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  39: mul r1.w, r1.w, r5.w
  40: dp3 r2.w, r4.xyzx, r4.xyzx
  41: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  42: mul r1.w, r1.w, r4.x
  43: mul r0.w, r0.w, r1.w
  44: mov r4.x, v3.w
  45: mov r4.y, v4.w
  46: mov r4.z, v5.w
  47: dp3 r1.w, r4.xyzx, r4.xyzx
  48: rsq r1.w, r1.w
  49: mul r5.xyz, r1.wwww, r4.xyzx
  50: mul r6.xyz, r0.wwww, cb0[2].xyzx
  51: add r0.w, -cb0[8].w, l(1.000000)
  52: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  53: dp3 r1.w, r4.xyzx, r4.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r4.xyz, r1.wwww, r4.xyzx
  57: dp3 r1.w, r2.xyzx, -r3.xyzx
  58: dp3_sat r2.w, r2.xyzx, r5.xyzx
  59: dp3_sat r2.x, r2.xyzx, r4.xyzx
  60: dp3_sat r2.y, r5.xyzx, r4.xyzx
  61: mul r2.z, r2.y, r2.y
  62: dp2 r2.z, r2.zzzz, r0.wwww
  63: add r2.z, r2.z, l(-0.500000)
  64: add r3.x, -r2.w, l(1.000000)
  65: mul r3.y, r3.x, r3.x
  66: mul r3.y, r3.y, r3.y
  67: mul r3.x, r3.x, r3.y
  68: mad r3.x, r2.z, r3.x, l(1.000000)
  69: add r3.y, -|r1.w|, l(1.000000)
  70: mul r3.z, r3.y, r3.y
  71: mul r3.z, r3.z, r3.z
  72: mul r3.y, r3.y, r3.z
  73: mad r2.z, r2.z, r3.y, l(1.000000)
  74: mul r2.z, r2.z, r3.x
  75: mul r2.z, r2.w, r2.z
  76: mul r0.w, r0.w, r0.w
  77: max r0.w, r0.w, l(0.002000)
  78: add r3.x, -r0.w, l(1.000000)
  79: mad r3.y, |r1.w|, r3.x, r0.w
  80: mad r3.x, r2.w, r3.x, r0.w
  81: mul r1.w, |r1.w|, r3.x
  82: mad r1.w, r2.w, r3.y, r1.w
  83: add r1.w, r1.w, l(0.000010)
  84: div r1.w, l(0.500000), r1.w
  85: mul r0.w, r0.w, r0.w
  86: mad r3.x, r2.x, r0.w, -r2.x
  87: mad r2.x, r3.x, r2.x, l(1.000000)
  88: mul r0.w, r0.w, l(0.318310)
  89: mad r2.x, r2.x, r2.x, l(0.000000)
  90: div r0.w, r0.w, r2.x
  91: mul r0.w, r0.w, r1.w
  92: mul r0.w, r0.w, l(3.141593)
  93: max r0.w, r0.w, l(0.000100)
  94: sqrt r0.w, r0.w
  95: mul r0.w, r2.w, r0.w
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r6.xxyz
 101: mul r3.xyz, r6.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 96 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  16: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  17: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  18: add r4.xyz, r4.xyzx, cb0[14].xyzx
  19: eq r0.w, cb2[0].x, l(1.000000)
  20: if_nz r0.w
  21:   eq r0.w, cb2[0].y, l(1.000000)
  22:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  23:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  24:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  25:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  26:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  27:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  28:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  29:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  30:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  31:   max r5.x, r0.w, r1.w
  32:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  33: else 
  34:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  35: endif 
  36: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  37: dp3 r1.w, r4.xyzx, r4.xyzx
  38: sample r5.xyzw, r1.wwww, t1.xyzw, s3
  39: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  40: mul r1.w, r4.w, r5.x
  41: mul r0.w, r0.w, r1.w
  42: mov r4.x, v3.w
  43: mov r4.y, v4.w
  44: mov r4.z, v5.w
  45: dp3 r1.w, r4.xyzx, r4.xyzx
  46: rsq r1.w, r1.w
  47: mul r5.xyz, r1.wwww, r4.xyzx
  48: mul r6.xyz, r0.wwww, cb0[2].xyzx
  49: add r0.w, -cb0[8].w, l(1.000000)
  50: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  51: dp3 r1.w, r4.xyzx, r4.xyzx
  52: max r1.w, r1.w, l(0.001000)
  53: rsq r1.w, r1.w
  54: mul r4.xyz, r1.wwww, r4.xyzx
  55: dp3 r1.w, r2.xyzx, -r3.xyzx
  56: dp3_sat r2.w, r2.xyzx, r5.xyzx
  57: dp3_sat r2.x, r2.xyzx, r4.xyzx
  58: dp3_sat r2.y, r5.xyzx, r4.xyzx
  59: mul r2.z, r2.y, r2.y
  60: dp2 r2.z, r2.zzzz, r0.wwww
  61: add r2.z, r2.z, l(-0.500000)
  62: add r3.x, -r2.w, l(1.000000)
  63: mul r3.y, r3.x, r3.x
  64: mul r3.y, r3.y, r3.y
  65: mul r3.x, r3.x, r3.y
  66: mad r3.x, r2.z, r3.x, l(1.000000)
  67: add r3.y, -|r1.w|, l(1.000000)
  68: mul r3.z, r3.y, r3.y
  69: mul r3.z, r3.z, r3.z
  70: mul r3.y, r3.y, r3.z
  71: mad r2.z, r2.z, r3.y, l(1.000000)
  72: mul r2.z, r2.z, r3.x
  73: mul r2.z, r2.w, r2.z
  74: mul r0.w, r0.w, r0.w
  75: max r0.w, r0.w, l(0.002000)
  76: add r3.x, -r0.w, l(1.000000)
  77: mad r3.y, |r1.w|, r3.x, r0.w
  78: mad r3.x, r2.w, r3.x, r0.w
  79: mul r1.w, |r1.w|, r3.x
  80: mad r1.w, r2.w, r3.y, r1.w
  81: add r1.w, r1.w, l(0.000010)
  82: div r1.w, l(0.500000), r1.w
  83: mul r0.w, r0.w, r0.w
  84: mad r3.x, r2.x, r0.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r0.w, r0.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r0.w, r0.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r6.xxyz
  99: mul r3.xyz, r6.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  34: dp3 r1.w, r4.xyzx, r4.xyzx
  35: sample r5.xyzw, r1.wwww, t1.xyzw, s3
  36: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  37: mul r1.w, r4.w, r5.x
  38: mul r0.w, r0.w, r1.w
  39: mov r4.x, v3.w
  40: mov r4.y, v4.w
  41: mov r4.z, v5.w
  42: dp3 r1.w, r4.xyzx, r4.xyzx
  43: rsq r1.w, r1.w
  44: mul r5.xyz, r1.wwww, r4.xyzx
  45: mul r6.xyz, r0.wwww, cb0[2].xyzx
  46: add r0.w, -cb0[8].w, l(1.000000)
  47: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  48: dp3 r1.w, r4.xyzx, r4.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r4.xyz, r1.wwww, r4.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r4.xyzx
  55: dp3_sat r2.y, r5.xyzx, r4.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r0.w, r0.w, r0.w
  72: max r0.w, r0.w, l(0.002000)
  73: add r3.x, -r0.w, l(1.000000)
  74: mad r3.y, |r1.w|, r3.x, r0.w
  75: mad r3.x, r2.w, r3.x, r0.w
  76: mul r1.w, |r1.w|, r3.x
  77: mad r1.w, r2.w, r3.y, r1.w
  78: add r1.w, r1.w, l(0.000010)
  79: div r1.w, l(0.500000), r1.w
  80: mul r0.w, r0.w, r0.w
  81: mad r3.x, r2.x, r0.w, -r2.x
  82: mad r2.x, r3.x, r2.x, l(1.000000)
  83: mul r0.w, r0.w, l(0.318310)
  84: mad r2.x, r2.x, r2.x, l(0.000000)
  85: div r0.w, r0.w, r2.x
  86: mul r0.w, r0.w, r1.w
  87: mul r0.w, r0.w, l(3.141593)
  88: max r0.w, r0.w, l(0.000100)
  89: sqrt r0.w, r0.w
  90: mul r0.w, r2.w, r0.w
  91: dp3 r1.w, r0.xyzx, r0.xyzx
  92: ne r1.w, r1.w, l(0.000000)
  93: and r1.w, r1.w, l(0x3f800000)
  94: mul r0.w, r0.w, r1.w
  95: mul r2.xzw, r2.zzzz, r6.xxyz
  96: mul r3.xyz, r6.xyzx, r0.wwww
  97: add r0.w, -r2.y, l(1.000000)
  98: mul r1.w, r0.w, r0.w
  99: mul r1.w, r1.w, r1.w
 100: mul r0.w, r0.w, r1.w
 101: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 102: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 103: mul r0.xyz, r0.xyzx, r3.xyzx
 104: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 105: mov o0.w, l(1.000000)
 106: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: mul r4.xy, v6.yyyy, cb0[12].xyxx
  16: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  17: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  18: add r4.xy, r4.xyxx, cb0[14].xyxx
  19: eq r0.w, cb2[0].x, l(1.000000)
  20: if_nz r0.w
  21:   eq r0.w, cb2[0].y, l(1.000000)
  22:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  23:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  24:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  25:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  26:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  27:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  28:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  29:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  30:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  31:   max r5.x, r0.w, r1.w
  32:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  33: else 
  34:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  35: endif 
  36: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  37: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  38: mul r0.w, r0.w, r4.w
  39: mul r4.xyz, r0.wwww, cb0[2].xyzx
  40: add r0.w, -cb0[8].w, l(1.000000)
  41: mov r5.x, v3.w
  42: mov r5.y, v4.w
  43: mov r5.z, v5.w
  44: mad r6.xyz, -v2.xyzx, r2.wwww, r5.xyzx
  45: dp3 r1.w, r6.xyzx, r6.xyzx
  46: max r1.w, r1.w, l(0.001000)
  47: rsq r1.w, r1.w
  48: mul r6.xyz, r1.wwww, r6.xyzx
  49: dp3 r1.w, r2.xyzx, -r3.xyzx
  50: dp3_sat r2.w, r2.xyzx, r5.xyzx
  51: dp3_sat r2.x, r2.xyzx, r6.xyzx
  52: dp3_sat r2.y, r5.xyzx, r6.xyzx
  53: mul r2.z, r2.y, r2.y
  54: dp2 r2.z, r2.zzzz, r0.wwww
  55: add r2.z, r2.z, l(-0.500000)
  56: add r3.x, -r2.w, l(1.000000)
  57: mul r3.y, r3.x, r3.x
  58: mul r3.y, r3.y, r3.y
  59: mul r3.x, r3.x, r3.y
  60: mad r3.x, r2.z, r3.x, l(1.000000)
  61: add r3.y, -|r1.w|, l(1.000000)
  62: mul r3.z, r3.y, r3.y
  63: mul r3.z, r3.z, r3.z
  64: mul r3.y, r3.y, r3.z
  65: mad r2.z, r2.z, r3.y, l(1.000000)
  66: mul r2.z, r2.z, r3.x
  67: mul r2.z, r2.w, r2.z
  68: mul r0.w, r0.w, r0.w
  69: max r0.w, r0.w, l(0.002000)
  70: add r3.x, -r0.w, l(1.000000)
  71: mad r3.y, |r1.w|, r3.x, r0.w
  72: mad r3.x, r2.w, r3.x, r0.w
  73: mul r1.w, |r1.w|, r3.x
  74: mad r1.w, r2.w, r3.y, r1.w
  75: add r1.w, r1.w, l(0.000010)
  76: div r1.w, l(0.500000), r1.w
  77: mul r0.w, r0.w, r0.w
  78: mad r3.x, r2.x, r0.w, -r2.x
  79: mad r2.x, r3.x, r2.x, l(1.000000)
  80: mul r0.w, r0.w, l(0.318310)
  81: mad r2.x, r2.x, r2.x, l(0.000000)
  82: div r0.w, r0.w, r2.x
  83: mul r0.w, r0.w, r1.w
  84: mul r0.w, r0.w, l(3.141593)
  85: max r0.w, r0.w, l(0.000100)
  86: sqrt r0.w, r0.w
  87: mul r0.w, r2.w, r0.w
  88: dp3 r1.w, r0.xyzx, r0.xyzx
  89: ne r1.w, r1.w, l(0.000000)
  90: and r1.w, r1.w, l(0x3f800000)
  91: mul r0.w, r0.w, r1.w
  92: mul r2.xzw, r2.zzzz, r4.xxyz
  93: mul r3.xyz, r4.xyzx, r0.wwww
  94: add r0.w, -r2.y, l(1.000000)
  95: mul r1.w, r0.w, r0.w
  96: mul r1.w, r1.w, r1.w
  97: mul r0.w, r0.w, r1.w
  98: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 100: mul r0.xyz, r0.xyzx, r3.xyzx
 101: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 102: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 88 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  35: mul r1.w, r1.w, r4.w
  36: mul r4.xyz, r1.wwww, cb0[2].xyzx
  37: add r1.w, -cb0[8].w, l(1.000000)
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  42: dp3 r0.w, r6.xyzx, r6.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r6.xyz, r0.wwww, r6.xyzx
  46: dp3 r0.w, r2.xyzx, -r3.xyzx
  47: dp3_sat r2.w, r2.xyzx, r5.xyzx
  48: dp3_sat r2.x, r2.xyzx, r6.xyzx
  49: dp3_sat r2.y, r5.xyzx, r6.xyzx
  50: mul r2.z, r2.y, r2.y
  51: dp2 r2.z, r2.zzzz, r1.wwww
  52: add r2.z, r2.z, l(-0.500000)
  53: add r3.x, -r2.w, l(1.000000)
  54: mul r3.y, r3.x, r3.x
  55: mul r3.y, r3.y, r3.y
  56: mul r3.x, r3.x, r3.y
  57: mad r3.x, r2.z, r3.x, l(1.000000)
  58: add r3.y, -|r0.w|, l(1.000000)
  59: mul r3.z, r3.y, r3.y
  60: mul r3.z, r3.z, r3.z
  61: mul r3.y, r3.y, r3.z
  62: mad r2.z, r2.z, r3.y, l(1.000000)
  63: mul r2.z, r2.z, r3.x
  64: mul r2.z, r2.w, r2.z
  65: mul r1.w, r1.w, r1.w
  66: max r1.w, r1.w, l(0.002000)
  67: add r3.x, -r1.w, l(1.000000)
  68: mad r3.y, |r0.w|, r3.x, r1.w
  69: mad r3.x, r2.w, r3.x, r1.w
  70: mul r0.w, |r0.w|, r3.x
  71: mad r0.w, r2.w, r3.y, r0.w
  72: add r0.w, r0.w, l(0.000010)
  73: div r0.w, l(0.500000), r0.w
  74: mul r1.w, r1.w, r1.w
  75: mad r3.x, r2.x, r1.w, -r2.x
  76: mad r2.x, r3.x, r2.x, l(1.000000)
  77: mul r1.w, r1.w, l(0.318310)
  78: mad r2.x, r2.x, r2.x, l(0.000000)
  79: div r1.w, r1.w, r2.x
  80: mul r0.w, r0.w, r1.w
  81: mul r0.w, r0.w, l(3.141593)
  82: max r0.w, r0.w, l(0.000100)
  83: sqrt r0.w, r0.w
  84: mul r0.w, r2.w, r0.w
  85: dp3 r1.w, r0.xyzx, r0.xyzx
  86: ne r1.w, r1.w, l(0.000000)
  87: and r1.w, r1.w, l(0x3f800000)
  88: mul r0.w, r0.w, r1.w
  89: mul r2.xzw, r2.zzzz, r4.xxyz
  90: mul r3.xyz, r4.xyzx, r0.wwww
  91: add r0.w, -r2.y, l(1.000000)
  92: mul r1.w, r0.w, r0.w
  93: mul r1.w, r1.w, r1.w
  94: mul r0.w, r0.w, r1.w
  95: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  96: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  97: mul r0.xyz, r0.xyzx, r3.xyzx
  98: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  99: mov o0.w, l(1.000000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  16: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  17: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  18: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  48: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  49: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  50: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  51: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  52: div r5.xyz, r5.xyzx, r5.wwww
  53: sample_c_lz r3.w, r5.xyxx, t4.xxxx, s1, r5.z
  54: add r5.x, -cb3[24].x, l(1.000000)
  55: mad r3.w, r3.w, r5.x, cb3[24].x
  56: add_sat r0.w, r0.w, r3.w
  57: min r2.w, r0.w, r2.w
  58: movc r0.w, r1.w, r2.w, r0.w
  59: lt r1.w, l(0.000000), r4.z
  60: and r1.w, r1.w, l(0x3f800000)
  61: div r5.xy, r4.xyxx, r4.wwww
  62: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  63: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  64: mul r1.w, r1.w, r5.w
  65: dp3 r2.w, r4.xyzx, r4.xyzx
  66: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  67: mul r1.w, r1.w, r4.x
  68: mul r0.w, r0.w, r1.w
  69: mov r4.x, v3.w
  70: mov r4.y, v4.w
  71: mov r4.z, v5.w
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: rsq r1.w, r1.w
  74: mul r5.xyz, r1.wwww, r4.xyzx
  75: mul r6.xyz, r0.wwww, cb0[2].xyzx
  76: add r0.w, -cb0[8].w, l(1.000000)
  77: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  78: dp3 r1.w, r4.xyzx, r4.xyzx
  79: max r1.w, r1.w, l(0.001000)
  80: rsq r1.w, r1.w
  81: mul r4.xyz, r1.wwww, r4.xyzx
  82: dp3 r1.w, r2.xyzx, -r3.xyzx
  83: dp3_sat r2.w, r2.xyzx, r5.xyzx
  84: dp3_sat r2.x, r2.xyzx, r4.xyzx
  85: dp3_sat r2.y, r5.xyzx, r4.xyzx
  86: mul r2.z, r2.y, r2.y
  87: dp2 r2.z, r2.zzzz, r0.wwww
  88: add r2.z, r2.z, l(-0.500000)
  89: add r3.x, -r2.w, l(1.000000)
  90: mul r3.y, r3.x, r3.x
  91: mul r3.y, r3.y, r3.y
  92: mul r3.x, r3.x, r3.y
  93: mad r3.x, r2.z, r3.x, l(1.000000)
  94: add r3.y, -|r1.w|, l(1.000000)
  95: mul r3.z, r3.y, r3.y
  96: mul r3.z, r3.z, r3.z
  97: mul r3.y, r3.y, r3.z
  98: mad r2.z, r2.z, r3.y, l(1.000000)
  99: mul r2.z, r2.z, r3.x
 100: mul r2.z, r2.w, r2.z
 101: mul r0.w, r0.w, r0.w
 102: max r0.w, r0.w, l(0.002000)
 103: add r3.x, -r0.w, l(1.000000)
 104: mad r3.y, |r1.w|, r3.x, r0.w
 105: mad r3.x, r2.w, r3.x, r0.w
 106: mul r1.w, |r1.w|, r3.x
 107: mad r1.w, r2.w, r3.y, r1.w
 108: add r1.w, r1.w, l(0.000010)
 109: div r1.w, l(0.500000), r1.w
 110: mul r0.w, r0.w, r0.w
 111: mad r3.x, r2.x, r0.w, -r2.x
 112: mad r2.x, r3.x, r2.x, l(1.000000)
 113: mul r0.w, r0.w, l(0.318310)
 114: mad r2.x, r2.x, r2.x, l(0.000000)
 115: div r0.w, r0.w, r2.x
 116: mul r0.w, r0.w, r1.w
 117: mul r0.w, r0.w, l(3.141593)
 118: max r0.w, r0.w, l(0.000100)
 119: sqrt r0.w, r0.w
 120: mul r0.w, r2.w, r0.w
 121: dp3 r1.w, r0.xyzx, r0.xyzx
 122: ne r1.w, r1.w, l(0.000000)
 123: and r1.w, r1.w, l(0x3f800000)
 124: mul r0.w, r0.w, r1.w
 125: mul r2.xzw, r2.zzzz, r6.xxyz
 126: mul r3.xyz, r6.xyzx, r0.wwww
 127: add r0.w, -r2.y, l(1.000000)
 128: mul r1.w, r0.w, r0.w
 129: mul r1.w, r1.w, r1.w
 130: mul r0.w, r0.w, r1.w
 131: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 132: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 133: mul r0.xyz, r0.xyzx, r3.xyzx
 134: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 135: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 115 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  45: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  46: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  47: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  48: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  49: div r5.xyz, r5.xyzx, r5.wwww
  50: sample_c_lz r3.w, r5.xyxx, t4.xxxx, s1, r5.z
  51: add r5.x, -cb3[24].x, l(1.000000)
  52: mad r3.w, r3.w, r5.x, cb3[24].x
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: lt r1.w, l(0.000000), r4.z
  57: and r1.w, r1.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  61: mul r1.w, r1.w, r5.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  64: mul r1.w, r1.w, r4.x
  65: mul r0.w, r0.w, r1.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r1.w, r4.xyzx, r4.xyzx
  70: rsq r1.w, r1.w
  71: mul r5.xyz, r1.wwww, r4.xyzx
  72: mul r6.xyz, r0.wwww, cb0[2].xyzx
  73: add r0.w, -cb0[8].w, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r0.w, r0.w, r0.w
  99: max r0.w, r0.w, l(0.002000)
 100: add r3.x, -r0.w, l(1.000000)
 101: mad r3.y, |r1.w|, r3.x, r0.w
 102: mad r3.x, r2.w, r3.x, r0.w
 103: mul r1.w, |r1.w|, r3.x
 104: mad r1.w, r2.w, r3.y, r1.w
 105: add r1.w, r1.w, l(0.000010)
 106: div r1.w, l(0.500000), r1.w
 107: mul r0.w, r0.w, r0.w
 108: mad r3.x, r2.x, r0.w, -r2.x
 109: mad r2.x, r3.x, r2.x, l(1.000000)
 110: mul r0.w, r0.w, l(0.318310)
 111: mad r2.x, r2.x, r2.x, l(0.000000)
 112: div r0.w, r0.w, r2.x
 113: mul r0.w, r0.w, r1.w
 114: mul r0.w, r0.w, l(3.141593)
 115: max r0.w, r0.w, l(0.000100)
 116: sqrt r0.w, r0.w
 117: mul r0.w, r2.w, r0.w
 118: dp3 r1.w, r0.xyzx, r0.xyzx
 119: ne r1.w, r1.w, l(0.000000)
 120: and r1.w, r1.w, l(0x3f800000)
 121: mul r0.w, r0.w, r1.w
 122: mul r2.xzw, r2.zzzz, r6.xxyz
 123: mul r3.xyz, r6.xyzx, r0.wwww
 124: add r0.w, -r2.y, l(1.000000)
 125: mul r1.w, r0.w, r0.w
 126: mul r1.w, r1.w, r1.w
 127: mul r0.w, r0.w, r1.w
 128: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 130: mul r0.xyz, r0.xyzx, r3.xyzx
 131: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[14].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[12].xxxy, cb0[12].zzzw
  11: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 147 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[9].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  16: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  17: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  18: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  48: lt r3.w, r0.w, l(0.990000)
  49: if_nz r3.w
  50:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  51:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  52:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  53:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  54:   div r5.xyz, r5.xyzx, r5.wwww
  55:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  56:   round_ni r6.xy, r6.xyxx
  57:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  58:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  59:   mul r8.xw, r7.xxxz, r7.xxxz
  60:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  61:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  62:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  63:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  64:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  65:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  66:   mov r9.x, r6.z
  67:   mov r9.y, r7.x
  68:   mov r9.z, r5.x
  69:   mov r9.w, r8.x
  70:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  71:   mov r8.x, r6.w
  72:   mov r8.y, r7.z
  73:   mov r8.z, r5.y
  74:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  75:   add r8.xyzw, r9.ywyw, r9.xzxz
  76:   add r10.xyzw, r7.yyww, r7.xxzz
  77:   div r5.xy, r9.ywyy, r8.zwzz
  78:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  79:   div r6.zw, r7.yyyw, r10.yyyw
  80:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  81:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  82:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  83:   mul r8.xyzw, r8.xyzw, r10.xyzw
  84:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  85:   sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r5.z
  86:   sample_c_lz r5.x, r9.zwzz, t4.xxxx, s1, r5.z
  87:   mul r5.x, r5.x, r8.y
  88:   mad r3.w, r8.x, r3.w, r5.x
  89:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  90:   sample_c_lz r5.x, r6.xyxx, t4.xxxx, s1, r5.z
  91:   mad r3.w, r8.z, r5.x, r3.w
  92:   sample_c_lz r5.x, r6.zwzz, t4.xxxx, s1, r5.z
  93:   mad r3.w, r8.w, r5.x, r3.w
  94:   add r5.x, -cb3[24].x, l(1.000000)
  95:   mad r3.w, r3.w, r5.x, cb3[24].x
  96: else 
  97:   mov r3.w, l(1.000000)
  98: endif 
  99: add_sat r0.w, r0.w, r3.w
 100: min r2.w, r0.w, r2.w
 101: movc r0.w, r1.w, r2.w, r0.w
 102: lt r1.w, l(0.000000), r4.z
 103: and r1.w, r1.w, l(0x3f800000)
 104: div r5.xy, r4.xyxx, r4.wwww
 105: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 106: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 107: mul r1.w, r1.w, r5.w
 108: dp3 r2.w, r4.xyzx, r4.xyzx
 109: sample r4.xyzw, r2.wwww, t2.xyzw, s4
 110: mul r1.w, r1.w, r4.x
 111: mul r0.w, r0.w, r1.w
 112: mov r4.x, v3.w
 113: mov r4.y, v4.w
 114: mov r4.z, v5.w
 115: dp3 r1.w, r4.xyzx, r4.xyzx
 116: rsq r1.w, r1.w
 117: mul r5.xyz, r1.wwww, r4.xyzx
 118: mul r6.xyz, r0.wwww, cb0[2].xyzx
 119: add r0.w, -cb0[13].w, l(1.000000)
 120: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
 121: dp3 r1.w, r4.xyzx, r4.xyzx
 122: max r1.w, r1.w, l(0.001000)
 123: rsq r1.w, r1.w
 124: mul r4.xyz, r1.wwww, r4.xyzx
 125: dp3 r1.w, r2.xyzx, -r3.xyzx
 126: dp3_sat r2.w, r2.xyzx, r5.xyzx
 127: dp3_sat r2.x, r2.xyzx, r4.xyzx
 128: dp3_sat r2.y, r5.xyzx, r4.xyzx
 129: mul r2.z, r2.y, r2.y
 130: dp2 r2.z, r2.zzzz, r0.wwww
 131: add r2.z, r2.z, l(-0.500000)
 132: add r3.x, -r2.w, l(1.000000)
 133: mul r3.y, r3.x, r3.x
 134: mul r3.y, r3.y, r3.y
 135: mul r3.x, r3.x, r3.y
 136: mad r3.x, r2.z, r3.x, l(1.000000)
 137: add r3.y, -|r1.w|, l(1.000000)
 138: mul r3.z, r3.y, r3.y
 139: mul r3.z, r3.z, r3.z
 140: mul r3.y, r3.y, r3.z
 141: mad r2.z, r2.z, r3.y, l(1.000000)
 142: mul r2.z, r2.z, r3.x
 143: mul r2.z, r2.w, r2.z
 144: mul r0.w, r0.w, r0.w
 145: max r0.w, r0.w, l(0.002000)
 146: add r3.x, -r0.w, l(1.000000)
 147: mad r3.y, |r1.w|, r3.x, r0.w
 148: mad r3.x, r2.w, r3.x, r0.w
 149: mul r1.w, |r1.w|, r3.x
 150: mad r1.w, r2.w, r3.y, r1.w
 151: add r1.w, r1.w, l(0.000010)
 152: div r1.w, l(0.500000), r1.w
 153: mul r0.w, r0.w, r0.w
 154: mad r3.x, r2.x, r0.w, -r2.x
 155: mad r2.x, r3.x, r2.x, l(1.000000)
 156: mul r0.w, r0.w, l(0.318310)
 157: mad r2.x, r2.x, r2.x, l(0.000000)
 158: div r0.w, r0.w, r2.x
 159: mul r0.w, r0.w, r1.w
 160: mul r0.w, r0.w, l(3.141593)
 161: max r0.w, r0.w, l(0.000100)
 162: sqrt r0.w, r0.w
 163: mul r0.w, r2.w, r0.w
 164: dp3 r1.w, r0.xyzx, r0.xyzx
 165: ne r1.w, r1.w, l(0.000000)
 166: and r1.w, r1.w, l(0x3f800000)
 167: mul r0.w, r0.w, r1.w
 168: mul r2.xzw, r2.zzzz, r6.xxyz
 169: mul r3.xyz, r6.xyzx, r0.wwww
 170: add r0.w, -r2.y, l(1.000000)
 171: mul r1.w, r0.w, r0.w
 172: mul r1.w, r1.w, r1.w
 173: mul r0.w, r0.w, r1.w
 174: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 176: mul r0.xyz, r0.xyzx, r3.xyzx
 177: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 178: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[14].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[12].xxxy, cb0[12].zzzw
  11: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 144 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  48:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  49:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  50:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  51:   div r5.xyz, r5.xyzx, r5.wwww
  52:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  53:   round_ni r6.xy, r6.xyxx
  54:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  55:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  56:   mul r8.xw, r7.xxxz, r7.xxxz
  57:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  58:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  59:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  61:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  63:   mov r9.x, r6.z
  64:   mov r9.y, r7.x
  65:   mov r9.z, r5.x
  66:   mov r9.w, r8.x
  67:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  68:   mov r8.x, r6.w
  69:   mov r8.y, r7.z
  70:   mov r8.z, r5.y
  71:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   add r8.xyzw, r9.ywyw, r9.xzxz
  73:   add r10.xyzw, r7.yyww, r7.xxzz
  74:   div r5.xy, r9.ywyy, r8.zwzz
  75:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  76:   div r6.zw, r7.yyyw, r10.yyyw
  77:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  78:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  79:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  80:   mul r8.xyzw, r8.xyzw, r10.xyzw
  81:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  82:   sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r5.z
  83:   sample_c_lz r5.x, r9.zwzz, t4.xxxx, s1, r5.z
  84:   mul r5.x, r5.x, r8.y
  85:   mad r3.w, r8.x, r3.w, r5.x
  86:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  87:   sample_c_lz r5.x, r6.xyxx, t4.xxxx, s1, r5.z
  88:   mad r3.w, r8.z, r5.x, r3.w
  89:   sample_c_lz r5.x, r6.zwzz, t4.xxxx, s1, r5.z
  90:   mad r3.w, r8.w, r5.x, r3.w
  91:   add r5.x, -cb3[24].x, l(1.000000)
  92:   mad r3.w, r3.w, r5.x, cb3[24].x
  93: else 
  94:   mov r3.w, l(1.000000)
  95: endif 
  96: add_sat r0.w, r0.w, r3.w
  97: min r2.w, r0.w, r2.w
  98: movc r0.w, r1.w, r2.w, r0.w
  99: lt r1.w, l(0.000000), r4.z
 100: and r1.w, r1.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 104: mul r1.w, r1.w, r5.w
 105: dp3 r2.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r2.wwww, t2.xyzw, s4
 107: mul r1.w, r1.w, r4.x
 108: mul r0.w, r0.w, r1.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r1.w, r4.xyzx, r4.xyzx
 113: rsq r1.w, r1.w
 114: mul r5.xyz, r1.wwww, r4.xyzx
 115: mul r6.xyz, r0.wwww, cb0[2].xyzx
 116: add r0.w, -cb0[13].w, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.wwww
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r0.w, r0.w, r0.w
 142: max r0.w, r0.w, l(0.002000)
 143: add r3.x, -r0.w, l(1.000000)
 144: mad r3.y, |r1.w|, r3.x, r0.w
 145: mad r3.x, r2.w, r3.x, r0.w
 146: mul r1.w, |r1.w|, r3.x
 147: mad r1.w, r2.w, r3.y, r1.w
 148: add r1.w, r1.w, l(0.000010)
 149: div r1.w, l(0.500000), r1.w
 150: mul r0.w, r0.w, r0.w
 151: mad r3.x, r2.x, r0.w, -r2.x
 152: mad r2.x, r3.x, r2.x, l(1.000000)
 153: mul r0.w, r0.w, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r0.w, r0.w, r2.x
 156: mul r0.w, r0.w, r1.w
 157: mul r0.w, r0.w, l(3.141593)
 158: max r0.w, r0.w, l(0.000100)
 159: sqrt r0.w, r0.w
 160: mul r0.w, r2.w, r0.w
 161: dp3 r1.w, r0.xyzx, r0.xyzx
 162: ne r1.w, r1.w, l(0.000000)
 163: and r1.w, r1.w, l(0x3f800000)
 164: mul r0.w, r0.w, r1.w
 165: mul r2.xzw, r2.zzzz, r6.xxyz
 166: mul r3.xyz, r6.xyzx, r0.wwww
 167: add r0.w, -r2.y, l(1.000000)
 168: mul r1.w, r0.w, r0.w
 169: mul r1.w, r1.w, r1.w
 170: mul r0.w, r0.w, r1.w
 171: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 172: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 173: mul r0.xyz, r0.xyzx, r3.xyzx
 174: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  16: mov r5.x, cb4[9].z
  17: mov r5.y, cb4[10].z
  18: mov r5.z, cb4[11].z
  19: dp3 r0.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  21: dp3 r1.w, r4.xyzx, r4.xyzx
  22: sqrt r1.w, r1.w
  23: add r1.w, -r0.w, r1.w
  24: mad r0.w, cb3[25].w, r1.w, r0.w
  25: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  26: eq r1.w, cb5[0].x, l(1.000000)
  27: if_nz r1.w
  28:   eq r3.w, cb5[0].y, l(1.000000)
  29:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  30:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  31:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  33:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  34:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  36:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  37:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  38:   max r4.x, r3.w, r4.y
  39:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  40: else 
  41:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  44: div r4.xy, v7.xyxx, v7.wwww
  45: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  46: add_sat r0.w, r0.w, r4.x
  47: min r3.w, r0.w, r3.w
  48: movc r0.w, r1.w, r3.w, r0.w
  49: mul r4.xyz, r0.wwww, cb0[2].xyzx
  50: add r0.w, -cb0[8].w, l(1.000000)
  51: mov r5.x, v3.w
  52: mov r5.y, v4.w
  53: mov r5.z, v5.w
  54: mad r6.xyz, -v2.xyzx, r2.wwww, r5.xyzx
  55: dp3 r1.w, r6.xyzx, r6.xyzx
  56: max r1.w, r1.w, l(0.001000)
  57: rsq r1.w, r1.w
  58: mul r6.xyz, r1.wwww, r6.xyzx
  59: dp3 r1.w, r2.xyzx, -r3.xyzx
  60: dp3_sat r2.w, r2.xyzx, r5.xyzx
  61: dp3_sat r2.x, r2.xyzx, r6.xyzx
  62: dp3_sat r2.y, r5.xyzx, r6.xyzx
  63: mul r2.z, r2.y, r2.y
  64: dp2 r2.z, r2.zzzz, r0.wwww
  65: add r2.z, r2.z, l(-0.500000)
  66: add r3.x, -r2.w, l(1.000000)
  67: mul r3.y, r3.x, r3.x
  68: mul r3.y, r3.y, r3.y
  69: mul r3.x, r3.x, r3.y
  70: mad r3.x, r2.z, r3.x, l(1.000000)
  71: add r3.y, -|r1.w|, l(1.000000)
  72: mul r3.z, r3.y, r3.y
  73: mul r3.z, r3.z, r3.z
  74: mul r3.y, r3.y, r3.z
  75: mad r2.z, r2.z, r3.y, l(1.000000)
  76: mul r2.z, r2.z, r3.x
  77: mul r2.z, r2.w, r2.z
  78: mul r0.w, r0.w, r0.w
  79: max r0.w, r0.w, l(0.002000)
  80: add r3.x, -r0.w, l(1.000000)
  81: mad r3.y, |r1.w|, r3.x, r0.w
  82: mad r3.x, r2.w, r3.x, r0.w
  83: mul r1.w, |r1.w|, r3.x
  84: mad r1.w, r2.w, r3.y, r1.w
  85: add r1.w, r1.w, l(0.000010)
  86: div r1.w, l(0.500000), r1.w
  87: mul r0.w, r0.w, r0.w
  88: mad r3.x, r2.x, r0.w, -r2.x
  89: mad r2.x, r3.x, r2.x, l(1.000000)
  90: mul r0.w, r0.w, l(0.318310)
  91: mad r2.x, r2.x, r2.x, l(0.000000)
  92: div r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, r1.w
  94: mul r0.w, r0.w, l(3.141593)
  95: max r0.w, r0.w, l(0.000100)
  96: sqrt r0.w, r0.w
  97: mul r0.w, r2.w, r0.w
  98: dp3 r1.w, r0.xyzx, r0.xyzx
  99: ne r1.w, r1.w, l(0.000000)
 100: and r1.w, r1.w, l(0x3f800000)
 101: mul r0.w, r0.w, r1.w
 102: mul r2.xzw, r2.zzzz, r4.xxyz
 103: mul r3.xyz, r4.xyzx, r0.wwww
 104: add r0.w, -r2.y, l(1.000000)
 105: mul r1.w, r0.w, r0.w
 106: mul r1.w, r1.w, r1.w
 107: mul r0.w, r0.w, r1.w
 108: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 109: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 110: mul r0.xyz, r0.xyzx, r3.xyzx
 111: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 112: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r1.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r4.xyzx, r4.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb5[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r3.w, cb5[0].y, l(1.000000)
  26:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  27:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  28:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  29:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  30:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  33:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  34:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r3.w, r4.y
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  41: div r4.xy, v7.xyxx, v7.wwww
  42: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  43: add_sat r1.w, r1.w, r4.x
  44: min r3.w, r1.w, r3.w
  45: movc r1.w, r2.w, r3.w, r1.w
  46: mul r4.xyz, r1.wwww, cb0[2].xyzx
  47: add r1.w, -cb0[8].w, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  52: dp3 r0.w, r6.xyzx, r6.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r6.xyz, r0.wwww, r6.xyzx
  56: dp3 r0.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r1.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r0.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r1.w, r1.w, r1.w
  76: max r1.w, r1.w, l(0.002000)
  77: add r3.x, -r1.w, l(1.000000)
  78: mad r3.y, |r0.w|, r3.x, r1.w
  79: mad r3.x, r2.w, r3.x, r1.w
  80: mul r0.w, |r0.w|, r3.x
  81: mad r0.w, r2.w, r3.y, r0.w
  82: add r0.w, r0.w, l(0.000010)
  83: div r0.w, l(0.500000), r0.w
  84: mul r1.w, r1.w, r1.w
  85: mad r3.x, r2.x, r1.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r1.w, r1.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r1.w, r1.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r4.xxyz
 100: mul r3.xyz, r4.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 102 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: mul r4.xy, v6.yyyy, cb0[12].xyxx
  16: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  17: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  18: add r4.xy, r4.xyxx, cb0[14].xyxx
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r3.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r3.w, r4.z
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  48: div r4.zw, v7.xxxy, v7.wwww
  49: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  50: add_sat r0.w, r0.w, r5.x
  51: min r3.w, r0.w, r3.w
  52: movc r0.w, r1.w, r3.w, r0.w
  53: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  54: mul r0.w, r0.w, r4.w
  55: mul r4.xyz, r0.wwww, cb0[2].xyzx
  56: add r0.w, -cb0[8].w, l(1.000000)
  57: mov r5.x, v3.w
  58: mov r5.y, v4.w
  59: mov r5.z, v5.w
  60: mad r6.xyz, -v2.xyzx, r2.wwww, r5.xyzx
  61: dp3 r1.w, r6.xyzx, r6.xyzx
  62: max r1.w, r1.w, l(0.001000)
  63: rsq r1.w, r1.w
  64: mul r6.xyz, r1.wwww, r6.xyzx
  65: dp3 r1.w, r2.xyzx, -r3.xyzx
  66: dp3_sat r2.w, r2.xyzx, r5.xyzx
  67: dp3_sat r2.x, r2.xyzx, r6.xyzx
  68: dp3_sat r2.y, r5.xyzx, r6.xyzx
  69: mul r2.z, r2.y, r2.y
  70: dp2 r2.z, r2.zzzz, r0.wwww
  71: add r2.z, r2.z, l(-0.500000)
  72: add r3.x, -r2.w, l(1.000000)
  73: mul r3.y, r3.x, r3.x
  74: mul r3.y, r3.y, r3.y
  75: mul r3.x, r3.x, r3.y
  76: mad r3.x, r2.z, r3.x, l(1.000000)
  77: add r3.y, -|r1.w|, l(1.000000)
  78: mul r3.z, r3.y, r3.y
  79: mul r3.z, r3.z, r3.z
  80: mul r3.y, r3.y, r3.z
  81: mad r2.z, r2.z, r3.y, l(1.000000)
  82: mul r2.z, r2.z, r3.x
  83: mul r2.z, r2.w, r2.z
  84: mul r0.w, r0.w, r0.w
  85: max r0.w, r0.w, l(0.002000)
  86: add r3.x, -r0.w, l(1.000000)
  87: mad r3.y, |r1.w|, r3.x, r0.w
  88: mad r3.x, r2.w, r3.x, r0.w
  89: mul r1.w, |r1.w|, r3.x
  90: mad r1.w, r2.w, r3.y, r1.w
  91: add r1.w, r1.w, l(0.000010)
  92: div r1.w, l(0.500000), r1.w
  93: mul r0.w, r0.w, r0.w
  94: mad r3.x, r2.x, r0.w, -r2.x
  95: mad r2.x, r3.x, r2.x, l(1.000000)
  96: mul r0.w, r0.w, l(0.318310)
  97: mad r2.x, r2.x, r2.x, l(0.000000)
  98: div r0.w, r0.w, r2.x
  99: mul r0.w, r0.w, r1.w
 100: mul r0.w, r0.w, l(3.141593)
 101: max r0.w, r0.w, l(0.000100)
 102: sqrt r0.w, r0.w
 103: mul r0.w, r2.w, r0.w
 104: dp3 r1.w, r0.xyzx, r0.xyzx
 105: ne r1.w, r1.w, l(0.000000)
 106: and r1.w, r1.w, l(0x3f800000)
 107: mul r0.w, r0.w, r1.w
 108: mul r2.xzw, r2.zzzz, r4.xxyz
 109: mul r3.xyz, r4.xyzx, r0.wwww
 110: add r0.w, -r2.y, l(1.000000)
 111: mul r1.w, r0.w, r0.w
 112: mul r1.w, r1.w, r1.w
 113: mul r0.w, r0.w, r1.w
 114: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 116: mul r0.xyz, r0.xyzx, r3.xyzx
 117: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 118: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  45: div r4.zw, v7.xxxy, v7.wwww
  46: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  47: add_sat r1.w, r1.w, r5.x
  48: min r3.w, r1.w, r3.w
  49: movc r1.w, r2.w, r3.w, r1.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.w
  52: mul r4.xyz, r1.wwww, cb0[2].xyzx
  53: add r1.w, -cb0[8].w, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  58: dp3 r0.w, r6.xyzx, r6.xyzx
  59: max r0.w, r0.w, l(0.001000)
  60: rsq r0.w, r0.w
  61: mul r6.xyz, r0.wwww, r6.xyzx
  62: dp3 r0.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r1.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r0.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r1.w, r1.w, r1.w
  82: max r1.w, r1.w, l(0.002000)
  83: add r3.x, -r1.w, l(1.000000)
  84: mad r3.y, |r0.w|, r3.x, r1.w
  85: mad r3.x, r2.w, r3.x, r1.w
  86: mul r0.w, |r0.w|, r3.x
  87: mad r0.w, r2.w, r3.y, r0.w
  88: add r0.w, r0.w, l(0.000010)
  89: div r0.w, l(0.500000), r0.w
  90: mul r1.w, r1.w, r1.w
  91: mad r3.x, r2.x, r1.w, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r1.w, r1.w, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r1.w, r1.w, r2.x
  96: mul r0.w, r0.w, r1.w
  97: mul r0.w, r0.w, l(3.141593)
  98: max r0.w, r0.w, l(0.000100)
  99: sqrt r0.w, r0.w
 100: mul r0.w, r2.w, r0.w
 101: dp3 r1.w, r0.xyzx, r0.xyzx
 102: ne r1.w, r1.w, l(0.000000)
 103: and r1.w, r1.w, l(0x3f800000)
 104: mul r0.w, r0.w, r1.w
 105: mul r2.xzw, r2.zzzz, r4.xxyz
 106: mul r3.xyz, r4.xyzx, r0.wwww
 107: add r0.w, -r2.y, l(1.000000)
 108: mul r1.w, r0.w, r0.w
 109: mul r1.w, r1.w, r1.w
 110: mul r0.w, r0.w, r1.w
 111: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 113: mul r0.xyz, r0.xyzx, r3.xyzx
 114: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 116 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  16: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  17: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  18: add r4.xyz, r4.xyzx, cb0[14].xyzx
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  48: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  49: max r3.w, |r5.y|, |r5.x|
  50: max r3.w, |r5.z|, r3.w
  51: add r3.w, r3.w, -cb2[2].z
  52: max r3.w, r3.w, l(0.000010)
  53: mul r3.w, r3.w, cb2[2].w
  54: div r3.w, cb2[2].y, r3.w
  55: add r3.w, r3.w, -cb2[2].x
  56: add r3.w, -r3.w, l(1.000000)
  57: sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
  58: add r4.w, -cb3[24].x, l(1.000000)
  59: mad r3.w, r3.w, r4.w, cb3[24].x
  60: add_sat r0.w, r0.w, r3.w
  61: min r2.w, r0.w, r2.w
  62: movc r0.w, r1.w, r2.w, r0.w
  63: dp3 r1.w, r4.xyzx, r4.xyzx
  64: sample r4.xyzw, r1.wwww, t1.xyzw, s3
  65: mul r0.w, r0.w, r4.x
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r1.w, r4.xyzx, r4.xyzx
  70: rsq r1.w, r1.w
  71: mul r5.xyz, r1.wwww, r4.xyzx
  72: mul r6.xyz, r0.wwww, cb0[2].xyzx
  73: add r0.w, -cb0[8].w, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r0.w, r0.w, r0.w
  99: max r0.w, r0.w, l(0.002000)
 100: add r3.x, -r0.w, l(1.000000)
 101: mad r3.y, |r1.w|, r3.x, r0.w
 102: mad r3.x, r2.w, r3.x, r0.w
 103: mul r1.w, |r1.w|, r3.x
 104: mad r1.w, r2.w, r3.y, r1.w
 105: add r1.w, r1.w, l(0.000010)
 106: div r1.w, l(0.500000), r1.w
 107: mul r0.w, r0.w, r0.w
 108: mad r3.x, r2.x, r0.w, -r2.x
 109: mad r2.x, r3.x, r2.x, l(1.000000)
 110: mul r0.w, r0.w, l(0.318310)
 111: mad r2.x, r2.x, r2.x, l(0.000000)
 112: div r0.w, r0.w, r2.x
 113: mul r0.w, r0.w, r1.w
 114: mul r0.w, r0.w, l(3.141593)
 115: max r0.w, r0.w, l(0.000100)
 116: sqrt r0.w, r0.w
 117: mul r0.w, r2.w, r0.w
 118: dp3 r1.w, r0.xyzx, r0.xyzx
 119: ne r1.w, r1.w, l(0.000000)
 120: and r1.w, r1.w, l(0x3f800000)
 121: mul r0.w, r0.w, r1.w
 122: mul r2.xzw, r2.zzzz, r6.xxyz
 123: mul r3.xyz, r6.xyzx, r0.wwww
 124: add r0.w, -r2.y, l(1.000000)
 125: mul r1.w, r0.w, r0.w
 126: mul r1.w, r1.w, r1.w
 127: mul r0.w, r0.w, r1.w
 128: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 130: mul r0.xyz, r0.xyzx, r3.xyzx
 131: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 132: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 113 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: max r3.w, |r5.y|, |r5.x|
  47: max r3.w, |r5.z|, r3.w
  48: add r3.w, r3.w, -cb2[2].z
  49: max r3.w, r3.w, l(0.000010)
  50: mul r3.w, r3.w, cb2[2].w
  51: div r3.w, cb2[2].y, r3.w
  52: add r3.w, r3.w, -cb2[2].x
  53: add r3.w, -r3.w, l(1.000000)
  54: sample_c_lz r3.w, r5.xyzx, t3.xxxx, s1, r3.w
  55: add r4.w, -cb3[24].x, l(1.000000)
  56: mad r3.w, r3.w, r4.w, cb3[24].x
  57: add_sat r0.w, r0.w, r3.w
  58: min r2.w, r0.w, r2.w
  59: movc r0.w, r1.w, r2.w, r0.w
  60: dp3 r1.w, r4.xyzx, r4.xyzx
  61: sample r4.xyzw, r1.wwww, t1.xyzw, s3
  62: mul r0.w, r0.w, r4.x
  63: mov r4.x, v3.w
  64: mov r4.y, v4.w
  65: mov r4.z, v5.w
  66: dp3 r1.w, r4.xyzx, r4.xyzx
  67: rsq r1.w, r1.w
  68: mul r5.xyz, r1.wwww, r4.xyzx
  69: mul r6.xyz, r0.wwww, cb0[2].xyzx
  70: add r0.w, -cb0[8].w, l(1.000000)
  71: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: max r1.w, r1.w, l(0.001000)
  74: rsq r1.w, r1.w
  75: mul r4.xyz, r1.wwww, r4.xyzx
  76: dp3 r1.w, r2.xyzx, -r3.xyzx
  77: dp3_sat r2.w, r2.xyzx, r5.xyzx
  78: dp3_sat r2.x, r2.xyzx, r4.xyzx
  79: dp3_sat r2.y, r5.xyzx, r4.xyzx
  80: mul r2.z, r2.y, r2.y
  81: dp2 r2.z, r2.zzzz, r0.wwww
  82: add r2.z, r2.z, l(-0.500000)
  83: add r3.x, -r2.w, l(1.000000)
  84: mul r3.y, r3.x, r3.x
  85: mul r3.y, r3.y, r3.y
  86: mul r3.x, r3.x, r3.y
  87: mad r3.x, r2.z, r3.x, l(1.000000)
  88: add r3.y, -|r1.w|, l(1.000000)
  89: mul r3.z, r3.y, r3.y
  90: mul r3.z, r3.z, r3.z
  91: mul r3.y, r3.y, r3.z
  92: mad r2.z, r2.z, r3.y, l(1.000000)
  93: mul r2.z, r2.z, r3.x
  94: mul r2.z, r2.w, r2.z
  95: mul r0.w, r0.w, r0.w
  96: max r0.w, r0.w, l(0.002000)
  97: add r3.x, -r0.w, l(1.000000)
  98: mad r3.y, |r1.w|, r3.x, r0.w
  99: mad r3.x, r2.w, r3.x, r0.w
 100: mul r1.w, |r1.w|, r3.x
 101: mad r1.w, r2.w, r3.y, r1.w
 102: add r1.w, r1.w, l(0.000010)
 103: div r1.w, l(0.500000), r1.w
 104: mul r0.w, r0.w, r0.w
 105: mad r3.x, r2.x, r0.w, -r2.x
 106: mad r2.x, r3.x, r2.x, l(1.000000)
 107: mul r0.w, r0.w, l(0.318310)
 108: mad r2.x, r2.x, r2.x, l(0.000000)
 109: div r0.w, r0.w, r2.x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r0.w, l(3.141593)
 112: max r0.w, r0.w, l(0.000100)
 113: sqrt r0.w, r0.w
 114: mul r0.w, r2.w, r0.w
 115: dp3 r1.w, r0.xyzx, r0.xyzx
 116: ne r1.w, r1.w, l(0.000000)
 117: and r1.w, r1.w, l(0x3f800000)
 118: mul r0.w, r0.w, r1.w
 119: mul r2.xzw, r2.zzzz, r6.xxyz
 120: mul r3.xyz, r6.xyzx, r0.wwww
 121: add r0.w, -r2.y, l(1.000000)
 122: mul r1.w, r0.w, r0.w
 123: mul r1.w, r1.w, r1.w
 124: mul r0.w, r0.w, r1.w
 125: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 127: mul r0.xyz, r0.xyzx, r3.xyzx
 128: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 122 math, 8 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  16: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  17: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  18: add r4.xyz, r4.xyzx, cb0[14].xyzx
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  48: lt r3.w, r0.w, l(0.990000)
  49: if_nz r3.w
  50:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  51:   max r3.w, |r5.y|, |r5.x|
  52:   max r3.w, |r5.z|, r3.w
  53:   add r3.w, r3.w, -cb2[2].z
  54:   max r3.w, r3.w, l(0.000010)
  55:   mul r3.w, r3.w, cb2[2].w
  56:   div r3.w, cb2[2].y, r3.w
  57:   add r3.w, r3.w, -cb2[2].x
  58:   add r3.w, -r3.w, l(1.000000)
  59:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  62:   sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
  63:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
  65:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  66:   sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
  67:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  68:   add r4.w, -cb3[24].x, l(1.000000)
  69:   mad r3.w, r3.w, r4.w, cb3[24].x
  70: else 
  71:   mov r3.w, l(1.000000)
  72: endif 
  73: add_sat r0.w, r0.w, r3.w
  74: min r2.w, r0.w, r2.w
  75: movc r0.w, r1.w, r2.w, r0.w
  76: dp3 r1.w, r4.xyzx, r4.xyzx
  77: sample r4.xyzw, r1.wwww, t1.xyzw, s3
  78: mul r0.w, r0.w, r4.x
  79: mov r4.x, v3.w
  80: mov r4.y, v4.w
  81: mov r4.z, v5.w
  82: dp3 r1.w, r4.xyzx, r4.xyzx
  83: rsq r1.w, r1.w
  84: mul r5.xyz, r1.wwww, r4.xyzx
  85: mul r6.xyz, r0.wwww, cb0[2].xyzx
  86: add r0.w, -cb0[8].w, l(1.000000)
  87: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  88: dp3 r1.w, r4.xyzx, r4.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r4.xyz, r1.wwww, r4.xyzx
  92: dp3 r1.w, r2.xyzx, -r3.xyzx
  93: dp3_sat r2.w, r2.xyzx, r5.xyzx
  94: dp3_sat r2.x, r2.xyzx, r4.xyzx
  95: dp3_sat r2.y, r5.xyzx, r4.xyzx
  96: mul r2.z, r2.y, r2.y
  97: dp2 r2.z, r2.zzzz, r0.wwww
  98: add r2.z, r2.z, l(-0.500000)
  99: add r3.x, -r2.w, l(1.000000)
 100: mul r3.y, r3.x, r3.x
 101: mul r3.y, r3.y, r3.y
 102: mul r3.x, r3.x, r3.y
 103: mad r3.x, r2.z, r3.x, l(1.000000)
 104: add r3.y, -|r1.w|, l(1.000000)
 105: mul r3.z, r3.y, r3.y
 106: mul r3.z, r3.z, r3.z
 107: mul r3.y, r3.y, r3.z
 108: mad r2.z, r2.z, r3.y, l(1.000000)
 109: mul r2.z, r2.z, r3.x
 110: mul r2.z, r2.w, r2.z
 111: mul r0.w, r0.w, r0.w
 112: max r0.w, r0.w, l(0.002000)
 113: add r3.x, -r0.w, l(1.000000)
 114: mad r3.y, |r1.w|, r3.x, r0.w
 115: mad r3.x, r2.w, r3.x, r0.w
 116: mul r1.w, |r1.w|, r3.x
 117: mad r1.w, r2.w, r3.y, r1.w
 118: add r1.w, r1.w, l(0.000010)
 119: div r1.w, l(0.500000), r1.w
 120: mul r0.w, r0.w, r0.w
 121: mad r3.x, r2.x, r0.w, -r2.x
 122: mad r2.x, r3.x, r2.x, l(1.000000)
 123: mul r0.w, r0.w, l(0.318310)
 124: mad r2.x, r2.x, r2.x, l(0.000000)
 125: div r0.w, r0.w, r2.x
 126: mul r0.w, r0.w, r1.w
 127: mul r0.w, r0.w, l(3.141593)
 128: max r0.w, r0.w, l(0.000100)
 129: sqrt r0.w, r0.w
 130: mul r0.w, r2.w, r0.w
 131: dp3 r1.w, r0.xyzx, r0.xyzx
 132: ne r1.w, r1.w, l(0.000000)
 133: and r1.w, r1.w, l(0x3f800000)
 134: mul r0.w, r0.w, r1.w
 135: mul r2.xzw, r2.zzzz, r6.xxyz
 136: mul r3.xyz, r6.xyzx, r0.wwww
 137: add r0.w, -r2.y, l(1.000000)
 138: mul r1.w, r0.w, r0.w
 139: mul r1.w, r1.w, r1.w
 140: mul r0.w, r0.w, r1.w
 141: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 142: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 143: mul r0.xyz, r0.xyzx, r3.xyzx
 144: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 145: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 119 math, 8 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   max r3.w, |r5.y|, |r5.x|
  49:   max r3.w, |r5.z|, r3.w
  50:   add r3.w, r3.w, -cb2[2].z
  51:   max r3.w, r3.w, l(0.000010)
  52:   mul r3.w, r3.w, cb2[2].w
  53:   div r3.w, cb2[2].y, r3.w
  54:   add r3.w, r3.w, -cb2[2].x
  55:   add r3.w, -r3.w, l(1.000000)
  56:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  57:   sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r3.w
  58:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  59:   sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r3.w
  60:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  61:   sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r3.w
  62:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  63:   sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r3.w
  64:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  65:   add r4.w, -cb3[24].x, l(1.000000)
  66:   mad r3.w, r3.w, r4.w, cb3[24].x
  67: else 
  68:   mov r3.w, l(1.000000)
  69: endif 
  70: add_sat r0.w, r0.w, r3.w
  71: min r2.w, r0.w, r2.w
  72: movc r0.w, r1.w, r2.w, r0.w
  73: dp3 r1.w, r4.xyzx, r4.xyzx
  74: sample r4.xyzw, r1.wwww, t1.xyzw, s3
  75: mul r0.w, r0.w, r4.x
  76: mov r4.x, v3.w
  77: mov r4.y, v4.w
  78: mov r4.z, v5.w
  79: dp3 r1.w, r4.xyzx, r4.xyzx
  80: rsq r1.w, r1.w
  81: mul r5.xyz, r1.wwww, r4.xyzx
  82: mul r6.xyz, r0.wwww, cb0[2].xyzx
  83: add r0.w, -cb0[8].w, l(1.000000)
  84: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  85: dp3 r1.w, r4.xyzx, r4.xyzx
  86: max r1.w, r1.w, l(0.001000)
  87: rsq r1.w, r1.w
  88: mul r4.xyz, r1.wwww, r4.xyzx
  89: dp3 r1.w, r2.xyzx, -r3.xyzx
  90: dp3_sat r2.w, r2.xyzx, r5.xyzx
  91: dp3_sat r2.x, r2.xyzx, r4.xyzx
  92: dp3_sat r2.y, r5.xyzx, r4.xyzx
  93: mul r2.z, r2.y, r2.y
  94: dp2 r2.z, r2.zzzz, r0.wwww
  95: add r2.z, r2.z, l(-0.500000)
  96: add r3.x, -r2.w, l(1.000000)
  97: mul r3.y, r3.x, r3.x
  98: mul r3.y, r3.y, r3.y
  99: mul r3.x, r3.x, r3.y
 100: mad r3.x, r2.z, r3.x, l(1.000000)
 101: add r3.y, -|r1.w|, l(1.000000)
 102: mul r3.z, r3.y, r3.y
 103: mul r3.z, r3.z, r3.z
 104: mul r3.y, r3.y, r3.z
 105: mad r2.z, r2.z, r3.y, l(1.000000)
 106: mul r2.z, r2.z, r3.x
 107: mul r2.z, r2.w, r2.z
 108: mul r0.w, r0.w, r0.w
 109: max r0.w, r0.w, l(0.002000)
 110: add r3.x, -r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r3.x, r0.w
 112: mad r3.x, r2.w, r3.x, r0.w
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.w, r3.y, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r0.w, r0.w, r0.w
 118: mad r3.x, r2.x, r0.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r0.w, r0.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r0.w, r0.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: max r0.w, r0.w, l(0.000100)
 126: sqrt r0.w, r0.w
 127: mul r0.w, r2.w, r0.w
 128: dp3 r1.w, r0.xyzx, r0.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.w, r0.w, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.wwww
 134: add r0.w, -r2.y, l(1.000000)
 135: mul r1.w, r0.w, r0.w
 136: mul r1.w, r1.w, r1.w
 137: mul r0.w, r0.w, r1.w
 138: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 140: mul r0.xyz, r0.xyzx, r3.xyzx
 141: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 117 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  16: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  17: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  18: add r4.xyz, r4.xyzx, cb0[14].xyzx
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  48: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  49: max r3.w, |r5.y|, |r5.x|
  50: max r3.w, |r5.z|, r3.w
  51: add r3.w, r3.w, -cb2[2].z
  52: max r3.w, r3.w, l(0.000010)
  53: mul r3.w, r3.w, cb2[2].w
  54: div r3.w, cb2[2].y, r3.w
  55: add r3.w, r3.w, -cb2[2].x
  56: add r3.w, -r3.w, l(1.000000)
  57: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  58: add r4.w, -cb3[24].x, l(1.000000)
  59: mad r3.w, r3.w, r4.w, cb3[24].x
  60: add_sat r0.w, r0.w, r3.w
  61: min r2.w, r0.w, r2.w
  62: movc r0.w, r1.w, r2.w, r0.w
  63: dp3 r1.w, r4.xyzx, r4.xyzx
  64: sample r5.xyzw, r1.wwww, t1.xyzw, s4
  65: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  66: mul r1.w, r4.w, r5.x
  67: mul r0.w, r0.w, r1.w
  68: mov r4.x, v3.w
  69: mov r4.y, v4.w
  70: mov r4.z, v5.w
  71: dp3 r1.w, r4.xyzx, r4.xyzx
  72: rsq r1.w, r1.w
  73: mul r5.xyz, r1.wwww, r4.xyzx
  74: mul r6.xyz, r0.wwww, cb0[2].xyzx
  75: add r0.w, -cb0[8].w, l(1.000000)
  76: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  77: dp3 r1.w, r4.xyzx, r4.xyzx
  78: max r1.w, r1.w, l(0.001000)
  79: rsq r1.w, r1.w
  80: mul r4.xyz, r1.wwww, r4.xyzx
  81: dp3 r1.w, r2.xyzx, -r3.xyzx
  82: dp3_sat r2.w, r2.xyzx, r5.xyzx
  83: dp3_sat r2.x, r2.xyzx, r4.xyzx
  84: dp3_sat r2.y, r5.xyzx, r4.xyzx
  85: mul r2.z, r2.y, r2.y
  86: dp2 r2.z, r2.zzzz, r0.wwww
  87: add r2.z, r2.z, l(-0.500000)
  88: add r3.x, -r2.w, l(1.000000)
  89: mul r3.y, r3.x, r3.x
  90: mul r3.y, r3.y, r3.y
  91: mul r3.x, r3.x, r3.y
  92: mad r3.x, r2.z, r3.x, l(1.000000)
  93: add r3.y, -|r1.w|, l(1.000000)
  94: mul r3.z, r3.y, r3.y
  95: mul r3.z, r3.z, r3.z
  96: mul r3.y, r3.y, r3.z
  97: mad r2.z, r2.z, r3.y, l(1.000000)
  98: mul r2.z, r2.z, r3.x
  99: mul r2.z, r2.w, r2.z
 100: mul r0.w, r0.w, r0.w
 101: max r0.w, r0.w, l(0.002000)
 102: add r3.x, -r0.w, l(1.000000)
 103: mad r3.y, |r1.w|, r3.x, r0.w
 104: mad r3.x, r2.w, r3.x, r0.w
 105: mul r1.w, |r1.w|, r3.x
 106: mad r1.w, r2.w, r3.y, r1.w
 107: add r1.w, r1.w, l(0.000010)
 108: div r1.w, l(0.500000), r1.w
 109: mul r0.w, r0.w, r0.w
 110: mad r3.x, r2.x, r0.w, -r2.x
 111: mad r2.x, r3.x, r2.x, l(1.000000)
 112: mul r0.w, r0.w, l(0.318310)
 113: mad r2.x, r2.x, r2.x, l(0.000000)
 114: div r0.w, r0.w, r2.x
 115: mul r0.w, r0.w, r1.w
 116: mul r0.w, r0.w, l(3.141593)
 117: max r0.w, r0.w, l(0.000100)
 118: sqrt r0.w, r0.w
 119: mul r0.w, r2.w, r0.w
 120: dp3 r1.w, r0.xyzx, r0.xyzx
 121: ne r1.w, r1.w, l(0.000000)
 122: and r1.w, r1.w, l(0x3f800000)
 123: mul r0.w, r0.w, r1.w
 124: mul r2.xzw, r2.zzzz, r6.xxyz
 125: mul r3.xyz, r6.xyzx, r0.wwww
 126: add r0.w, -r2.y, l(1.000000)
 127: mul r1.w, r0.w, r0.w
 128: mul r1.w, r1.w, r1.w
 129: mul r0.w, r0.w, r1.w
 130: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 131: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 132: mul r0.xyz, r0.xyzx, r3.xyzx
 133: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 134: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: max r3.w, |r5.y|, |r5.x|
  47: max r3.w, |r5.z|, r3.w
  48: add r3.w, r3.w, -cb2[2].z
  49: max r3.w, r3.w, l(0.000010)
  50: mul r3.w, r3.w, cb2[2].w
  51: div r3.w, cb2[2].y, r3.w
  52: add r3.w, r3.w, -cb2[2].x
  53: add r3.w, -r3.w, l(1.000000)
  54: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  55: add r4.w, -cb3[24].x, l(1.000000)
  56: mad r3.w, r3.w, r4.w, cb3[24].x
  57: add_sat r0.w, r0.w, r3.w
  58: min r2.w, r0.w, r2.w
  59: movc r0.w, r1.w, r2.w, r0.w
  60: dp3 r1.w, r4.xyzx, r4.xyzx
  61: sample r5.xyzw, r1.wwww, t1.xyzw, s4
  62: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  63: mul r1.w, r4.w, r5.x
  64: mul r0.w, r0.w, r1.w
  65: mov r4.x, v3.w
  66: mov r4.y, v4.w
  67: mov r4.z, v5.w
  68: dp3 r1.w, r4.xyzx, r4.xyzx
  69: rsq r1.w, r1.w
  70: mul r5.xyz, r1.wwww, r4.xyzx
  71: mul r6.xyz, r0.wwww, cb0[2].xyzx
  72: add r0.w, -cb0[8].w, l(1.000000)
  73: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  74: dp3 r1.w, r4.xyzx, r4.xyzx
  75: max r1.w, r1.w, l(0.001000)
  76: rsq r1.w, r1.w
  77: mul r4.xyz, r1.wwww, r4.xyzx
  78: dp3 r1.w, r2.xyzx, -r3.xyzx
  79: dp3_sat r2.w, r2.xyzx, r5.xyzx
  80: dp3_sat r2.x, r2.xyzx, r4.xyzx
  81: dp3_sat r2.y, r5.xyzx, r4.xyzx
  82: mul r2.z, r2.y, r2.y
  83: dp2 r2.z, r2.zzzz, r0.wwww
  84: add r2.z, r2.z, l(-0.500000)
  85: add r3.x, -r2.w, l(1.000000)
  86: mul r3.y, r3.x, r3.x
  87: mul r3.y, r3.y, r3.y
  88: mul r3.x, r3.x, r3.y
  89: mad r3.x, r2.z, r3.x, l(1.000000)
  90: add r3.y, -|r1.w|, l(1.000000)
  91: mul r3.z, r3.y, r3.y
  92: mul r3.z, r3.z, r3.z
  93: mul r3.y, r3.y, r3.z
  94: mad r2.z, r2.z, r3.y, l(1.000000)
  95: mul r2.z, r2.z, r3.x
  96: mul r2.z, r2.w, r2.z
  97: mul r0.w, r0.w, r0.w
  98: max r0.w, r0.w, l(0.002000)
  99: add r3.x, -r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r3.x, r0.w
 101: mad r3.x, r2.w, r3.x, r0.w
 102: mul r1.w, |r1.w|, r3.x
 103: mad r1.w, r2.w, r3.y, r1.w
 104: add r1.w, r1.w, l(0.000010)
 105: div r1.w, l(0.500000), r1.w
 106: mul r0.w, r0.w, r0.w
 107: mad r3.x, r2.x, r0.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r0.w, r0.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r0.w, r0.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: max r0.w, r0.w, l(0.000100)
 115: sqrt r0.w, r0.w
 116: mul r0.w, r2.w, r0.w
 117: dp3 r1.w, r0.xyzx, r0.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.w, r0.w, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.wwww
 123: add r0.w, -r2.y, l(1.000000)
 124: mul r1.w, r0.w, r0.w
 125: mul r1.w, r1.w, r1.w
 126: mul r0.w, r0.w, r1.w
 127: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 129: mul r0.xyz, r0.xyzx, r3.xyzx
 130: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 131: mov o0.w, l(1.000000)
 132: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 123 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  16: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  17: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  18: add r4.xyz, r4.xyzx, cb0[14].xyzx
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  48: lt r3.w, r0.w, l(0.990000)
  49: if_nz r3.w
  50:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  51:   max r3.w, |r5.y|, |r5.x|
  52:   max r3.w, |r5.z|, r3.w
  53:   add r3.w, r3.w, -cb2[2].z
  54:   max r3.w, r3.w, l(0.000010)
  55:   mul r3.w, r3.w, cb2[2].w
  56:   div r3.w, cb2[2].y, r3.w
  57:   add r3.w, r3.w, -cb2[2].x
  58:   add r3.w, -r3.w, l(1.000000)
  59:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  62:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  63:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  65:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  66:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  67:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  68:   add r4.w, -cb3[24].x, l(1.000000)
  69:   mad r3.w, r3.w, r4.w, cb3[24].x
  70: else 
  71:   mov r3.w, l(1.000000)
  72: endif 
  73: add_sat r0.w, r0.w, r3.w
  74: min r2.w, r0.w, r2.w
  75: movc r0.w, r1.w, r2.w, r0.w
  76: dp3 r1.w, r4.xyzx, r4.xyzx
  77: sample r5.xyzw, r1.wwww, t1.xyzw, s4
  78: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  79: mul r1.w, r4.w, r5.x
  80: mul r0.w, r0.w, r1.w
  81: mov r4.x, v3.w
  82: mov r4.y, v4.w
  83: mov r4.z, v5.w
  84: dp3 r1.w, r4.xyzx, r4.xyzx
  85: rsq r1.w, r1.w
  86: mul r5.xyz, r1.wwww, r4.xyzx
  87: mul r6.xyz, r0.wwww, cb0[2].xyzx
  88: add r0.w, -cb0[8].w, l(1.000000)
  89: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  90: dp3 r1.w, r4.xyzx, r4.xyzx
  91: max r1.w, r1.w, l(0.001000)
  92: rsq r1.w, r1.w
  93: mul r4.xyz, r1.wwww, r4.xyzx
  94: dp3 r1.w, r2.xyzx, -r3.xyzx
  95: dp3_sat r2.w, r2.xyzx, r5.xyzx
  96: dp3_sat r2.x, r2.xyzx, r4.xyzx
  97: dp3_sat r2.y, r5.xyzx, r4.xyzx
  98: mul r2.z, r2.y, r2.y
  99: dp2 r2.z, r2.zzzz, r0.wwww
 100: add r2.z, r2.z, l(-0.500000)
 101: add r3.x, -r2.w, l(1.000000)
 102: mul r3.y, r3.x, r3.x
 103: mul r3.y, r3.y, r3.y
 104: mul r3.x, r3.x, r3.y
 105: mad r3.x, r2.z, r3.x, l(1.000000)
 106: add r3.y, -|r1.w|, l(1.000000)
 107: mul r3.z, r3.y, r3.y
 108: mul r3.z, r3.z, r3.z
 109: mul r3.y, r3.y, r3.z
 110: mad r2.z, r2.z, r3.y, l(1.000000)
 111: mul r2.z, r2.z, r3.x
 112: mul r2.z, r2.w, r2.z
 113: mul r0.w, r0.w, r0.w
 114: max r0.w, r0.w, l(0.002000)
 115: add r3.x, -r0.w, l(1.000000)
 116: mad r3.y, |r1.w|, r3.x, r0.w
 117: mad r3.x, r2.w, r3.x, r0.w
 118: mul r1.w, |r1.w|, r3.x
 119: mad r1.w, r2.w, r3.y, r1.w
 120: add r1.w, r1.w, l(0.000010)
 121: div r1.w, l(0.500000), r1.w
 122: mul r0.w, r0.w, r0.w
 123: mad r3.x, r2.x, r0.w, -r2.x
 124: mad r2.x, r3.x, r2.x, l(1.000000)
 125: mul r0.w, r0.w, l(0.318310)
 126: mad r2.x, r2.x, r2.x, l(0.000000)
 127: div r0.w, r0.w, r2.x
 128: mul r0.w, r0.w, r1.w
 129: mul r0.w, r0.w, l(3.141593)
 130: max r0.w, r0.w, l(0.000100)
 131: sqrt r0.w, r0.w
 132: mul r0.w, r2.w, r0.w
 133: dp3 r1.w, r0.xyzx, r0.xyzx
 134: ne r1.w, r1.w, l(0.000000)
 135: and r1.w, r1.w, l(0x3f800000)
 136: mul r0.w, r0.w, r1.w
 137: mul r2.xzw, r2.zzzz, r6.xxyz
 138: mul r3.xyz, r6.xyzx, r0.wwww
 139: add r0.w, -r2.y, l(1.000000)
 140: mul r1.w, r0.w, r0.w
 141: mul r1.w, r1.w, r1.w
 142: mul r0.w, r0.w, r1.w
 143: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 144: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 145: mul r0.xyz, r0.xyzx, r3.xyzx
 146: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 147: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xyz, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 120 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   max r3.w, |r5.y|, |r5.x|
  49:   max r3.w, |r5.z|, r3.w
  50:   add r3.w, r3.w, -cb2[2].z
  51:   max r3.w, r3.w, l(0.000010)
  52:   mul r3.w, r3.w, cb2[2].w
  53:   div r3.w, cb2[2].y, r3.w
  54:   add r3.w, r3.w, -cb2[2].x
  55:   add r3.w, -r3.w, l(1.000000)
  56:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  57:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  58:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  59:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  60:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  61:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  62:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  63:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  64:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  65:   add r4.w, -cb3[24].x, l(1.000000)
  66:   mad r3.w, r3.w, r4.w, cb3[24].x
  67: else 
  68:   mov r3.w, l(1.000000)
  69: endif 
  70: add_sat r0.w, r0.w, r3.w
  71: min r2.w, r0.w, r2.w
  72: movc r0.w, r1.w, r2.w, r0.w
  73: dp3 r1.w, r4.xyzx, r4.xyzx
  74: sample r5.xyzw, r1.wwww, t1.xyzw, s4
  75: sample r4.xyzw, r4.xyzx, t2.xyzw, s3
  76: mul r1.w, r4.w, r5.x
  77: mul r0.w, r0.w, r1.w
  78: mov r4.x, v3.w
  79: mov r4.y, v4.w
  80: mov r4.z, v5.w
  81: dp3 r1.w, r4.xyzx, r4.xyzx
  82: rsq r1.w, r1.w
  83: mul r5.xyz, r1.wwww, r4.xyzx
  84: mul r6.xyz, r0.wwww, cb0[2].xyzx
  85: add r0.w, -cb0[8].w, l(1.000000)
  86: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  87: dp3 r1.w, r4.xyzx, r4.xyzx
  88: max r1.w, r1.w, l(0.001000)
  89: rsq r1.w, r1.w
  90: mul r4.xyz, r1.wwww, r4.xyzx
  91: dp3 r1.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r2.w, r2.xyzx, r5.xyzx
  93: dp3_sat r2.x, r2.xyzx, r4.xyzx
  94: dp3_sat r2.y, r5.xyzx, r4.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r0.wwww
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.x, -r2.w, l(1.000000)
  99: mul r3.y, r3.x, r3.x
 100: mul r3.y, r3.y, r3.y
 101: mul r3.x, r3.x, r3.y
 102: mad r3.x, r2.z, r3.x, l(1.000000)
 103: add r3.y, -|r1.w|, l(1.000000)
 104: mul r3.z, r3.y, r3.y
 105: mul r3.z, r3.z, r3.z
 106: mul r3.y, r3.y, r3.z
 107: mad r2.z, r2.z, r3.y, l(1.000000)
 108: mul r2.z, r2.z, r3.x
 109: mul r2.z, r2.w, r2.z
 110: mul r0.w, r0.w, r0.w
 111: max r0.w, r0.w, l(0.002000)
 112: add r3.x, -r0.w, l(1.000000)
 113: mad r3.y, |r1.w|, r3.x, r0.w
 114: mad r3.x, r2.w, r3.x, r0.w
 115: mul r1.w, |r1.w|, r3.x
 116: mad r1.w, r2.w, r3.y, r1.w
 117: add r1.w, r1.w, l(0.000010)
 118: div r1.w, l(0.500000), r1.w
 119: mul r0.w, r0.w, r0.w
 120: mad r3.x, r2.x, r0.w, -r2.x
 121: mad r2.x, r3.x, r2.x, l(1.000000)
 122: mul r0.w, r0.w, l(0.318310)
 123: mad r2.x, r2.x, r2.x, l(0.000000)
 124: div r0.w, r0.w, r2.x
 125: mul r0.w, r0.w, r1.w
 126: mul r0.w, r0.w, l(3.141593)
 127: max r0.w, r0.w, l(0.000100)
 128: sqrt r0.w, r0.w
 129: mul r0.w, r2.w, r0.w
 130: dp3 r1.w, r0.xyzx, r0.xyzx
 131: ne r1.w, r1.w, l(0.000000)
 132: and r1.w, r1.w, l(0x3f800000)
 133: mul r0.w, r0.w, r1.w
 134: mul r2.xzw, r2.zzzz, r6.xxyz
 135: mul r3.xyz, r6.xyzx, r0.wwww
 136: add r0.w, -r2.y, l(1.000000)
 137: mul r1.w, r0.w, r0.w
 138: mul r1.w, r1.w, r1.w
 139: mul r0.w, r0.w, r1.w
 140: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 141: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 142: mul r0.xyz, r0.xyzx, r3.xyzx
 143: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 144: mov o0.w, l(1.000000)
 145: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 95 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r2.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r2.w
  15: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  16: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  17: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  18: add r4.xyz, r4.xyzx, cb0[14].xyzx
  19: eq r0.w, cb2[0].x, l(1.000000)
  20: if_nz r0.w
  21:   eq r0.w, cb2[0].y, l(1.000000)
  22:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  23:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  24:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  25:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  26:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  27:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  28:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  29:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  30:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  31:   max r5.x, r0.w, r1.w
  32:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  33: else 
  34:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  35: endif 
  36: dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
  37: dp3 r1.w, r4.xyzx, r4.xyzx
  38: sample r4.xyzw, r1.wwww, t1.xyzw, s2
  39: mul r0.w, r0.w, r4.x
  40: mov r4.x, v3.w
  41: mov r4.y, v4.w
  42: mov r4.z, v5.w
  43: dp3 r1.w, r4.xyzx, r4.xyzx
  44: rsq r1.w, r1.w
  45: mul r5.xyz, r1.wwww, r4.xyzx
  46: mul r6.xyz, r0.wwww, cb0[2].xyzx
  47: add r0.w, -cb0[8].w, l(1.000000)
  48: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: max r1.w, r1.w, l(0.001000)
  51: rsq r1.w, r1.w
  52: mul r4.xyz, r1.wwww, r4.xyzx
  53: dp3 r1.w, r2.xyzx, -r3.xyzx
  54: dp3_sat r2.w, r2.xyzx, r5.xyzx
  55: dp3_sat r2.x, r2.xyzx, r4.xyzx
  56: dp3_sat r2.y, r5.xyzx, r4.xyzx
  57: mul r2.z, r2.y, r2.y
  58: dp2 r2.z, r2.zzzz, r0.wwww
  59: add r2.z, r2.z, l(-0.500000)
  60: add r3.x, -r2.w, l(1.000000)
  61: mul r3.y, r3.x, r3.x
  62: mul r3.y, r3.y, r3.y
  63: mul r3.x, r3.x, r3.y
  64: mad r3.x, r2.z, r3.x, l(1.000000)
  65: add r3.y, -|r1.w|, l(1.000000)
  66: mul r3.z, r3.y, r3.y
  67: mul r3.z, r3.z, r3.z
  68: mul r3.y, r3.y, r3.z
  69: mad r2.z, r2.z, r3.y, l(1.000000)
  70: mul r2.z, r2.z, r3.x
  71: mul r2.z, r2.w, r2.z
  72: mul r0.w, r0.w, r0.w
  73: max r0.w, r0.w, l(0.002000)
  74: add r3.x, -r0.w, l(1.000000)
  75: mad r3.y, |r1.w|, r3.x, r0.w
  76: mad r3.x, r2.w, r3.x, r0.w
  77: mul r1.w, |r1.w|, r3.x
  78: mad r1.w, r2.w, r3.y, r1.w
  79: add r1.w, r1.w, l(0.000010)
  80: div r1.w, l(0.500000), r1.w
  81: mul r0.w, r0.w, r0.w
  82: mad r3.x, r2.x, r0.w, -r2.x
  83: mad r2.x, r3.x, r2.x, l(1.000000)
  84: mul r0.w, r0.w, l(0.318310)
  85: mad r2.x, r2.x, r2.x, l(0.000000)
  86: div r0.w, r0.w, r2.x
  87: mul r0.w, r0.w, r1.w
  88: mul r0.w, r0.w, l(3.141593)
  89: max r0.w, r0.w, l(0.000100)
  90: sqrt r0.w, r0.w
  91: mul r0.w, r2.w, r0.w
  92: dp3 r1.w, r0.xyzx, r0.xyzx
  93: ne r1.w, r1.w, l(0.000000)
  94: and r1.w, r1.w, l(0x3f800000)
  95: mul r0.w, r0.w, r1.w
  96: mul r2.xzw, r2.zzzz, r6.xxyz
  97: mul r3.xyz, r6.xyzx, r0.wwww
  98: add r0.w, -r2.y, l(1.000000)
  99: mul r1.w, r0.w, r0.w
 100: mul r1.w, r1.w, r1.w
 101: mul r0.w, r0.w, r1.w
 102: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 103: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 104: mul r0.xyz, r0.xyzx, r3.xyzx
 105: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 106: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (27..32)
 // Stats for Fragment shader:
 //        d3d11: 8 math, 2 texture
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH 
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_CUBE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb2[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 8 math, 1 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 3D Texture "_DitherMaskLOD" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Metallic at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.x, r0.w, cb0[2].w
   2: mad r0.y, -cb0[6].x, l(0.779084), l(0.779084)
   3: add r0.z, -r0.y, l(1.000000)
   4: mad r0.x, r0.x, r0.y, r0.z
   5: mul r0.z, r0.x, l(0.937500)
   6: mul r0.xy, v0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
   7: sample r0.xyzw, r0.xyzx, t1.xyzw, s1
   8: add r0.x, r0.w, l(-0.010000)
   9: lt r0.x, r0.x, l(0.000000)
  10: discard_nz r0.x
  11: mov o0.xyzw, l(0,0,0,0)
  12: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb2[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb2[5].y, r0.x, r0.z
  33: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 8 math, 1 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 3D Texture "_DitherMaskLOD" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Metallic at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.x, r0.w, cb0[2].w
   2: mad r0.y, -cb0[6].x, l(0.779084), l(0.779084)
   3: add r0.z, -r0.y, l(1.000000)
   4: mad r0.x, r0.x, r0.y, r0.z
   5: mul r0.z, r0.x, l(0.937500)
   6: mul r0.xy, v0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
   7: sample r0.xyzw, r0.xyzx, t1.xyzw, s1
   8: add r0.x, r0.w, l(-0.010000)
   9: lt r0.x, r0.x, l(0.000000)
  10: discard_nz r0.x
  11: mov o0.xyzw, l(0,0,0,0)
  12: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (22..33)
 // Stats for Fragment shader:
 //        d3d11: 29 avg math (11..43), 4 avg texture (2..5), 0 avg branch (0..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   6: mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul o0.xyz, r0.xxxx, r0.yzwy
   9: mov o1.w, cb0[8].w
  10: dp3 r0.x, v5.xyzx, v5.xyzx
  11: rsq r0.x, r0.x
  12: mul r0.xyz, r0.xxxx, v5.xyzx
  13: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: LIGHTPROBE_SH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 43 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.yzwy
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: mul r0.xyz, r1.xxxx, r0.xyzx
  10: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r1.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r1.y, cb0[9].y, r1.x
  13: eq r1.x, cb2[0].x, l(1.000000)
  14: if_nz r1.x
  15:   eq r1.x, cb2[0].y, l(1.000000)
  16:   mul r1.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
  18:   mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
  19:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r1.xyz, r1.xxxx, r1.yzwy, r3.yzwy
  24:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  25:   mul r1.yzw, r1.xxyz, cb2[5].xxyz
  26:   mul r1.y, r1.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r1.y, r1.y, r3.x
  30:   min r1.x, r3.y, r1.y
  31:   sample r3.xyzw, r1.xzwx, t2.xyzw, s0
  32:   add r4.xyz, r1.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  34:   add r1.xyz, r1.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r1.xyzw, r1.xyzx, t2.xyzw, s0
  36:   mov r2.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r2.xyzw
  38:   dp4 r3.y, r4.xyzw, r2.xyzw
  39:   dp4 r3.z, r1.xyzw, r2.xyzw
  40: else 
  41:   mov r2.w, l(1.000000)
  42:   dp4 r3.x, cb1[39].xyzw, r2.xyzw
  43:   dp4 r3.y, cb1[40].xyzw, r2.xyzw
  44:   dp4 r3.z, cb1[41].xyzw, r2.xyzw
  45: endif 
  46: add r1.xyz, r3.xyzx, v6.xyzx
  47: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r1.xyz, r1.xyzx
  49: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r1.xyz, r1.xyzx
  51: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r1.xyz, r0.wwww, r1.xyzx
  54: mul r1.xyz, r0.xyzx, r1.xyzx
  55: exp o3.xyz, -r1.xyzx
  56: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  57: mov o0.xyzw, r0.xyzw
  58: mov o1.w, cb0[8].w
  59: mov o2.w, l(1.000000)
  60: mov o3.w, l(1.000000)
  61: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r2.xyz, r0.wwww, r2.xyzx
  53: mul r2.xyz, r0.xyzx, r2.xyzx
  54: exp o3.xyz, -r2.xyzx
  55: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  56: mov o0.xyzw, r0.xyzw
  57: mov o1.w, cb0[8].w
  58: mov o2.w, l(1.000000)
  59: mov o3.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 26 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_DynamicLightmap" to slot 2 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 3 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.zw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r2.xyzw, r1.wxyz, cb0[4].wxyz
   3: mad r0.yzw, r1.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
   4: mad o1.xyz, cb0[8].zzzz, r0.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mul r0.xyz, r0.xxxx, r2.yzwy
   6: mul r0.xyz, r2.xxxx, r0.xyzx
   7: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   8: add r1.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r1.y, cb0[9].y, r1.x
  10: mov o0.xyzw, r0.xyzw
  11: mov o1.w, cb0[8].w
  12: dp3 r1.x, v5.xyzx, v5.xyzx
  13: rsq r1.x, r1.x
  14: mul r1.xyz, r1.xxxx, v5.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: sample r2.xyzw, v6.zwzz, t3.xyzw, s0
  18: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  19: max r1.w, r2.w, l(0.000100)
  20: dp3 r1.x, r1.xyzx, r2.xyzx
  21: add r1.x, r1.x, l(0.500000)
  22: sample r2.xyzw, v6.zwzz, t2.xyzw, s0
  23: mul r1.y, r2.w, cb0[1].x
  24: mul r2.xyz, r2.xyzx, r1.yyyy
  25: log r2.xyz, r2.xyzx
  26: mul r2.xyz, r2.xyzx, cb0[1].yyyy
  27: exp r2.xyz, r2.xyzx
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: div r1.xyz, r1.xyzx, r1.wwww
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mul r0.xyz, r0.xyzx, r1.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 25 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_DynamicLightmap" to slot 2 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 3 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.zw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad r0.w, r0.y, cb0[9].y, r0.x
   3: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s1
   5: mul r1.yzw, r2.xxyz, cb0[4].xxyz
   6: mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[8].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: sample r2.xyzw, v6.zwzz, t3.xyzw, s0
  17: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  18: max r1.w, r2.w, l(0.000100)
  19: dp3 r1.x, r1.xyzx, r2.xyzx
  20: add r1.x, r1.x, l(0.500000)
  21: sample r2.xyzw, v6.zwzz, t2.xyzw, s0
  22: mul r1.y, r2.w, cb0[1].x
  23: mul r2.xyz, r2.xyzx, r1.yyyy
  24: log r2.xyz, r2.xyzx
  25: mul r2.xyz, r2.xyzx, cb0[1].yyyy
  26: exp r2.xyz, r2.xyzx
  27: mul r1.xyz, r1.xxxx, r2.xyzx
  28: div r1.xyz, r1.xyzx, r1.wwww
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: mul r0.xyz, r0.xyzx, r1.xyzx
  31: exp o3.xyz, -r0.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: LIGHTPROBE_SH UNITY_HDR_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.yzwy
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: mul r0.xyz, r1.xxxx, r0.xyzx
  10: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r1.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r1.y, cb0[9].y, r1.x
  13: eq r1.x, cb2[0].x, l(1.000000)
  14: if_nz r1.x
  15:   eq r1.x, cb2[0].y, l(1.000000)
  16:   mul r1.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
  18:   mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
  19:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r1.xyz, r1.xxxx, r1.yzwy, r3.yzwy
  24:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  25:   mul r1.yzw, r1.xxyz, cb2[5].xxyz
  26:   mul r1.y, r1.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r1.y, r1.y, r3.x
  30:   min r1.x, r3.y, r1.y
  31:   sample r3.xyzw, r1.xzwx, t2.xyzw, s0
  32:   add r4.xyz, r1.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  34:   add r1.xyz, r1.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r1.xyzw, r1.xyzx, t2.xyzw, s0
  36:   mov r2.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r2.xyzw
  38:   dp4 r3.y, r4.xyzw, r2.xyzw
  39:   dp4 r3.z, r1.xyzw, r2.xyzw
  40: else 
  41:   mov r2.w, l(1.000000)
  42:   dp4 r3.x, cb1[39].xyzw, r2.xyzw
  43:   dp4 r3.y, cb1[40].xyzw, r2.xyzw
  44:   dp4 r3.z, cb1[41].xyzw, r2.xyzw
  45: endif 
  46: add r1.xyz, r3.xyzx, v6.xyzx
  47: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r1.xyz, r1.xyzx
  49: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r1.xyz, r1.xyzx
  51: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r1.xyz, r0.wwww, r1.xyzx
  54: mul o3.xyz, r0.xyzx, r1.xyzx
  55: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  56: mov o0.xyzw, r0.xyzw
  57: mov o1.w, cb0[8].w
  58: mov o2.w, l(1.000000)
  59: mov o3.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r2.xyz, r0.wwww, r2.xyzx
  53: mul o3.xyz, r0.xyzx, r2.xyzx
  54: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  55: mov o0.xyzw, r0.xyzw
  56: mov o1.w, cb0[8].w
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_ON UNITY_HDR_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 25 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_DynamicLightmap" to slot 2 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 3 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.zw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r2.xyzw, r1.wxyz, cb0[4].wxyz
   3: mad r0.yzw, r1.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
   4: mad o1.xyz, cb0[8].zzzz, r0.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mul r0.xyz, r0.xxxx, r2.yzwy
   6: mul r0.xyz, r2.xxxx, r0.xyzx
   7: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   8: add r1.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r1.y, cb0[9].y, r1.x
  10: mov o0.xyzw, r0.xyzw
  11: mov o1.w, cb0[8].w
  12: dp3 r1.x, v5.xyzx, v5.xyzx
  13: rsq r1.x, r1.x
  14: mul r1.xyz, r1.xxxx, v5.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: sample r2.xyzw, v6.zwzz, t3.xyzw, s0
  18: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  19: max r1.w, r2.w, l(0.000100)
  20: dp3 r1.x, r1.xyzx, r2.xyzx
  21: add r1.x, r1.x, l(0.500000)
  22: sample r2.xyzw, v6.zwzz, t2.xyzw, s0
  23: mul r1.y, r2.w, cb0[1].x
  24: mul r2.xyz, r2.xyzx, r1.yyyy
  25: log r2.xyz, r2.xyzx
  26: mul r2.xyz, r2.xyzx, cb0[1].yyyy
  27: exp r2.xyz, r2.xyzx
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: div r1.xyz, r1.xyzx, r1.wwww
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mul o3.xyz, r0.xyzx, r1.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_DynamicLightmapST at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
// TANGENT                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_input v5.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v5.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v5.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v5.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v5.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.zw, v4.xxxy, cb4[1].xxxy, cb4[1].zzzw
  39: mov o6.xy, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_DynamicLightmap" to slot 2 sampler slot 0
Set 2D Texture "unity_DynamicDirectionality" to slot 3 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 unity_DynamicLightmap_HDR at 16
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.zw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad r0.w, r0.y, cb0[9].y, r0.x
   3: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s1
   5: mul r1.yzw, r2.xxyz, cb0[4].xxyz
   6: mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   7: mad o1.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[8].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: sample r2.xyzw, v6.zwzz, t3.xyzw, s0
  17: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  18: max r1.w, r2.w, l(0.000100)
  19: dp3 r1.x, r1.xyzx, r2.xyzx
  20: add r1.x, r1.x, l(0.500000)
  21: sample r2.xyzw, v6.zwzz, t2.xyzw, s0
  22: mul r1.y, r2.w, cb0[1].x
  23: mul r2.xyz, r2.xyzx, r1.yyyy
  24: log r2.xyz, r2.xyzx
  25: mul r2.xyz, r2.xyzx, cb0[1].yyyy
  26: exp r2.xyz, r2.xyzx
  27: mul r1.xyz, r1.xxxx, r2.xyzx
  28: div r1.xyz, r1.xyzx, r1.wwww
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: mul o3.xyz, r0.xyzx, r1.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 12 math, 3 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r2.xyzw, r1.wxyz, cb0[4].wxyz
   6: mad r0.yzw, r1.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
   7: mad o1.xyz, cb0[8].zzzz, r0.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
   8: mul r0.xyz, r0.xxxx, r2.yzwy
   9: mul o0.xyz, r2.xxxx, r0.xyzx
  10: mov o1.w, cb0[8].w
  11: dp3 r0.x, v5.xyzx, v5.xyzx
  12: rsq r0.x, r0.x
  13: mul r0.xyz, r0.xxxx, v5.xyzx
  14: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  17: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 17 math
 // Stats for Fragment shader:
 //        d3d11: 13 math, 1 texture
 Pass {
  Name "META"
  Tags { "LIGHTMODE"="META" "RenderType"="Opaque" "PerformanceChecks"="False" }
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d11":
// Stats: 17 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 3 {
  Vector4 unity_LightmapST at 0
  Vector4 unity_DynamicLightmapST at 16
}
Constant Buffer "UnityMetaPass" (48 bytes) on slot 4 {
  VectorBool4 unity_MetaVertexControl at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_output o0.xyzw
      dcl_output_siv o1.xyzw, position
      dcl_temps 2
   0: eq r0.x, cb0[9].w, l(0.000000)
   1: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   2: mad o0.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   3: mad o0.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: lt r0.x, l(0.000000), v0.z
   5: and r0.z, r0.x, l(0x38d1b717)
   6: mad r0.xy, v3.xyxx, cb3[0].xyxx, cb3[0].zwzz
   7: movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
   8: lt r0.w, l(0.000000), r0.z
   9: and r1.z, r0.w, l(0x38d1b717)
  10: mad r1.xy, v4.xyxx, cb3[1].xyxx, cb3[1].zwzz
  11: movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
  12: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 13 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float unity_OneOverOutputBoost at 176
  Float unity_MaxOutputValue at 180
}
Constant Buffer "UnityMetaPass" (48 bytes) on slot 1 {
  VectorBool4 unity_MetaFragmentControl at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v0.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: mul r0.x, r0.x, r0.x
   2: sample r1.xyzw, v0.xyxx, t0.xyzw, s0
   3: mad r0.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
   4: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   5: mad r0.yzw, cb0[8].zzzz, r0.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
   6: mul r0.xyz, r0.xxxx, r0.yzwy
   7: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  10: log r0.xyz, r0.xyzx
  11: mov_sat r0.w, cb0[11].x
  12: mul r0.xyz, r0.xyzx, r0.wwww
  13: exp r0.xyz, r0.xyzx
  14: min r0.xyz, r0.xyzx, cb0[11].yyyy
  15: mov r0.w, l(1.000000)
  16: movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
  17: movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
  18: ret 
// Approximately 0 instruction slots used


 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //        d3d11: 36 avg math (25..63)
 // Stats for Fragment shader:
 //        d3d11: 107 avg math (51..178), 4 avg texture (4..7), 4 avg branch (2..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 51 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: eq r1.w, cb3[0].x, l(1.000000)
   9: if_nz r1.w
  10:   eq r1.w, cb3[0].y, l(1.000000)
  11:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  12:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  13:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  15:   mov r4.y, v3.w
  16:   mov r4.z, v4.w
  17:   mov r4.w, v5.w
  18:   movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
  19:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  20:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  21:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  22:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  23:   max r3.x, r1.w, r2.w
  24:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  25: else 
  26:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  29: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  30: add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  31: dp3 r2.w, v2.xyzx, r2.xyzx
  32: add r2.w, r2.w, r2.w
  33: mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
  34: mul r5.xyz, r1.wwww, cb0[2].xyzx
  35: mad r1.w, -r4.x, l(0.700000), l(1.700000)
  36: mul r1.w, r1.w, r4.x
  37: mul r1.w, r1.w, l(6.000000)
  38: sample_l r6.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
  39: add r1.w, r6.w, l(-1.000000)
  40: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  41: mul r1.w, r1.w, cb2[3].x
  42: mul r3.xzw, r6.xxyz, r1.wwww
  43: mul r3.xyz, r3.yyyy, r3.xzwx
  44: dp3 r1.w, -v2.xyzx, r2.xyzx
  45: add r2.w, r1.w, r1.w
  46: mad r6.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  47: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  48: mov_sat r1.w, r1.w
  49: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  50: add r6.y, -r1.w, l(1.000000)
  51: mul r6.zw, r6.xxxy, r6.xxxy
  52: mul r2.yz, r6.xxyx, r6.xxwx
  53: mul r4.yz, r6.zzyz, r2.yyzy
  54: add r1.w, -r0.w, l(1.000000)
  55: add_sat r1.w, r1.w, cb0[8].w
  56: sample r6.xyzw, r4.ywyy, t2.xyzw, s2
  57: mul r2.y, r6.x, l(16.000000)
  58: mul r2.yzw, r0.xxyz, r2.yyyy
  59: mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
  60: mul r2.xyz, r2.xxxx, r5.xyzx
  61: add r4.xyw, -r0.xyxz, r1.wwww
  62: mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
  63: mul r0.xyz, r0.xyzx, r3.xyzx
  64: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  65: mov o0.w, l(1.000000)
  66: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTPROBE_SH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mul r1.x, r0.y, r0.y
  32: mad r1.x, r0.x, r0.x, -r1.x
  33: mul r2.xyzw, r0.yzzx, r0.xyzz
  34: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  37: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  38: mov r0.w, l(1.000000)
  39: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  40: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  41: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  42: add r0.xyz, r1.xyzx, r2.xyzx
  43: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r0.xyz, r0.xyzx
  45: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r0.xyz, r0.xyzx
  47: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mov o6.w, l(0)
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 54 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: mul r1.yzw, r1.xxxx, r1.yyzw
  10: eq r2.w, cb3[0].x, l(1.000000)
  11: if_nz r2.w
  12:   eq r2.w, cb3[0].y, l(1.000000)
  13:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  14:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  15:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  17:   mov r4.y, v3.w
  18:   mov r4.z, v4.w
  19:   mov r4.w, v5.w
  20:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  21:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  22:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  23:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  24:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  25:   max r3.x, r2.w, r3.y
  26:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  27: else 
  28:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  31: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  32: add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  33: dp3 r3.x, v2.xyzx, r2.xyzx
  34: add r3.x, r3.x, r3.x
  35: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  36: mul r5.xyz, r2.wwww, cb0[2].xyzx
  37: mul r6.xyz, r3.yyyy, v6.xyzx
  38: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  39: mul r2.w, r2.w, r4.x
  40: mul r2.w, r2.w, l(6.000000)
  41: sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r2.w
  42: add r2.w, r7.w, l(-1.000000)
  43: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  44: mul r2.w, r2.w, cb2[3].x
  45: mul r3.xzw, r7.xxyz, r2.wwww
  46: mul r3.xyz, r3.yyyy, r3.xzwx
  47: dp3 r2.w, -v2.xyzx, r2.xyzx
  48: add r3.w, r2.w, r2.w
  49: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  50: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  51: mov_sat r2.w, r2.w
  52: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  53: add r7.y, -r2.w, l(1.000000)
  54: mul r7.zw, r7.xxxy, r7.xxxy
  55: mul r2.yz, r7.xxyx, r7.xxwx
  56: mul r4.yz, r7.zzyz, r2.yyzy
  57: add r0.w, -r0.w, l(1.000000)
  58: add_sat r0.w, r0.w, cb0[8].w
  59: sample r7.xyzw, r4.ywyy, t2.xyzw, s2
  60: mul r2.y, r7.x, l(16.000000)
  61: mad r2.yzw, r2.yyyy, r0.xxyz, r1.yyzw
  62: mul r4.xyw, r2.xxxx, r5.xyxz
  63: add r5.xyz, -r0.xyzx, r0.wwww
  64: mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
  65: mul r0.xyz, r0.xyzx, r3.xyzx
  66: mad r0.xyz, r6.xyzx, r1.yzwy, r0.xyzx
  67: mad o0.xyz, r2.yzwy, r4.xywx, r0.xyzx
  68: mov o0.w, r1.x
  69: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mul r1.x, r0.y, r0.y
  32: mad r1.x, r0.x, r0.x, -r1.x
  33: mul r2.xyzw, r0.yzzx, r0.xyzz
  34: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  37: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  38: mov r0.w, l(1.000000)
  39: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  40: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  41: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  42: add r0.xyz, r1.xyzx, r2.xyzx
  43: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r0.xyz, r0.xyzx
  45: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r0.xyz, r0.xyzx
  47: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mov o6.w, l(0)
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 53 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: eq r1.w, cb3[0].x, l(1.000000)
  10: if_nz r1.w
  11:   eq r1.w, cb3[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  13:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  22:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r1.w, r2.w
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  32: dp3 r2.w, v2.xyzx, r2.xyzx
  33: add r2.w, r2.w, r2.w
  34: mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
  35: mul r5.xyz, r1.wwww, cb0[2].xyzx
  36: mul r6.xyz, r3.yyyy, v6.xyzx
  37: mad r1.w, -r4.x, l(0.700000), l(1.700000)
  38: mul r1.w, r1.w, r4.x
  39: mul r1.w, r1.w, l(6.000000)
  40: sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
  41: add r1.w, r7.w, l(-1.000000)
  42: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  43: mul r1.w, r1.w, cb2[3].x
  44: mul r3.xzw, r7.xxyz, r1.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r1.w, -v2.xyzx, r2.xyzx
  47: add r2.w, r1.w, r1.w
  48: mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r1.w, r1.w
  51: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  52: add r7.y, -r1.w, l(1.000000)
  53: mul r7.zw, r7.xxxy, r7.xxxy
  54: mul r2.yz, r7.xxyx, r7.xxwx
  55: mul r4.yz, r7.zzyz, r2.yyzy
  56: add r0.w, -r0.w, l(1.000000)
  57: add_sat r0.w, r0.w, cb0[8].w
  58: sample r7.xyzw, r4.ywyy, t2.xyzw, s2
  59: mul r1.w, r7.x, l(16.000000)
  60: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  61: mul r4.xyw, r2.xxxx, r5.xyxz
  62: add r5.xyz, -r0.xyzx, r0.wwww
  63: mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
  64: mul r0.xyz, r0.xyzx, r3.xyzx
  65: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  66: mad o0.xyz, r2.yzwy, r4.xywx, r0.xyzx
  67: mov o0.w, l(1.000000)
  68: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 150 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: mov r4.x, v3.w
  16: mov r4.y, v4.w
  17: mov r4.z, v5.w
  18: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  19: mov r6.x, cb4[9].z
  20: mov r6.y, cb4[10].z
  21: mov r6.z, cb4[11].z
  22: dp3 r0.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  24: dp3 r1.w, r5.xyzx, r5.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb3[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  29: eq r1.w, cb6[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r4.w, cb6[0].y, l(1.000000)
  32:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  34:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  35:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  36:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  37:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  38:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  39:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  40:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r5.x, r4.w, r5.y
  42:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  43: else 
  44:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  47: div r5.xy, v7.xyxx, v7.wwww
  48: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  49: add_sat r0.w, r0.w, r5.x
  50: min r4.w, r0.w, r4.w
  51: movc r0.w, r1.w, r4.w, r0.w
  52: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r1.w, -cb0[9].y, l(1.000000)
  54: mad r1.w, r5.y, cb0[9].y, r1.w
  55: add r4.w, -cb0[8].w, l(1.000000)
  56: dp3 r5.x, r3.xyzx, r2.xyzx
  57: add r5.x, r5.x, r5.x
  58: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
  59: mul r6.xyz, r0.wwww, cb0[2].xyzx
  60: lt r0.w, l(0.000000), cb5[2].w
  61: if_nz r0.w
  62:   dp3 r0.w, r5.xyzx, r5.xyzx
  63:   rsq r0.w, r0.w
  64:   mul r7.xyz, r0.wwww, r5.xyzx
  65:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  66:   div r8.xyz, r8.xyzx, r7.xyzx
  67:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  68:   div r9.xyz, r9.xyzx, r7.xyzx
  69:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  70:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  71:   min r0.w, r8.y, r8.x
  72:   min r0.w, r8.z, r0.w
  73:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  74:   mad r7.xyz, r7.xyzx, r0.wwww, r8.xyzx
  75: else 
  76:   mov r7.xyz, r5.xyzx
  77: endif 
  78: mad r0.w, -r4.w, l(0.700000), l(1.700000)
  79: mul r0.w, r0.w, r4.w
  80: mul r0.w, r0.w, l(6.000000)
  81: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r0.w
  82: add r5.w, r7.w, l(-1.000000)
  83: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  84: mul r5.w, r5.w, cb5[3].x
  85: mul r8.xyz, r7.xyzx, r5.wwww
  86: lt r6.w, cb5[1].w, l(0.999990)
  87: if_nz r6.w
  88:   lt r6.w, l(0.000000), cb5[6].w
  89:   if_nz r6.w
  90:     dp3 r6.w, r5.xyzx, r5.xyzx
  91:     rsq r6.w, r6.w
  92:     mul r9.xyz, r5.xyzx, r6.wwww
  93:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  94:     div r10.xyz, r10.xyzx, r9.xyzx
  95:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:     min r6.w, r10.y, r10.x
 100:     min r6.w, r10.z, r6.w
 101:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 102:     mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
 103:   endif 
 104:   sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r0.w
 105:   add r0.w, r9.w, l(-1.000000)
 106:   mad r0.w, cb5[7].w, r0.w, l(1.000000)
 107:   mul r0.w, r0.w, cb5[7].x
 108:   mul r4.xyz, r9.xyzx, r0.wwww
 109:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
 110:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 111: endif 
 112: mul r4.xyz, r1.wwww, r8.xyzx
 113: mad r5.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 114: dp3 r0.w, r5.xyzx, r5.xyzx
 115: max r0.w, r0.w, l(0.001000)
 116: rsq r0.w, r0.w
 117: mul r5.xyz, r0.wwww, r5.xyzx
 118: dp3 r0.w, r2.xyzx, -r3.xyzx
 119: dp3_sat r1.w, r2.xyzx, cb2[0].xyzx
 120: dp3_sat r2.x, r2.xyzx, r5.xyzx
 121: dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
 122: mul r2.z, r2.y, r2.y
 123: dp2 r2.z, r2.zzzz, r4.wwww
 124: add r2.z, r2.z, l(-0.500000)
 125: add r2.w, -r1.w, l(1.000000)
 126: mul r3.x, r2.w, r2.w
 127: mul r3.x, r3.x, r3.x
 128: mul r2.w, r2.w, r3.x
 129: mad r2.w, r2.z, r2.w, l(1.000000)
 130: add r3.x, -|r0.w|, l(1.000000)
 131: mul r3.y, r3.x, r3.x
 132: mul r3.y, r3.y, r3.y
 133: mul r3.x, r3.x, r3.y
 134: mad r2.z, r2.z, r3.x, l(1.000000)
 135: mul r2.z, r2.z, r2.w
 136: mul r2.z, r1.w, r2.z
 137: mul r2.w, r4.w, r4.w
 138: max r2.w, r2.w, l(0.002000)
 139: add r3.y, -r2.w, l(1.000000)
 140: mad r3.z, |r0.w|, r3.y, r2.w
 141: mad r3.y, r1.w, r3.y, r2.w
 142: mul r0.w, |r0.w|, r3.y
 143: mad r0.w, r1.w, r3.z, r0.w
 144: add r0.w, r0.w, l(0.000010)
 145: div r0.w, l(0.500000), r0.w
 146: mul r3.y, r2.w, r2.w
 147: mad r3.z, r2.x, r3.y, -r2.x
 148: mad r2.x, r3.z, r2.x, l(1.000000)
 149: mul r3.y, r3.y, l(0.318310)
 150: mad r2.x, r2.x, r2.x, l(0.000000)
 151: div r2.x, r3.y, r2.x
 152: mul r0.w, r0.w, r2.x
 153: mul r0.w, r0.w, l(3.141593)
 154: max r0.w, r0.w, l(0.000100)
 155: sqrt r0.w, r0.w
 156: mul r0.w, r1.w, r0.w
 157: mul r1.w, r2.w, l(0.280000)
 158: mad r1.w, -r1.w, r4.w, l(1.000000)
 159: dp3 r2.x, r0.xyzx, r0.xyzx
 160: ne r2.x, r2.x, l(0.000000)
 161: and r2.x, r2.x, l(0x3f800000)
 162: mul r0.w, r0.w, r2.x
 163: add_sat r2.x, r3.w, cb0[8].w
 164: mul r3.yzw, r2.zzzz, r6.xxyz
 165: mul r5.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r2.y, r0.w, r0.w
 168: mul r2.y, r2.y, r2.y
 169: mul r0.w, r0.w, r2.y
 170: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 171: mad r2.yzw, r2.yyzw, r0.wwww, r0.xxyz
 172: mul r2.yzw, r2.yyzw, r5.xxyz
 173: mad r1.xyz, r1.xyzx, r3.yzwy, r2.yzwy
 174: mul r2.yzw, r4.xxyz, r1.wwww
 175: add r3.yzw, -r0.xxyz, r2.xxxx
 176: mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 177: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 178: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 148 math, 13 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r2.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r3.w, r5.xyzx, r5.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb3[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  26: eq r3.w, cb6[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r4.w, cb6[0].y, l(1.000000)
  29:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  31:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  32:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  33:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  37:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r4.w, r5.y
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  44: div r5.xy, v7.xyxx, v7.wwww
  45: sample r5.xyzw, r5.xyxx, t1.xyzw, s4
  46: add_sat r2.w, r2.w, r5.x
  47: min r4.w, r2.w, r4.w
  48: movc r2.w, r3.w, r4.w, r2.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r3.w, -cb0[9].y, l(1.000000)
  51: mad r3.w, r5.y, cb0[9].y, r3.w
  52: add r4.w, -cb0[8].w, l(1.000000)
  53: dp3 r5.x, r3.xyzx, r2.xyzx
  54: add r5.x, r5.x, r5.x
  55: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
  56: mul r6.xyz, r2.wwww, cb0[2].xyzx
  57: lt r2.w, l(0.000000), cb5[2].w
  58: if_nz r2.w
  59:   dp3 r2.w, r5.xyzx, r5.xyzx
  60:   rsq r2.w, r2.w
  61:   mul r7.xyz, r2.wwww, r5.xyzx
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r2.w, r8.y, r8.x
  69:   min r2.w, r8.z, r2.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.xyzx
  74: endif 
  75: mad r2.w, -r4.w, l(0.700000), l(1.700000)
  76: mul r2.w, r2.w, r4.w
  77: mul r2.w, r2.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
  79: add r5.w, r7.w, l(-1.000000)
  80: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  81: mul r5.w, r5.w, cb5[3].x
  82: mul r8.xyz, r7.xyzx, r5.wwww
  83: lt r6.w, cb5[1].w, l(0.999990)
  84: if_nz r6.w
  85:   lt r6.w, l(0.000000), cb5[6].w
  86:   if_nz r6.w
  87:     dp3 r6.w, r5.xyzx, r5.xyzx
  88:     rsq r6.w, r6.w
  89:     mul r9.xyz, r5.xyzx, r6.wwww
  90:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  91:     div r10.xyz, r10.xyzx, r9.xyzx
  92:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  93:     div r11.xyz, r11.xyzx, r9.xyzx
  94:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  95:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  96:     min r6.w, r10.y, r10.x
  97:     min r6.w, r10.z, r6.w
  98:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
  99:     mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
 100:   endif 
 101:   sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 102:   add r2.w, r9.w, l(-1.000000)
 103:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 104:   mul r2.w, r2.w, cb5[7].x
 105:   mul r4.xyz, r9.xyzx, r2.wwww
 106:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
 107:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 108: endif 
 109: mul r4.xyz, r3.wwww, r8.xyzx
 110: mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 111: dp3 r1.w, r5.xyzx, r5.xyzx
 112: max r1.w, r1.w, l(0.001000)
 113: rsq r1.w, r1.w
 114: mul r5.xyz, r1.wwww, r5.xyzx
 115: dp3 r1.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r5.xyzx
 118: dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r4.wwww
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.x, -r2.w, l(1.000000)
 123: mul r3.y, r3.x, r3.x
 124: mul r3.y, r3.y, r3.y
 125: mul r3.x, r3.x, r3.y
 126: mad r3.x, r2.z, r3.x, l(1.000000)
 127: add r3.y, -|r1.w|, l(1.000000)
 128: mul r3.z, r3.y, r3.y
 129: mul r3.z, r3.z, r3.z
 130: mul r3.y, r3.y, r3.z
 131: mad r2.z, r2.z, r3.y, l(1.000000)
 132: mul r2.z, r2.z, r3.x
 133: mul r2.z, r2.w, r2.z
 134: mul r3.x, r4.w, r4.w
 135: max r3.x, r3.x, l(0.002000)
 136: add r3.z, -r3.x, l(1.000000)
 137: mad r3.w, |r1.w|, r3.z, r3.x
 138: mad r3.z, r2.w, r3.z, r3.x
 139: mul r1.w, |r1.w|, r3.z
 140: mad r1.w, r2.w, r3.w, r1.w
 141: add r1.w, r1.w, l(0.000010)
 142: div r1.w, l(0.500000), r1.w
 143: mul r3.z, r3.x, r3.x
 144: mad r3.w, r2.x, r3.z, -r2.x
 145: mad r2.x, r3.w, r2.x, l(1.000000)
 146: mul r3.z, r3.z, l(0.318310)
 147: mad r2.x, r2.x, r2.x, l(0.000000)
 148: div r2.x, r3.z, r2.x
 149: mul r1.w, r1.w, r2.x
 150: mul r1.w, r1.w, l(3.141593)
 151: max r1.w, r1.w, l(0.000100)
 152: sqrt r1.w, r1.w
 153: mul r1.w, r2.w, r1.w
 154: mul r2.x, r3.x, l(0.280000)
 155: mad r2.x, -r2.x, r4.w, l(1.000000)
 156: dp3 r2.w, r0.xyzx, r0.xyzx
 157: ne r2.w, r2.w, l(0.000000)
 158: and r2.w, r2.w, l(0x3f800000)
 159: mul r1.w, r1.w, r2.w
 160: add r0.w, -r0.w, l(1.000000)
 161: add_sat r0.w, r0.w, cb0[8].w
 162: mul r3.xzw, r2.zzzz, r6.xxyz
 163: mul r5.xyz, r6.xyzx, r1.wwww
 164: add r1.w, -r2.y, l(1.000000)
 165: mul r2.y, r1.w, r1.w
 166: mul r2.y, r2.y, r2.y
 167: mul r1.w, r1.w, r2.y
 168: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 169: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 170: mul r2.yzw, r2.yyzw, r5.xxyz
 171: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 172: mul r2.xyz, r4.xyzx, r2.xxxx
 173: add r3.xzw, -r0.xxyz, r0.wwww
 174: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 175: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 176: mov o0.w, l(1.000000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTPROBE_SH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 178 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r4.x, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r4.x
  15: mov r5.x, v3.w
  16: mov r5.y, v4.w
  17: mov r5.z, v5.w
  18: add r4.yzw, -r5.xxyz, cb1[4].xxyz
  19: mov r6.x, cb4[9].z
  20: mov r6.y, cb4[10].z
  21: mov r6.z, cb4[11].z
  22: dp3 r0.w, r4.yzwy, r6.xyzx
  23: add r4.yzw, r5.xxyz, -cb3[25].xxyz
  24: dp3 r1.w, r4.yzwy, r4.yzwy
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb3[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  29: eq r1.w, cb6[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r4.y, cb6[0].y, l(1.000000)
  32:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  34:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  35:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  36:   movc r4.yzw, r4.yyyy, r6.xxyz, r5.xxyz
  37:   add r4.yzw, r4.yyzw, -cb6[6].xxyz
  38:   mul r6.yzw, r4.yyzw, cb6[5].xxyz
  39:   mad r4.y, r6.y, l(0.250000), l(0.750000)
  40:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r6.x, r4.z, r4.y
  42:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  43: else 
  44:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.y, r6.xyzw, cb2[46].xyzw
  47: div r4.zw, v7.xxxy, v7.wwww
  48: sample r6.xyzw, r4.zwzz, t1.xyzw, s4
  49: add_sat r0.w, r0.w, r6.x
  50: min r4.y, r0.w, r4.y
  51: movc r0.w, r1.w, r4.y, r0.w
  52: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  53: add r4.y, -cb0[9].y, l(1.000000)
  54: mad r4.y, r6.y, cb0[9].y, r4.y
  55: add r4.z, -cb0[8].w, l(1.000000)
  56: dp3 r4.w, r3.yzwy, r2.xyzx
  57: add r4.w, r4.w, r4.w
  58: mad r6.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  59: mul r7.xyz, r0.wwww, cb0[2].xyzx
  60: if_nz r1.w
  61:   eq r0.w, cb6[0].y, l(1.000000)
  62:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  63:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  64:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  65:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  66:   movc r8.xyz, r0.wwww, r8.xyzx, r5.xyzx
  67:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  68:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  69:   mul r0.w, r8.y, l(0.250000)
  70:   mul r1.w, cb6[0].z, l(0.500000)
  71:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  72:   max r0.w, r0.w, r1.w
  73:   min r8.x, r4.w, r0.w
  74:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  75:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  76:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  77:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  78:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  79:   mov r2.w, l(1.000000)
  80:   dp4 r9.x, r9.xyzw, r2.xyzw
  81:   dp4 r9.y, r10.xyzw, r2.xyzw
  82:   dp4 r9.z, r8.xyzw, r2.xyzw
  83: else 
  84:   mov r2.w, l(1.000000)
  85:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  86:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  87:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  88: endif 
  89: add r8.xyz, r9.xyzx, v6.xyzx
  90: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  91: log r8.xyz, r8.xyzx
  92: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  93: exp r8.xyz, r8.xyzx
  94: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  95: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  96: lt r0.w, l(0.000000), cb5[2].w
  97: if_nz r0.w
  98:   dp3 r0.w, r6.xyzx, r6.xyzx
  99:   rsq r0.w, r0.w
 100:   mul r9.xyz, r0.wwww, r6.xyzx
 101:   add r10.xyz, -r5.xyzx, cb5[0].xyzx
 102:   div r10.xyz, r10.xyzx, r9.xyzx
 103:   add r11.xyz, -r5.xyzx, cb5[1].xyzx
 104:   div r11.xyz, r11.xyzx, r9.xyzx
 105:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 106:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 107:   min r0.w, r10.y, r10.x
 108:   min r0.w, r10.z, r0.w
 109:   add r10.xyz, r5.xyzx, -cb5[2].xyzx
 110:   mad r9.xyz, r9.xyzx, r0.wwww, r10.xyzx
 111: else 
 112:   mov r9.xyz, r6.xyzx
 113: endif 
 114: mad r0.w, -r4.z, l(0.700000), l(1.700000)
 115: mul r0.w, r0.w, r4.z
 116: mul r0.w, r0.w, l(6.000000)
 117: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r0.w
 118: add r1.w, r9.w, l(-1.000000)
 119: mad r1.w, cb5[3].w, r1.w, l(1.000000)
 120: mul r1.w, r1.w, cb5[3].x
 121: mul r10.xyz, r9.xyzx, r1.wwww
 122: lt r2.w, cb5[1].w, l(0.999990)
 123: if_nz r2.w
 124:   lt r2.w, l(0.000000), cb5[6].w
 125:   if_nz r2.w
 126:     dp3 r2.w, r6.xyzx, r6.xyzx
 127:     rsq r2.w, r2.w
 128:     mul r11.xyz, r2.wwww, r6.xyzx
 129:     add r12.xyz, -r5.xyzx, cb5[4].xyzx
 130:     div r12.xyz, r12.xyzx, r11.xyzx
 131:     add r13.xyz, -r5.xyzx, cb5[5].xyzx
 132:     div r13.xyz, r13.xyzx, r11.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r2.w, r12.y, r12.x
 136:     min r2.w, r12.z, r2.w
 137:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
 138:     mad r6.xyz, r11.xyzx, r2.wwww, r5.xyzx
 139:   endif 
 140:   sample_l r5.xyzw, r6.xyzx, t4.xyzw, s0, r0.w
 141:   add r0.w, r5.w, l(-1.000000)
 142:   mad r0.w, cb5[7].w, r0.w, l(1.000000)
 143:   mul r0.w, r0.w, cb5[7].x
 144:   mul r5.xyz, r5.xyzx, r0.wwww
 145:   mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
 146:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 147: endif 
 148: mul r5.xyz, r4.yyyy, r10.xyzx
 149: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 150: dp3 r0.w, r6.xyzx, r6.xyzx
 151: max r0.w, r0.w, l(0.001000)
 152: rsq r0.w, r0.w
 153: mul r6.xyz, r0.wwww, r6.xyzx
 154: dp3 r0.w, r2.xyzx, -r3.yzwy
 155: dp3_sat r1.w, r2.xyzx, cb2[0].xyzx
 156: dp3_sat r2.x, r2.xyzx, r6.xyzx
 157: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 158: mul r2.z, r2.y, r2.y
 159: dp2 r2.z, r2.zzzz, r4.zzzz
 160: add r2.z, r2.z, l(-0.500000)
 161: add r2.w, -r1.w, l(1.000000)
 162: mul r3.x, r2.w, r2.w
 163: mul r3.x, r3.x, r3.x
 164: mul r2.w, r2.w, r3.x
 165: mad r2.w, r2.z, r2.w, l(1.000000)
 166: add r3.x, -|r0.w|, l(1.000000)
 167: mul r3.y, r3.x, r3.x
 168: mul r3.y, r3.y, r3.y
 169: mul r3.x, r3.x, r3.y
 170: mad r2.z, r2.z, r3.x, l(1.000000)
 171: mul r2.z, r2.z, r2.w
 172: mul r2.z, r1.w, r2.z
 173: mul r2.w, r4.z, r4.z
 174: max r2.w, r2.w, l(0.002000)
 175: add r3.y, -r2.w, l(1.000000)
 176: mad r3.z, |r0.w|, r3.y, r2.w
 177: mad r3.y, r1.w, r3.y, r2.w
 178: mul r0.w, |r0.w|, r3.y
 179: mad r0.w, r1.w, r3.z, r0.w
 180: add r0.w, r0.w, l(0.000010)
 181: div r0.w, l(0.500000), r0.w
 182: mul r3.y, r2.w, r2.w
 183: mad r3.z, r2.x, r3.y, -r2.x
 184: mad r2.x, r3.z, r2.x, l(1.000000)
 185: mul r3.y, r3.y, l(0.318310)
 186: mad r2.x, r2.x, r2.x, l(0.000000)
 187: div r2.x, r3.y, r2.x
 188: mul r0.w, r0.w, r2.x
 189: mul r0.w, r0.w, l(3.141593)
 190: max r0.w, r0.w, l(0.000100)
 191: sqrt r0.w, r0.w
 192: mul r0.w, r1.w, r0.w
 193: mul r1.w, r2.w, l(0.280000)
 194: mad r1.w, -r1.w, r4.z, l(1.000000)
 195: dp3 r2.x, r0.xyzx, r0.xyzx
 196: ne r2.x, r2.x, l(0.000000)
 197: and r2.x, r2.x, l(0x3f800000)
 198: mul r0.w, r0.w, r2.x
 199: add_sat r2.x, r4.x, cb0[8].w
 200: mul r3.yzw, r2.zzzz, r7.xxyz
 201: mad r3.yzw, r8.xxyz, r4.yyyy, r3.yyzw
 202: mul r4.xyz, r7.xyzx, r0.wwww
 203: add r0.w, -r2.y, l(1.000000)
 204: mul r2.y, r0.w, r0.w
 205: mul r2.y, r2.y, r2.y
 206: mul r0.w, r0.w, r2.y
 207: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 208: mad r2.yzw, r2.yyzw, r0.wwww, r0.xxyz
 209: mul r2.yzw, r2.yyzw, r4.xxyz
 210: mad r1.xyz, r1.xyzx, r3.yzwy, r2.yzwy
 211: mul r2.yzw, r5.xxyz, r1.wwww
 212: add r3.yzw, -r0.xxyz, r2.xxxx
 213: mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 214: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 215: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 176 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r3.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r4.w, r5.xyzx, r5.xyzx
  22: sqrt r4.w, r4.w
  23: add r4.w, -r3.w, r4.w
  24: mad r3.w, cb3[25].w, r4.w, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.w, cb6[0].x, l(1.000000)
  27: if_nz r4.w
  28:   eq r5.x, cb6[0].y, l(1.000000)
  29:   mul r5.yzw, v4.wwww, cb6[2].xxyz
  30:   mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
  31:   mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
  32:   add r5.yzw, r5.yyzw, cb6[4].xxyz
  33:   movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r5.y, r6.x
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
  44: div r5.yz, v7.xxyx, v7.wwww
  45: sample r6.xyzw, r5.yzyy, t1.xyzw, s4
  46: add_sat r3.w, r3.w, r6.x
  47: min r5.x, r3.w, r5.x
  48: movc r3.w, r4.w, r5.x, r3.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.x, -cb0[9].y, l(1.000000)
  51: mad r5.x, r5.y, cb0[9].y, r5.x
  52: add r5.y, -cb0[8].w, l(1.000000)
  53: dp3 r5.z, r3.xyzx, r2.xyzx
  54: add r5.z, r5.z, r5.z
  55: mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
  56: mul r7.xyz, r3.wwww, cb0[2].xyzx
  57: if_nz r4.w
  58:   eq r3.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r3.w, r8.y, l(0.250000)
  67:   mul r4.w, cb6[0].z, l(0.500000)
  68:   mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r3.w, r3.w, r4.w
  70:   min r8.x, r5.z, r3.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.y, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.y
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r3.w, r9.w, l(-1.000000)
 116: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 117: mul r3.w, r3.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r3.wwww
 119: lt r4.w, cb5[1].w, l(0.999990)
 120: if_nz r4.w
 121:   lt r4.w, l(0.000000), cb5[6].w
 122:   if_nz r4.w
 123:     dp3 r4.w, r6.xyzx, r6.xyzx
 124:     rsq r4.w, r4.w
 125:     mul r11.xyz, r4.wwww, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r4.w, r12.y, r12.x
 133:     min r4.w, r12.z, r4.w
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
 136:   endif 
 137:   sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r4.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r4.xyzx, r2.wwww
 142:   mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.xxxx, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 147: dp3 r1.w, r6.xyzx, r6.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r6.xyz, r1.wwww, r6.xyzx
 151: dp3 r1.w, r2.xyzx, -r3.xyzx
 152: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.yyyy
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.x, -r2.w, l(1.000000)
 159: mul r3.y, r3.x, r3.x
 160: mul r3.y, r3.y, r3.y
 161: mul r3.x, r3.x, r3.y
 162: mad r3.x, r2.z, r3.x, l(1.000000)
 163: add r3.y, -|r1.w|, l(1.000000)
 164: mul r3.z, r3.y, r3.y
 165: mul r3.z, r3.z, r3.z
 166: mul r3.y, r3.y, r3.z
 167: mad r2.z, r2.z, r3.y, l(1.000000)
 168: mul r2.z, r2.z, r3.x
 169: mul r2.z, r2.w, r2.z
 170: mul r3.x, r5.y, r5.y
 171: max r3.x, r3.x, l(0.002000)
 172: add r3.z, -r3.x, l(1.000000)
 173: mad r3.w, |r1.w|, r3.z, r3.x
 174: mad r3.z, r2.w, r3.z, r3.x
 175: mul r1.w, |r1.w|, r3.z
 176: mad r1.w, r2.w, r3.w, r1.w
 177: add r1.w, r1.w, l(0.000010)
 178: div r1.w, l(0.500000), r1.w
 179: mul r3.z, r3.x, r3.x
 180: mad r3.w, r2.x, r3.z, -r2.x
 181: mad r2.x, r3.w, r2.x, l(1.000000)
 182: mul r3.z, r3.z, l(0.318310)
 183: mad r2.x, r2.x, r2.x, l(0.000000)
 184: div r2.x, r3.z, r2.x
 185: mul r1.w, r1.w, r2.x
 186: mul r1.w, r1.w, l(3.141593)
 187: max r1.w, r1.w, l(0.000100)
 188: sqrt r1.w, r1.w
 189: mul r1.w, r2.w, r1.w
 190: mul r2.x, r3.x, l(0.280000)
 191: mad r2.x, -r2.x, r5.y, l(1.000000)
 192: dp3 r2.w, r0.xyzx, r0.xyzx
 193: ne r2.w, r2.w, l(0.000000)
 194: and r2.w, r2.w, l(0x3f800000)
 195: mul r1.w, r1.w, r2.w
 196: add r0.w, -r0.w, l(1.000000)
 197: add_sat r0.w, r0.w, cb0[8].w
 198: mul r3.xzw, r2.zzzz, r7.xxyz
 199: mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
 200: mul r5.xyz, r7.xyzx, r1.wwww
 201: add r1.w, -r2.y, l(1.000000)
 202: mul r2.y, r1.w, r1.w
 203: mul r2.y, r2.y, r2.y
 204: mul r1.w, r1.w, r2.y
 205: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 206: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 207: mul r2.yzw, r2.yyzw, r5.xxyz
 208: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 209: mul r2.xyz, r4.xyzx, r2.xxxx
 210: add r3.xzw, -r0.xxyz, r0.wwww
 211: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 212: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 213: mov o0.w, l(1.000000)
 214: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 52 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: eq r2.w, cb3[0].x, l(1.000000)
  10: if_nz r2.w
  11:   eq r2.w, cb3[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  13:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  22:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r2.w, r3.y
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  32: dp3 r3.x, v2.xyzx, r2.xyzx
  33: add r3.x, r3.x, r3.x
  34: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  35: mul r5.xyz, r2.wwww, cb0[2].xyzx
  36: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  37: mul r2.w, r2.w, r4.x
  38: mul r2.w, r2.w, l(6.000000)
  39: sample_l r6.xyzw, r3.xzwx, t3.xyzw, s0, r2.w
  40: add r2.w, r6.w, l(-1.000000)
  41: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  42: mul r2.w, r2.w, cb2[3].x
  43: mul r3.xzw, r6.xxyz, r2.wwww
  44: mul r3.xyz, r3.yyyy, r3.xzwx
  45: dp3 r2.w, -v2.xyzx, r2.xyzx
  46: add r3.w, r2.w, r2.w
  47: mad r6.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  48: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  49: mov_sat r2.w, r2.w
  50: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  51: add r6.y, -r2.w, l(1.000000)
  52: mul r6.zw, r6.xxxy, r6.xxxy
  53: mul r2.yz, r6.xxyx, r6.xxwx
  54: mul r4.yz, r6.zzyz, r2.yyzy
  55: add r0.w, -r0.w, l(1.000000)
  56: add_sat r0.w, r0.w, cb0[8].w
  57: sample r6.xyzw, r4.ywyy, t2.xyzw, s2
  58: mul r2.y, r6.x, l(16.000000)
  59: mul r2.yzw, r0.xxyz, r2.yyyy
  60: mad r1.yzw, r1.yyzw, r1.xxxx, r2.yyzw
  61: mul r2.xyz, r2.xxxx, r5.xyzx
  62: add r4.xyw, -r0.xyxz, r0.wwww
  63: mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
  64: mul r0.xyz, r0.xyzx, r3.xyzx
  65: mad o0.xyz, r1.yzwy, r2.xyzx, r0.xyzx
  66: mov o0.w, r1.x
  67: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r1.xyzx, r1.xyzx
  28: rsq r0.w, r0.w
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: mov o5.xyz, r1.xyzx
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mul r2.xyzw, r1.yzzx, r1.xyzz
  34: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  37: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  38: mov r1.w, l(1.000000)
  39: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  40: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  41: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  42: add r2.xyz, r2.xyzx, r3.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  50: mul r4.xyzw, r1.yyyy, r3.xyzw
  51: mul r3.xyzw, r3.xyzw, r3.xyzw
  52: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  53: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  54: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  55: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  56: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  57: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  58: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  59: rsq r3.xyzw, r0.xyzw
  60: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  61: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  62: mul r1.xyzw, r1.xyzw, r3.xyzw
  63: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  64: mul r0.xyzw, r0.xyzw, r1.xyzw
  65: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  66: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  67: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  68: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  69: add o6.xyz, r2.xyzx, r0.xyzx
  70: mov o6.w, l(0)
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r1.xyzx, r1.xyzx
  28: rsq r0.w, r0.w
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: mov o5.xyz, r1.xyzx
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mul r2.xyzw, r1.yzzx, r1.xyzz
  34: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  37: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  38: mov r1.w, l(1.000000)
  39: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  40: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  41: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  42: add r2.xyz, r2.xyzx, r3.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  50: mul r4.xyzw, r1.yyyy, r3.xyzw
  51: mul r3.xyzw, r3.xyzw, r3.xyzw
  52: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  53: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  54: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  55: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  56: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  57: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  58: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  59: rsq r3.xyzw, r0.xyzw
  60: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  61: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  62: mul r1.xyzw, r1.xyzw, r3.xyzw
  63: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  64: mul r0.xyzw, r0.xyzw, r1.xyzw
  65: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  66: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  67: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  68: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  69: add o6.xyz, r2.xyzx, r0.xyzx
  70: mov o6.w, l(0)
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mul r0.y, r0.y, cb1[5].x
  30: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  31: mov o7.zw, r0.zzzw
  32: add o7.xy, r1.zzzz, r1.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTPROBE_SH VERTEXLIGHT_ON _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  46: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  46: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 27 avg math (26..29)
 // Stats for Fragment shader:
 //        d3d11: 51 avg math (33..102), 3 avg texture (3..5), 1 avg branch (0..2)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r2.wwww, t1.xyzw, s3
  32: mul r1.w, r1.w, r3.x
  33: mul r3.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, -v2.xyzx, r2.xyzx
  35: add r1.w, r1.w, r1.w
  36: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r1.w, r2.xyzx, r5.xyzx
  41: dp3 r2.x, r4.xyzx, r5.xyzx
  42: mul r2.x, r2.x, r2.x
  43: mul r2.x, r2.x, r2.x
  44: add r2.y, -cb0[8].w, l(1.000000)
  45: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  46: mul r2.x, r2.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r2.xxxx
  48: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  49: mul r1.xyz, r1.wwww, r3.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  13:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  14:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  16:   movc r3.xyz, r0.wwww, r3.xyzx, v6.xyzx
  17:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  18:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  19:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  20:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r3.x, r0.w, r2.w
  22:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  27: mul r3.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, -v2.xyzx, r2.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r4.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  31: mov r5.x, v3.w
  32: mov r5.y, v4.w
  33: mov r5.z, v5.w
  34: dp3_sat r0.w, r2.xyzx, r5.xyzx
  35: dp3 r2.x, r4.xyzx, r5.xyzx
  36: mul r2.x, r2.x, r2.x
  37: mul r2.x, r2.x, r2.x
  38: add r2.y, -cb0[8].w, l(1.000000)
  39: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  40: mul r2.x, r2.x, l(16.000000)
  41: mul r0.xyz, r0.xyzx, r2.xxxx
  42: mad r0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
  43: mul r1.yzw, r0.wwww, r3.xxyz
  44: mul o0.xyz, r0.xyzx, r1.yzwy
  45: mov o0.w, r1.x
  46: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 33 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: eq r1.w, cb2[0].x, l(1.000000)
   9: if_nz r1.w
  10:   eq r1.w, cb2[0].y, l(1.000000)
  11:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  12:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  13:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  15:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  16:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  18:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r1.w, r2.w
  21:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  26: mul r3.xyz, r1.wwww, cb0[2].xyzx
  27: dp3 r1.w, -v2.xyzx, r2.xyzx
  28: add r1.w, r1.w, r1.w
  29: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  30: mov r5.x, v3.w
  31: mov r5.y, v4.w
  32: mov r5.z, v5.w
  33: dp3_sat r1.w, r2.xyzx, r5.xyzx
  34: dp3 r2.x, r4.xyzx, r5.xyzx
  35: mul r2.x, r2.x, r2.x
  36: mul r2.x, r2.x, r2.x
  37: add r2.y, -cb0[8].w, l(1.000000)
  38: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  39: mul r2.x, r2.x, l(16.000000)
  40: mul r0.xyz, r0.xyzx, r2.xxxx
  41: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  42: mul r1.xyz, r1.wwww, r3.xyzx
  43: mul o0.xyz, r0.xyzx, r1.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  10: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  11: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  12: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  13: eq r0.w, cb2[0].x, l(1.000000)
  14: if_nz r0.w
  15:   eq r0.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r0.w, r2.w
  26:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  31: lt r2.w, l(0.000000), r3.z
  32: and r2.w, r2.w, l(0x3f800000)
  33: div r4.xy, r3.xyxx, r3.wwww
  34: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  35: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  36: mul r2.w, r2.w, r4.w
  37: dp3 r3.x, r3.xyzx, r3.xyzx
  38: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  39: mul r2.w, r2.w, r3.x
  40: mul r0.w, r0.w, r2.w
  41: mul r3.xyz, r0.wwww, cb0[2].xyzx
  42: dp3 r0.w, -v2.xyzx, r2.xyzx
  43: add r0.w, r0.w, r0.w
  44: mad r4.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  45: mov r5.x, v3.w
  46: mov r5.y, v4.w
  47: mov r5.z, v5.w
  48: dp3_sat r0.w, r2.xyzx, r5.xyzx
  49: dp3 r2.x, r4.xyzx, r5.xyzx
  50: mul r2.x, r2.x, r2.x
  51: mul r2.x, r2.x, r2.x
  52: add r2.y, -cb0[8].w, l(1.000000)
  53: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  54: mul r2.x, r2.x, l(16.000000)
  55: mul r0.xyz, r0.xyzx, r2.xxxx
  56: mad r0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
  57: mul r1.yzw, r0.wwww, r3.xxyz
  58: mul o0.xyz, r0.xyzx, r1.yzwy
  59: mov o0.w, r1.x
  60: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 45 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   9: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: lt r2.w, l(0.000000), r3.z
  31: and r2.w, r2.w, l(0x3f800000)
  32: div r4.xy, r3.xyxx, r3.wwww
  33: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  35: mul r2.w, r2.w, r4.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  38: mul r2.w, r2.w, r3.x
  39: mul r1.w, r1.w, r2.w
  40: mul r3.xyz, r1.wwww, cb0[2].xyzx
  41: dp3 r1.w, -v2.xyzx, r2.xyzx
  42: add r1.w, r1.w, r1.w
  43: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: dp3_sat r1.w, r2.xyzx, r5.xyzx
  48: dp3 r2.x, r4.xyzx, r5.xyzx
  49: mul r2.x, r2.x, r2.x
  50: mul r2.x, r2.x, r2.x
  51: add r2.y, -cb0[8].w, l(1.000000)
  52: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  53: mul r2.x, r2.x, l(16.000000)
  54: mul r0.xyz, r0.xyzx, r2.xxxx
  55: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  56: mul r1.xyz, r1.wwww, r3.xyzx
  57: mul o0.xyz, r0.xyzx, r1.xyzx
  58: mov o0.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  10: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  11: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  12: add r3.xyz, r3.xyzx, cb0[14].xyzx
  13: eq r0.w, cb2[0].x, l(1.000000)
  14: if_nz r0.w
  15:   eq r0.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r0.w, r2.w
  26:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  31: dp3 r2.w, r3.xyzx, r3.xyzx
  32: sample r4.xyzw, r2.wwww, t1.xyzw, s4
  33: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  34: mul r2.w, r3.w, r4.x
  35: mul r0.w, r0.w, r2.w
  36: mul r3.xyz, r0.wwww, cb0[2].xyzx
  37: dp3 r0.w, -v2.xyzx, r2.xyzx
  38: add r0.w, r0.w, r0.w
  39: mad r4.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  40: mov r5.x, v3.w
  41: mov r5.y, v4.w
  42: mov r5.z, v5.w
  43: dp3_sat r0.w, r2.xyzx, r5.xyzx
  44: dp3 r2.x, r4.xyzx, r5.xyzx
  45: mul r2.x, r2.x, r2.x
  46: mul r2.x, r2.x, r2.x
  47: add r2.y, -cb0[8].w, l(1.000000)
  48: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  49: mul r2.x, r2.x, l(16.000000)
  50: mul r0.xyz, r0.xyzx, r2.xxxx
  51: mad r0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
  52: mul r1.yzw, r0.wwww, r3.xxyz
  53: mul o0.xyz, r0.xyzx, r1.yzwy
  54: mov o0.w, r1.x
  55: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r2.wwww, t1.xyzw, s4
  32: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  33: mul r2.w, r3.w, r4.x
  34: mul r1.w, r1.w, r2.w
  35: mul r3.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, -v2.xyzx, r2.xyzx
  37: add r1.w, r1.w, r1.w
  38: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r1.w, r2.xyzx, r5.xyzx
  43: dp3 r2.x, r4.xyzx, r5.xyzx
  44: mul r2.x, r2.x, r2.x
  45: mul r2.x, r2.x, r2.x
  46: add r2.y, -cb0[8].w, l(1.000000)
  47: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  48: mul r2.x, r2.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r2.xxxx
  50: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  51: mul r1.xyz, r1.wwww, r3.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: mul r3.xy, v6.yyyy, cb0[12].xyxx
  10: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  11: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  12: add r3.xy, r3.xyxx, cb0[14].xyxx
  13: eq r0.w, cb2[0].x, l(1.000000)
  14: if_nz r0.w
  15:   eq r0.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r0.w, r2.w
  26:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  31: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  32: mul r0.w, r0.w, r3.w
  33: mul r3.xyz, r0.wwww, cb0[2].xyzx
  34: dp3 r0.w, -v2.xyzx, r2.xyzx
  35: add r0.w, r0.w, r0.w
  36: mad r4.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r0.w, r2.xyzx, r5.xyzx
  41: dp3 r2.x, r4.xyzx, r5.xyzx
  42: mul r2.x, r2.x, r2.x
  43: mul r2.x, r2.x, r2.x
  44: add r2.y, -cb0[8].w, l(1.000000)
  45: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  46: mul r2.x, r2.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r2.xxxx
  48: mad r0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
  49: mul r1.yzw, r0.wwww, r3.xxyz
  50: mul o0.xyz, r0.xyzx, r1.yzwy
  51: mov o0.w, r1.x
  52: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xy, v6.yyyy, cb0[12].xyxx
   9: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  10: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  11: add r3.xy, r3.xyxx, cb0[14].xyxx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  30: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  31: mul r1.w, r1.w, r3.w
  32: mul r3.xyz, r1.wwww, cb0[2].xyzx
  33: dp3 r1.w, -v2.xyzx, r2.xyzx
  34: add r1.w, r1.w, r1.w
  35: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r1.w, r2.xyzx, r5.xyzx
  40: dp3 r2.x, r4.xyzx, r5.xyzx
  41: mul r2.x, r2.x, r2.x
  42: mul r2.x, r2.x, r2.x
  43: add r2.y, -cb0[8].w, l(1.000000)
  44: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  45: mul r2.x, r2.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r2.xxxx
  47: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  48: mul r1.xyz, r1.wwww, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: add r1.y, -cb0[8].w, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  41: mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r1.xyzw, r1.wxyz, cb0[4].wxyz
  43: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r2.xyz, r0.wwww, r2.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mul r1.yzw, r0.wwww, r1.yyzw
  47: mad r1.yzw, r1.yyzw, r1.xxxx, r2.xxyz
  48: mov o0.w, r1.x
  49: mul o0.xyz, r0.xyzx, r1.yzwy
  50: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: add r1.y, -cb0[8].w, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  41: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  43: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r2.xyz, r0.wwww, r2.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  16: mov r5.x, cb4[9].z
  17: mov r5.y, cb4[10].z
  18: mov r5.z, cb4[11].z
  19: dp3 r0.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  21: dp3 r1.w, r4.xyzx, r4.xyzx
  22: sqrt r1.w, r1.w
  23: add r1.w, -r0.w, r1.w
  24: mad r0.w, cb3[25].w, r1.w, r0.w
  25: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  26: eq r1.w, cb5[0].x, l(1.000000)
  27: if_nz r1.w
  28:   eq r3.w, cb5[0].y, l(1.000000)
  29:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  30:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  31:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  33:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  34:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  36:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  37:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  38:   max r4.x, r3.w, r4.y
  39:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  40: else 
  41:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  44: div r4.xy, v7.xyxx, v7.wwww
  45: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  46: add_sat r0.w, r0.w, r4.x
  47: min r3.w, r0.w, r3.w
  48: movc r0.w, r1.w, r3.w, r0.w
  49: mul r4.xyz, r0.wwww, cb0[2].xyzx
  50: add r0.w, -cb0[8].w, l(1.000000)
  51: mov r5.x, v3.w
  52: mov r5.y, v4.w
  53: mov r5.z, v5.w
  54: mad r6.xyz, -v2.xyzx, r2.wwww, r5.xyzx
  55: dp3 r1.w, r6.xyzx, r6.xyzx
  56: max r1.w, r1.w, l(0.001000)
  57: rsq r1.w, r1.w
  58: mul r6.xyz, r1.wwww, r6.xyzx
  59: dp3 r1.w, r2.xyzx, -r3.xyzx
  60: dp3_sat r2.w, r2.xyzx, r5.xyzx
  61: dp3_sat r2.x, r2.xyzx, r6.xyzx
  62: dp3_sat r2.y, r5.xyzx, r6.xyzx
  63: mul r2.z, r2.y, r2.y
  64: dp2 r2.z, r2.zzzz, r0.wwww
  65: add r2.z, r2.z, l(-0.500000)
  66: add r3.x, -r2.w, l(1.000000)
  67: mul r3.y, r3.x, r3.x
  68: mul r3.y, r3.y, r3.y
  69: mul r3.x, r3.x, r3.y
  70: mad r3.x, r2.z, r3.x, l(1.000000)
  71: add r3.y, -|r1.w|, l(1.000000)
  72: mul r3.z, r3.y, r3.y
  73: mul r3.z, r3.z, r3.z
  74: mul r3.y, r3.y, r3.z
  75: mad r2.z, r2.z, r3.y, l(1.000000)
  76: mul r2.z, r2.z, r3.x
  77: mul r2.z, r2.w, r2.z
  78: mul r0.w, r0.w, r0.w
  79: max r0.w, r0.w, l(0.002000)
  80: add r3.x, -r0.w, l(1.000000)
  81: mad r3.y, |r1.w|, r3.x, r0.w
  82: mad r3.x, r2.w, r3.x, r0.w
  83: mul r1.w, |r1.w|, r3.x
  84: mad r1.w, r2.w, r3.y, r1.w
  85: add r1.w, r1.w, l(0.000010)
  86: div r1.w, l(0.500000), r1.w
  87: mul r0.w, r0.w, r0.w
  88: mad r3.x, r2.x, r0.w, -r2.x
  89: mad r2.x, r3.x, r2.x, l(1.000000)
  90: mul r0.w, r0.w, l(0.318310)
  91: mad r2.x, r2.x, r2.x, l(0.000000)
  92: div r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, r1.w
  94: mul r0.w, r0.w, l(3.141593)
  95: max r0.w, r0.w, l(0.000100)
  96: sqrt r0.w, r0.w
  97: mul r0.w, r2.w, r0.w
  98: dp3 r1.w, r0.xyzx, r0.xyzx
  99: ne r1.w, r1.w, l(0.000000)
 100: and r1.w, r1.w, l(0x3f800000)
 101: mul r0.w, r0.w, r1.w
 102: mul r2.xzw, r2.zzzz, r4.xxyz
 103: mul r3.xyz, r4.xyzx, r0.wwww
 104: add r0.w, -r2.y, l(1.000000)
 105: mul r1.w, r0.w, r0.w
 106: mul r1.w, r1.w, r1.w
 107: mul r0.w, r0.w, r1.w
 108: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 109: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 110: mul r0.xyz, r0.xyzx, r3.xyzx
 111: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 112: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r1.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r4.xyzx, r4.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb5[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r3.w, cb5[0].y, l(1.000000)
  26:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  27:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  28:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  29:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  30:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  33:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  34:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r3.w, r4.y
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  41: div r4.xy, v7.xyxx, v7.wwww
  42: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  43: add_sat r1.w, r1.w, r4.x
  44: min r3.w, r1.w, r3.w
  45: movc r1.w, r2.w, r3.w, r1.w
  46: mul r4.xyz, r1.wwww, cb0[2].xyzx
  47: add r1.w, -cb0[8].w, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  52: dp3 r0.w, r6.xyzx, r6.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r6.xyz, r0.wwww, r6.xyzx
  56: dp3 r0.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r1.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r0.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r1.w, r1.w, r1.w
  76: max r1.w, r1.w, l(0.002000)
  77: add r3.x, -r1.w, l(1.000000)
  78: mad r3.y, |r0.w|, r3.x, r1.w
  79: mad r3.x, r2.w, r3.x, r1.w
  80: mul r0.w, |r0.w|, r3.x
  81: mad r0.w, r2.w, r3.y, r0.w
  82: add r0.w, r0.w, l(0.000010)
  83: div r0.w, l(0.500000), r0.w
  84: mul r1.w, r1.w, r1.w
  85: mad r3.x, r2.x, r1.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r1.w, r1.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r1.w, r1.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r4.xxyz
 100: mul r3.xyz, r4.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 102 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, cb0[4].xyzw
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r2.w, v2.xyzx, v2.xyzx
  10: rsq r2.w, r2.w
  11: mul r3.xyz, r2.wwww, v2.xyzx
  12: mul r1.xyz, r1.wwww, r1.xyzx
  13: add r3.w, -r0.w, l(1.000000)
  14: mad o0.w, r1.w, r0.w, r3.w
  15: mul r4.xy, v6.yyyy, cb0[12].xyxx
  16: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  17: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  18: add r4.xy, r4.xyxx, cb0[14].xyxx
  19: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  20: mov r6.x, cb4[9].z
  21: mov r6.y, cb4[10].z
  22: mov r6.z, cb4[11].z
  23: dp3 r0.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  25: dp3 r1.w, r5.xyzx, r5.xyzx
  26: sqrt r1.w, r1.w
  27: add r1.w, -r0.w, r1.w
  28: mad r0.w, cb3[25].w, r1.w, r0.w
  29: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  30: eq r1.w, cb5[0].x, l(1.000000)
  31: if_nz r1.w
  32:   eq r3.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r3.w, r4.z
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  48: div r4.zw, v7.xxxy, v7.wwww
  49: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  50: add_sat r0.w, r0.w, r5.x
  51: min r3.w, r0.w, r3.w
  52: movc r0.w, r1.w, r3.w, r0.w
  53: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  54: mul r0.w, r0.w, r4.w
  55: mul r4.xyz, r0.wwww, cb0[2].xyzx
  56: add r0.w, -cb0[8].w, l(1.000000)
  57: mov r5.x, v3.w
  58: mov r5.y, v4.w
  59: mov r5.z, v5.w
  60: mad r6.xyz, -v2.xyzx, r2.wwww, r5.xyzx
  61: dp3 r1.w, r6.xyzx, r6.xyzx
  62: max r1.w, r1.w, l(0.001000)
  63: rsq r1.w, r1.w
  64: mul r6.xyz, r1.wwww, r6.xyzx
  65: dp3 r1.w, r2.xyzx, -r3.xyzx
  66: dp3_sat r2.w, r2.xyzx, r5.xyzx
  67: dp3_sat r2.x, r2.xyzx, r6.xyzx
  68: dp3_sat r2.y, r5.xyzx, r6.xyzx
  69: mul r2.z, r2.y, r2.y
  70: dp2 r2.z, r2.zzzz, r0.wwww
  71: add r2.z, r2.z, l(-0.500000)
  72: add r3.x, -r2.w, l(1.000000)
  73: mul r3.y, r3.x, r3.x
  74: mul r3.y, r3.y, r3.y
  75: mul r3.x, r3.x, r3.y
  76: mad r3.x, r2.z, r3.x, l(1.000000)
  77: add r3.y, -|r1.w|, l(1.000000)
  78: mul r3.z, r3.y, r3.y
  79: mul r3.z, r3.z, r3.z
  80: mul r3.y, r3.y, r3.z
  81: mad r2.z, r2.z, r3.y, l(1.000000)
  82: mul r2.z, r2.z, r3.x
  83: mul r2.z, r2.w, r2.z
  84: mul r0.w, r0.w, r0.w
  85: max r0.w, r0.w, l(0.002000)
  86: add r3.x, -r0.w, l(1.000000)
  87: mad r3.y, |r1.w|, r3.x, r0.w
  88: mad r3.x, r2.w, r3.x, r0.w
  89: mul r1.w, |r1.w|, r3.x
  90: mad r1.w, r2.w, r3.y, r1.w
  91: add r1.w, r1.w, l(0.000010)
  92: div r1.w, l(0.500000), r1.w
  93: mul r0.w, r0.w, r0.w
  94: mad r3.x, r2.x, r0.w, -r2.x
  95: mad r2.x, r3.x, r2.x, l(1.000000)
  96: mul r0.w, r0.w, l(0.318310)
  97: mad r2.x, r2.x, r2.x, l(0.000000)
  98: div r0.w, r0.w, r2.x
  99: mul r0.w, r0.w, r1.w
 100: mul r0.w, r0.w, l(3.141593)
 101: max r0.w, r0.w, l(0.000100)
 102: sqrt r0.w, r0.w
 103: mul r0.w, r2.w, r0.w
 104: dp3 r1.w, r0.xyzx, r0.xyzx
 105: ne r1.w, r1.w, l(0.000000)
 106: and r1.w, r1.w, l(0x3f800000)
 107: mul r0.w, r0.w, r1.w
 108: mul r2.xzw, r2.zzzz, r4.xxyz
 109: mul r3.xyz, r4.xyzx, r0.wwww
 110: add r0.w, -r2.y, l(1.000000)
 111: mul r1.w, r0.w, r0.w
 112: mul r1.w, r1.w, r1.w
 113: mul r0.w, r0.w, r1.w
 114: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 116: mul r0.xyz, r0.xyzx, r3.xyzx
 117: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 118: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  45: div r4.zw, v7.xxxy, v7.wwww
  46: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  47: add_sat r1.w, r1.w, r5.x
  48: min r3.w, r1.w, r3.w
  49: movc r1.w, r2.w, r3.w, r1.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.w
  52: mul r4.xyz, r1.wwww, cb0[2].xyzx
  53: add r1.w, -cb0[8].w, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  58: dp3 r0.w, r6.xyzx, r6.xyzx
  59: max r0.w, r0.w, l(0.001000)
  60: rsq r0.w, r0.w
  61: mul r6.xyz, r0.wwww, r6.xyzx
  62: dp3 r0.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r1.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r0.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r1.w, r1.w, r1.w
  82: max r1.w, r1.w, l(0.002000)
  83: add r3.x, -r1.w, l(1.000000)
  84: mad r3.y, |r0.w|, r3.x, r1.w
  85: mad r3.x, r2.w, r3.x, r1.w
  86: mul r0.w, |r0.w|, r3.x
  87: mad r0.w, r2.w, r3.y, r0.w
  88: add r0.w, r0.w, l(0.000010)
  89: div r0.w, l(0.500000), r0.w
  90: mul r1.w, r1.w, r1.w
  91: mad r3.x, r2.x, r1.w, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r1.w, r1.w, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r1.w, r1.w, r2.x
  96: mul r0.w, r0.w, r1.w
  97: mul r0.w, r0.w, l(3.141593)
  98: max r0.w, r0.w, l(0.000100)
  99: sqrt r0.w, r0.w
 100: mul r0.w, r2.w, r0.w
 101: dp3 r1.w, r0.xyzx, r0.xyzx
 102: ne r1.w, r1.w, l(0.000000)
 103: and r1.w, r1.w, l(0x3f800000)
 104: mul r0.w, r0.w, r1.w
 105: mul r2.xzw, r2.zzzz, r4.xxyz
 106: mul r3.xyz, r4.xyzx, r0.wwww
 107: add r0.w, -r2.y, l(1.000000)
 108: mul r1.w, r0.w, r0.w
 109: mul r1.w, r1.w, r1.w
 110: mul r0.w, r0.w, r1.w
 111: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 113: mul r0.xyz, r0.xyzx, r3.xyzx
 114: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyz, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t3.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: add r1.y, -cb0[8].w, l(1.000000)
  35: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  36: mul r0.w, r1.x, l(16.000000)
  37: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  38: mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mul r1.xyzw, r1.wxyz, cb0[4].wxyz
  40: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: mul r2.xyz, r0.wwww, r2.xyzx
  42: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  43: mul r1.yzw, r0.wwww, r1.yyzw
  44: mad r1.yzw, r1.yyzw, r1.xxxx, r2.xxyz
  45: mov o0.w, r1.x
  46: mul o0.xyz, r0.xyzx, r1.yzwy
  47: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyz, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 38 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t3.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: add r1.y, -cb0[8].w, l(1.000000)
  35: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  36: mul r0.w, r1.x, l(16.000000)
  37: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  38: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  40: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: mul r2.xyz, r0.wwww, r2.xyzx
  42: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  43: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  44: mul o0.xyz, r0.xyzx, r1.xyzx
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyz, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t2.xyzw, s3
  18: sample r1.xyzw, r1.xxxx, t1.xyzw, s4
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: add r1.y, -cb0[8].w, l(1.000000)
  37: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  38: mul r0.w, r1.x, l(16.000000)
  39: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  40: mad r2.xyz, r1.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  41: mul r1.xyzw, r1.wxyz, cb0[4].wxyz
  42: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mul r2.xyz, r0.wwww, r2.xyzx
  44: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  45: mul r1.yzw, r0.wwww, r1.yyzw
  46: mad r1.yzw, r1.yyzw, r1.xxxx, r2.xxyz
  47: mov o0.w, r1.x
  48: mul o0.xyz, r0.xyzx, r1.yzwy
  49: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyz, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t2.xyzw, s3
  18: sample r1.xyzw, r1.xxxx, t1.xyzw, s4
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: add r1.y, -cb0[8].w, l(1.000000)
  37: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  38: mul r0.w, r1.x, l(16.000000)
  39: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  40: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  41: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  42: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mul r2.xyz, r0.wwww, r2.xyzx
  44: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  45: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  46: mul o0.xyz, r0.xyzx, r1.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.wxyz, cb0[4].wxyz
   2: mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.yzw, r0.wwww, r1.yyzw
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  10: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  11: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  12: add r3.xyz, r3.xyzx, cb0[14].xyzx
  13: eq r0.w, cb2[0].x, l(1.000000)
  14: if_nz r0.w
  15:   eq r0.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r0.w, r2.w
  26:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  31: dp3 r2.w, r3.xyzx, r3.xyzx
  32: sample r3.xyzw, r2.wwww, t1.xyzw, s3
  33: mul r0.w, r0.w, r3.x
  34: mul r3.xyz, r0.wwww, cb0[2].xyzx
  35: dp3 r0.w, -v2.xyzx, r2.xyzx
  36: add r0.w, r0.w, r0.w
  37: mad r4.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: dp3_sat r0.w, r2.xyzx, r5.xyzx
  42: dp3 r2.x, r4.xyzx, r5.xyzx
  43: mul r2.x, r2.x, r2.x
  44: mul r2.x, r2.x, r2.x
  45: add r2.y, -cb0[8].w, l(1.000000)
  46: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  47: mul r2.x, r2.x, l(16.000000)
  48: mul r0.xyz, r0.xyzx, r2.xxxx
  49: mad r0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
  50: mul r1.yzw, r0.wwww, r3.xxyz
  51: mul o0.xyz, r0.xyzx, r1.yzwy
  52: mov o0.w, r1.x
  53: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (27..32)
 // Stats for Fragment shader:
 //        d3d11: 2 math, 1 texture
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH 
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_CUBE _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb2[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Cutoff at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[2].w, -cb0[3].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH _ALPHAPREMULTIPLY_ON 
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
   7: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb2[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb2[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb4[18].xyzw
  22: mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb2[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb2[5].y, r0.x, r0.z
  33: mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 32
  Float _Cutoff at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[2].w, -cb0[3].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 17 math
 // Stats for Fragment shader:
 //        d3d11: 13 math, 1 texture
 Pass {
  Name "META"
  Tags { "LIGHTMODE"="META" "RenderType"="Opaque" "PerformanceChecks"="False" }
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d11":
// Stats: 17 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 3 {
  Vector4 unity_LightmapST at 0
  Vector4 unity_DynamicLightmapST at 16
}
Constant Buffer "UnityMetaPass" (48 bytes) on slot 4 {
  VectorBool4 unity_MetaVertexControl at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TEXCOORD                 2   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xy
      dcl_output o0.xyzw
      dcl_output_siv o1.xyzw, position
      dcl_temps 2
   0: eq r0.x, cb0[9].w, l(0.000000)
   1: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   2: mad o0.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   3: mad o0.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: lt r0.x, l(0.000000), v0.z
   5: and r0.z, r0.x, l(0x38d1b717)
   6: mad r0.xy, v3.xyxx, cb3[0].xyxx, cb3[0].zwzz
   7: movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
   8: lt r0.w, l(0.000000), r0.z
   9: and r1.z, r0.w, l(0x38d1b717)
  10: mad r1.xy, v4.xyxx, cb3[1].xyxx, cb3[1].zwzz
  11: movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
  12: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 13 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float unity_OneOverOutputBoost at 176
  Float unity_MaxOutputValue at 180
}
Constant Buffer "UnityMetaPass" (48 bytes) on slot 1 {
  VectorBool4 unity_MetaFragmentControl at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v0.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: add r0.x, -cb0[8].w, l(1.000000)
   1: mul r0.x, r0.x, r0.x
   2: sample r1.xyzw, v0.xyxx, t0.xyzw, s0
   3: mad r0.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
   4: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   5: mad r0.yzw, cb0[8].zzzz, r0.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
   6: mul r0.xyz, r0.xxxx, r0.yzwy
   7: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   9: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  10: log r0.xyz, r0.xyzx
  11: mov_sat r0.w, cb0[11].x
  12: mul r0.xyz, r0.xyzx, r0.wwww
  13: exp r0.xyz, r0.xyzx
  14: min r0.xyz, r0.xyzx, cb0[11].yyyy
  15: mov r0.w, l(1.000000)
  16: movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
  17: movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
  18: ret 
// Approximately 0 instruction slots used


 }
}
CustomEditor "StandardShaderGUI"
Fallback "VertexLit"
}